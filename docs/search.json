[{"path":"https://ieco-lab.github.io/slfSpread/articles/010_initialize_pkg.html","id":"get-package-dependencies","dir":"Articles","previous_headings":"","what":"Get package dependencies","title":"Initialization of renv package for dependencies","text":"Run chunk see dependencies slfSpread package.","code":"library(tidyverse) library(renv) library(here) library(devtools) packages <- renv::dependencies() %>%   # select unique package names   dplyr::summarize(package = sort(unique(Package))) %>%   as.matrix() %>%   as.character()"},{"path":"https://ieco-lab.github.io/slfSpread/articles/010_initialize_pkg.html","id":"retrieve-correct-dependencies-for-slfspread","dir":"Articles","previous_headings":"","what":"Retrieve correct dependencies for slfSpread","title":"Initialization of renv package for dependencies","text":"","code":"# first, check the status of your current package versions vs those in renv renv::status() # you should run this to ensure the correct package versions are used while you are working within this project. This aligns the sys library with the lockfile. renv::restore() # only use this version if you want to edit your system library to match the renv library renv::restore(clean = TRUE)"},{"path":"https://ieco-lab.github.io/slfSpread/articles/010_initialize_pkg.html","id":"troubleshooting","dir":"Articles","previous_headings":"","what":"Troubleshooting","title":"Initialization of renv package for dependencies","text":"first thing try updating R Rtools versions. messed renv quite awhile.","code":"# hydrate() corrected an issue where renv could not discover any local packages in the system library renv::hydrate()  # install specific packages (usually needed for packages not on the CRAN) # you may need to enter your github credentials into the .Renviron or log into github for this to work # first, create a github PAT on website usethis::create_github_token() # enter created PAT (personal access token) into the .Renviron ## be sure to use defaults and allow download and upload of packages gitcreds::gitcreds_set() # now install packages not on the CRAN devtools::install_github(\"densitymodelling/dsmextra\") # dsmextra devtools::install_github(\"ieco-lab/lydemapr\") # lydemapr devtools::install_github(\"jasonleebrown/humboldt\") # humboldt devtools::install_github(\"ropensci/rnaturalearthhires\")# rnaturalearthhires  # renv restore to previous package versions # only use if the current package version need to be reverted to a previous state renv::history() renv::revert(project = \"slfSpread\", commit = \"\")  # repair common issues renv::repair()  # update renv to latest version in this project (but this will differ from the source download of this project folder) renv::upgrade()  # run this to rebuild and reinstall all packages in the library- this starts them from a clean slate renv::rebuild()"},{"path":"https://ieco-lab.github.io/slfSpread/articles/010_initialize_pkg.html","id":"one-time-renv-initialization","dir":"Articles","previous_headings":"","what":"one-time renv initialization","title":"Initialization of renv package for dependencies","text":"created section initialize renv package first time . run section downloaded package outside user.","code":"# initialization of project renv # only run once renv::init()  # record newest package versions in lockfile renv::snapshot()  # update packages # only run as needed if a package breaks or something renv::update() # alternatively, install the latest CRAN versions: renv::install()"},{"path":"https://ieco-lab.github.io/slfSpread/articles/020_retrieve_SLF_records.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Retrieve SLF records from various sources and tidy them for MaxEnt modeling","text":"vignette provide instructions retrieve Lycorma delicatula (SLF) presence records future creation MaxEnt models. MaxEnt presence-modeling software, require recorded absence data predict suitable area SLF. Four categories data sources used analysis: GBIF (Global Biodiversity Information Facility), lydemapR, various pieces peer-reviewed literature, natural history notes. data tidied, spatially thinned compiled single .rds file SLF presence records can loaded MaxEnt. first step retrieve data GBIF lydemapR. GBIF open-access platform biodiversity data gathers various databases citizen science platforms. Data source represents globally distributed presences SLF. lyde() function within Lydemapr package gives access nearly one million SLF presence records within United States, largely obtained biological field surveys various state federal departments agriculture. data need cleaned tidied step. get tidy dataset, data checked inconsistent false records. data also spatially thinned points less 10km (resolution climate data, 5 arcminutes) eliminate effects sampling bias. second step combine records data gathered peer-reviewed literature natural history notes. majority records established populations SLF within China, South Korea southeast Asia. records especially important China southeast Asia represent native range SLF, little data extent native range. records also important MaxEnt correlates presence records local climate; thus, little characterization native range species, unlikely models SLF make realistic predictions potential niche elsewhere. final step analysis organize different datasets single .rds file can loaded MaxEnt. MaxEnt requires input datasets contain 3 columns, order: species (scientific name species), x (longitude), y (latitude). Lastly, data go second round spatial thinning now datasets joined. Note, many chunks require high memory allocation simply take long time run. chunks use humboldt::humboldt.occ.rarefy() spatial thinning take long time run. chunks use spThin::thin() require high memory allocation.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/020_retrieve_SLF_records.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Retrieve SLF records from various sources and tidy them for MaxEnt modeling","text":"First, load necessary packages. Note: setting global options document certain code chunks rendered final .html file. set eval = FALSE none code re-run (preventing files overwritten knitting) simply overwrite chunks plots. compendium functions built tidyverse language. package starts file pathing root folder slfSpread package, allowing easier sharing. rgbif package used query records GBIF, lydemapr package used retrieve field survey data United States. humboldt makes easy spatial thinning points, spThin thorough evocative thinning (used). Package taxize allow retrieval taxonomic IDs within GBIF.","code":"library(tidyverse)  #data manipulation  library(here) #making directory pathways easier on different instances here::here() ## [1] \"C:/Users/tun83449/Documents/GitHub/slfSpread\" # here() is set at the root folder of this package  library(devtools) # installing packages not from CRAN # devtools::install_github(\"ieco-lab/lydemapr\", build_vignettes = FALSE) library(lydemapr) # field survey data for SLF library(taxize) # get taxonomic ids library(rgbif) #query gbif and format as a dataframe  library(spThin) # spatial thinning of occurrence points # install_github(\"jasonleebrown/humboldt\") library(humboldt) # spatial thinning of points library(CoordinateCleaner) # tidying of points  library(patchwork) #nice plots library(knitr) # nice rmd tables"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/020_retrieve_SLF_records.html","id":"gbif-via-rgbif","dir":"Articles","previous_headings":"1. Retrieve data from GBIF and lydemapR and tidy","what":"1.1- GBIF via rgbif","title":"Retrieve SLF records from various sources and tidy them for MaxEnt modeling","text":"begin retrieving GBIF taxonomic ID Lycorma delicatula. also perform operations specific rgbif. need enter user credentials gbif; keep private, edit .Renviron call . chunk run .Renviron pops , enter username, password email credentials following format lines 1-3: GBIF_USER=” ” GBIF_PWD=” ” GBIF_EMAIL=” ” Save close document. also retrieve list country abbreviations tailor download. excluding countries North America (USA, Mexico, Canada) Taiwan. Lin Liao comprehensive survey SLF Taiwan validate SLF presence records online repositories found records likely false (Lin Liao, 2024).","code":"# get species ID from gbif database ids <- taxize::get_ids(sci_com = \"Lycorma delicatula\", db = \"gbif\") ## ══  db: gbif ═════════════════ ## ══  1 queries  ═══════════════ ##  ## Retrieving data for taxon 'Lycorma delicatula' ## ✔  Found:  Lycorma delicatula ## ══  Results  ═════════════════ ##  ## • Total: 1  ## • Found: 1  ## • Not Found: 0 # edit R environment for user credentials usethis::edit_r_environ() ## ☐ Edit C:/Users/tun83449/Documents/.Renviron. ## ☐ Restart R for changes to take effect. # get list of countries rgbif::enumeration_country(curlopts = list()) ##     iso2 iso3 isoNumerical                                                title ## 1     AF  AFG            4                                          Afghanistan ## 2     AX  ALA          248                                        Åland Islands ## 3     AL  ALB            8                                              Albania ## 4     DZ  DZA           12                                              Algeria ## 5     AS  ASM           16                                       American Samoa ## 6     AD  AND           20                                              Andorra ## 7     AO  AGO           24                                               Angola ## 8     AI  AIA          660                                             Anguilla ## 9     AQ  ATA           10                                           Antarctica ## 10    AG  ATG           28                                  Antigua and Barbuda ## 11    AR  ARG           32                                            Argentina ## 12    AM  ARM           51                                              Armenia ## 13    AW  ABW          533                                                Aruba ## 14    AU  AUS           36                                            Australia ## 15    AT  AUT           40                                              Austria ## 16    AZ  AZE           31                                           Azerbaijan ## 17    BS  BHS           44                                              Bahamas ## 18    BH  BHR           48                                              Bahrain ## 19    BD  BGD           50                                           Bangladesh ## 20    BB  BRB           52                                             Barbados ## 21    BY  BLR          112                                              Belarus ## 22    BE  BEL           56                                              Belgium ## 23    BZ  BLZ           84                                               Belize ## 24    BJ  BEN          204                                                Benin ## 25    BM  BMU           60                                              Bermuda ## 26    BT  BTN           64                                               Bhutan ## 27    BO  BOL           68                     Bolivia (Plurinational State of) ## 28    BQ  BES          535                     Bonaire, Sint Eustatius and Saba ## 29    BA  BIH           70                               Bosnia and Herzegovina ## 30    BW  BWA           72                                             Botswana ## 31    BV  BVT           74                                        Bouvet Island ## 32    BR  BRA           76                                               Brazil ## 33    IO  IOT           86                       British Indian Ocean Territory ## 34    BN  BRN           96                                    Brunei Darussalam ## 35    BG  BGR          100                                             Bulgaria ## 36    BF  BFA          854                                         Burkina Faso ## 37    BI  BDI          108                                              Burundi ## 38    KH  KHM          116                                             Cambodia ## 39    CM  CMR          120                                             Cameroon ## 40    CA  CAN          124                                               Canada ## 41    CV  CPV          132                                           Cabo Verde ## 42    KY  CYM          136                                       Cayman Islands ## 43    CF  CAF          140                             Central African Republic ## 44    TD  TCD          148                                                 Chad ## 45    CL  CHL          152                                                Chile ## 46    CN  CHN          156                                                China ## 47    CX  CXR          162                                     Christmas Island ## 48    CC  CCK          166                              Cocos (Keeling) Islands ## 49    CO  COL          170                                             Colombia ## 50    KM  COM          174                                              Comoros ## 51    CD  COD          180                    Congo, Democratic Republic of the ## 52    CG  COG          178                                                Congo ## 53    CK  COK          184                                         Cook Islands ## 54    CR  CRI          188                                           Costa Rica ## 55    CI  CIV          384                                        Côte d’Ivoire ## 56    HR  HRV          191                                              Croatia ## 57    CU  CUB          192                                                 Cuba ## 58    CW  CUW          531                                              Curaçao ## 59    CY  CYP          196                                               Cyprus ## 60    CZ  CZE          203                                              Czechia ## 61    DK  DNK          208                                              Denmark ## 62    DJ  DJI          262                                             Djibouti ## 63    DM  DMA          212                                             Dominica ## 64    DO  DOM          214                                   Dominican Republic ## 65    EC  ECU          218                                              Ecuador ## 66    EG  EGY          818                                                Egypt ## 67    SV  SLV          222                                          El Salvador ## 68    GQ  GNQ          226                                    Equatorial Guinea ## 69    ER  ERI          232                                              Eritrea ## 70    EE  EST          233                                              Estonia ## 71    ET  ETH          231                                             Ethiopia ## 72    FK  FLK          238                          Falkland Islands (Malvinas) ## 73    FO  FRO          234                                        Faroe Islands ## 74    FJ  FJI          242                                                 Fiji ## 75    FI  FIN          246                                              Finland ## 76    FR  FRA          250                                               France ## 77    GF  GUF          254                                        French Guiana ## 78    PF  PYF          258                                     French Polynesia ## 79    TF  ATF          260                          French Southern Territories ## 80    GA  GAB          266                                                Gabon ## 81    GM  GMB          270                                               Gambia ## 82    GE  GEO          268                                              Georgia ## 83    DE  DEU          276                                              Germany ## 84    GH  GHA          288                                                Ghana ## 85    GI  GIB          292                                            Gibraltar ## 86    GR  GRC          300                                               Greece ## 87    GL  GRL          304                                            Greenland ## 88    GD  GRD          308                                              Grenada ## 89    GP  GLP          312                                           Guadeloupe ## 90    GU  GUM          316                                                 Guam ## 91    GT  GTM          320                                            Guatemala ## 92    GG  GGY          831                                             Guernsey ## 93    GN  GIN          324                                               Guinea ## 94    GW  GNB          624                                        Guinea-Bissau ## 95    GY  GUY          328                                               Guyana ## 96    HT  HTI          332                                                Haiti ## 97    HM  HMD          334                    Heard Island and McDonald Islands ## 98    VA  VAT          336                                             Holy See ## 99    HN  HND          340                                             Honduras ## 100   HK  HKG          344                                            Hong Kong ## 101   HU  HUN          348                                              Hungary ## 102   IS  ISL          352                                              Iceland ## 103   IN  IND          356                                                India ## 104   ID  IDN          360                                            Indonesia ## 105   IR  IRN          364                           Iran (Islamic Republic of) ## 106   IQ  IRQ          368                                                 Iraq ## 107   IE  IRL          372                                              Ireland ## 108   IM  IMN          833                                          Isle of Man ## 109   IL  ISR          376                                               Israel ## 110   IT  ITA          380                                                Italy ## 111   JM  JAM          388                                              Jamaica ## 112   JP  JPN          392                                                Japan ## 113   JE  JEY          832                                               Jersey ## 114   JO  JOR          400                                               Jordan ## 115   KZ  KAZ          398                                           Kazakhstan ## 116   KE  KEN          404                                                Kenya ## 117   KI  KIR          296                                             Kiribati ## 118   KP  PRK          408              Korea (Democratic People’s Republic of) ## 119   KR  KOR          410                                   Korea, Republic of ## 120   KW  KWT          414                                               Kuwait ## 121   KG  KGZ          417                                           Kyrgyzstan ## 122   LA  LAO          418                     Lao People’s Democratic Republic ## 123   LV  LVA          428                                               Latvia ## 124   LB  LBN          422                                              Lebanon ## 125   LS  LSO          426                                              Lesotho ## 126   LR  LBR          430                                              Liberia ## 127   LY  LBY          434                                                Libya ## 128   LI  LIE          438                                        Liechtenstein ## 129   LT  LTU          440                                            Lithuania ## 130   LU  LUX          442                                           Luxembourg ## 131   MO  MAC          446                                                Macao ## 132   MK  MKD          807                                      North Macedonia ## 133   MG  MDG          450                                           Madagascar ## 134   MW  MWI          454                                               Malawi ## 135   MY  MYS          458                                             Malaysia ## 136   MV  MDV          462                                             Maldives ## 137   ML  MLI          466                                                 Mali ## 138   MT  MLT          470                                                Malta ## 139   MH  MHL          584                                     Marshall Islands ## 140   MQ  MTQ          474                                           Martinique ## 141   MR  MRT          478                                           Mauritania ## 142   MU  MUS          480                                            Mauritius ## 143   YT  MYT          175                                              Mayotte ## 144   MX  MEX          484                                               Mexico ## 145   FM  FSM          583                     Micronesia (Federated States of) ## 146   MD  MDA          498                                 Moldova, Republic of ## 147   MC  MCO          492                                               Monaco ## 148   MN  MNG          496                                             Mongolia ## 149   ME  MNE          499                                           Montenegro ## 150   MS  MSR          500                                           Montserrat ## 151   MA  MAR          504                                              Morocco ## 152   MZ  MOZ          508                                           Mozambique ## 153   MM  MMR          104                                              Myanmar ## 154   NA  NAM          516                                              Namibia ## 155   NR  NRU          520                                                Nauru ## 156   NP  NPL          524                                                Nepal ## 157   NL  NLD          528                                          Netherlands ## 158   NC  NCL          540                                        New Caledonia ## 159   NZ  NZL          554                                          New Zealand ## 160   NI  NIC          558                                            Nicaragua ## 161   NE  NER          562                                                Niger ## 162   NG  NGA          566                                              Nigeria ## 163   NU  NIU          570                                                 Niue ## 164   NF  NFK          574                                       Norfolk Island ## 165   MP  MNP          580                             Northern Mariana Islands ## 166   NO  NOR          578                                               Norway ## 167   OM  OMN          512                                                 Oman ## 168   PK  PAK          586                                             Pakistan ## 169   PW  PLW          585                                                Palau ## 170   PS  PSE          275                                  Palestine, State of ## 171   PA  PAN          591                                               Panama ## 172   PG  PNG          598                                     Papua New Guinea ## 173   PY  PRY          600                                             Paraguay ## 174   PE  PER          604                                                 Peru ## 175   PH  PHL          608                                          Philippines ## 176   PN  PCN          612                                             Pitcairn ## 177   PL  POL          616                                               Poland ## 178   PT  PRT          620                                             Portugal ## 179   PR  PRI          630                                          Puerto Rico ## 180   QA  QAT          634                                                Qatar ## 181   RE  REU          638                                              Réunion ## 182   RO  ROU          642                                              Romania ## 183   RU  RUS          643                                   Russian Federation ## 184   RW  RWA          646                                               Rwanda ## 185   BL  BLM          652                                     Saint Barthélemy ## 186   SH  SHN          654         Saint Helena, Ascension and Tristan da Cunha ## 187   KN  KNA          659                                Saint Kitts and Nevis ## 188   LC  LCA          662                                          Saint Lucia ## 189   MF  MAF          663                           Saint Martin (French part) ## 190   PM  SPM          666                            Saint Pierre and Miquelon ## 191   VC  VCT          670                     Saint Vincent and the Grenadines ## 192   WS  WSM          882                                                Samoa ## 193   SM  SMR          674                                           San Marino ## 194   ST  STP          678                                Sao Tome and Principe ## 195   SA  SAU          682                                         Saudi Arabia ## 196   SN  SEN          686                                              Senegal ## 197   RS  SRB          688                                               Serbia ## 198   SC  SYC          690                                           Seychelles ## 199   SL  SLE          694                                         Sierra Leone ## 200   SG  SGP          702                                            Singapore ## 201   SX  SXM          534                            Sint Maarten (Dutch part) ## 202   SK  SVK          703                                             Slovakia ## 203   SI  SVN          705                                             Slovenia ## 204   SB  SLB           90                                      Solomon Islands ## 205   SO  SOM          706                                              Somalia ## 206   ZA  ZAF          710                                         South Africa ## 207   GS  SGS          239         South Georgia and the South Sandwich Islands ## 208   SS  SSD          728                                          South Sudan ## 209   ES  ESP          724                                                Spain ## 210   LK  LKA          144                                            Sri Lanka ## 211   SD  SDN          729                                                Sudan ## 212   SR  SUR          740                                             Suriname ## 213   SJ  SJM          744                               Svalbard and Jan Mayen ## 214   SZ  SWZ          748                                             Eswatini ## 215   SE  SWE          752                                               Sweden ## 216   CH  CHE          756                                          Switzerland ## 217   SY  SYR          760                                 Syrian Arab Republic ## 218   TW  TWN          158                                       Chinese Taipei ## 219   TJ  TJK          762                                           Tajikistan ## 220   TZ  TZA          834                         Tanzania, United Republic of ## 221   TH  THA          764                                             Thailand ## 222   TL  TLS          626                                          Timor-Leste ## 223   TG  TGO          768                                                 Togo ## 224   TK  TKL          772                                              Tokelau ## 225   TO  TON          776                                                Tonga ## 226   TT  TTO          780                                  Trinidad and Tobago ## 227   TN  TUN          788                                              Tunisia ## 228   TR  TUR          792                                              Türkiye ## 229   TM  TKM          795                                         Turkmenistan ## 230   TC  TCA          796                             Turks and Caicos Islands ## 231   TV  TUV          798                                               Tuvalu ## 232   UG  UGA          800                                               Uganda ## 233   UA  UKR          804                                              Ukraine ## 234   AE  ARE          784                                 United Arab Emirates ## 235   GB  GBR          826 United Kingdom of Great Britain and Northern Ireland ## 236   US  USA          840                             United States of America ## 237   UM  UMI          581                 United States Minor Outlying Islands ## 238   UY  URY          858                                              Uruguay ## 239   UZ  UZB          860                                           Uzbekistan ## 240   VU  VUT          548                                              Vanuatu ## 241   VE  VEN          862                   Venezuela (Bolivarian Republic of) ## 242   VN  VNM          704                                             Viet Nam ## 243   VG  VGB           92                             Virgin Islands (British) ## 244   VI  VIR          850                                Virgin Islands (U.S.) ## 245   WF  WLF          876                                    Wallis and Futuna ## 246   EH  ESH          732                                       Western Sahara ## 247   YE  YEM          887                                                Yemen ## 248   ZM  ZMB          894                                               Zambia ## 249   ZW  ZWE          716                                             Zimbabwe ## 250   XK  XKX          902                                               Kosovo ##        gbifRegion                                enumName ## 1            ASIA                             AFGHANISTAN ## 2          EUROPE                           ALAND_ISLANDS ## 3          EUROPE                                 ALBANIA ## 4          AFRICA                                 ALGERIA ## 5         OCEANIA                          AMERICAN_SAMOA ## 6          EUROPE                                 ANDORRA ## 7          AFRICA                                  ANGOLA ## 8   LATIN_AMERICA                                ANGUILLA ## 9      ANTARCTICA                              ANTARCTICA ## 10  LATIN_AMERICA                         ANTIGUA_BARBUDA ## 11  LATIN_AMERICA                               ARGENTINA ## 12         EUROPE                                 ARMENIA ## 13  LATIN_AMERICA                                   ARUBA ## 14        OCEANIA                               AUSTRALIA ## 15         EUROPE                                 AUSTRIA ## 16         EUROPE                              AZERBAIJAN ## 17  LATIN_AMERICA                                 BAHAMAS ## 18           ASIA                                 BAHRAIN ## 19           ASIA                              BANGLADESH ## 20  LATIN_AMERICA                                BARBADOS ## 21         EUROPE                                 BELARUS ## 22         EUROPE                                 BELGIUM ## 23  LATIN_AMERICA                                  BELIZE ## 24         AFRICA                                   BENIN ## 25  LATIN_AMERICA                                 BERMUDA ## 26           ASIA                                  BHUTAN ## 27  LATIN_AMERICA                                 BOLIVIA ## 28  LATIN_AMERICA             BONAIRE_SINT_EUSTATIUS_SABA ## 29         EUROPE                      BOSNIA_HERZEGOVINA ## 30         AFRICA                                BOTSWANA ## 31     ANTARCTICA                           BOUVET_ISLAND ## 32  LATIN_AMERICA                                  BRAZIL ## 33           ASIA          BRITISH_INDIAN_OCEAN_TERRITORY ## 34           ASIA                       BRUNEI_DARUSSALAM ## 35         EUROPE                                BULGARIA ## 36         AFRICA                            BURKINA_FASO ## 37         AFRICA                                 BURUNDI ## 38           ASIA                                CAMBODIA ## 39         AFRICA                                CAMEROON ## 40  NORTH_AMERICA                                  CANADA ## 41         AFRICA                              CAPE_VERDE ## 42  LATIN_AMERICA                          CAYMAN_ISLANDS ## 43         AFRICA                CENTRAL_AFRICAN_REPUBLIC ## 44         AFRICA                                    CHAD ## 45  LATIN_AMERICA                                   CHILE ## 46           ASIA                                   CHINA ## 47           ASIA                        CHRISTMAS_ISLAND ## 48           ASIA                           COCOS_ISLANDS ## 49  LATIN_AMERICA                                COLOMBIA ## 50         AFRICA                                 COMOROS ## 51         AFRICA               CONGO_DEMOCRATIC_REPUBLIC ## 52         AFRICA                                   CONGO ## 53        OCEANIA                            COOK_ISLANDS ## 54  LATIN_AMERICA                              COSTA_RICA ## 55         AFRICA                            CÔTE_DIVOIRE ## 56         EUROPE                                 CROATIA ## 57  LATIN_AMERICA                                    CUBA ## 58  LATIN_AMERICA                                 CURAÇAO ## 59         EUROPE                                  CYPRUS ## 60         EUROPE                          CZECH_REPUBLIC ## 61         EUROPE                                 DENMARK ## 62         AFRICA                                DJIBOUTI ## 63  LATIN_AMERICA                                DOMINICA ## 64  LATIN_AMERICA                      DOMINICAN_REPUBLIC ## 65  LATIN_AMERICA                                 ECUADOR ## 66         AFRICA                                   EGYPT ## 67  LATIN_AMERICA                             EL_SALVADOR ## 68         AFRICA                       EQUATORIAL_GUINEA ## 69         AFRICA                                 ERITREA ## 70         EUROPE                                 ESTONIA ## 71         AFRICA                                ETHIOPIA ## 72  LATIN_AMERICA                        FALKLAND_ISLANDS ## 73         EUROPE                           FAROE_ISLANDS ## 74        OCEANIA                                    FIJI ## 75         EUROPE                                 FINLAND ## 76         EUROPE                                  FRANCE ## 77  LATIN_AMERICA                           FRENCH_GUIANA ## 78        OCEANIA                        FRENCH_POLYNESIA ## 79     ANTARCTICA             FRENCH_SOUTHERN_TERRITORIES ## 80         AFRICA                                   GABON ## 81         AFRICA                                  GAMBIA ## 82         EUROPE                                 GEORGIA ## 83         EUROPE                                 GERMANY ## 84         AFRICA                                   GHANA ## 85         EUROPE                               GIBRALTAR ## 86         EUROPE                                  GREECE ## 87  NORTH_AMERICA                               GREENLAND ## 88  LATIN_AMERICA                                 GRENADA ## 89  LATIN_AMERICA                              GUADELOUPE ## 90        OCEANIA                                    GUAM ## 91  LATIN_AMERICA                               GUATEMALA ## 92         EUROPE                                GUERNSEY ## 93         AFRICA                                  GUINEA ## 94         AFRICA                           GUINEA_BISSAU ## 95  LATIN_AMERICA                                  GUYANA ## 96  LATIN_AMERICA                                   HAITI ## 97     ANTARCTICA                  HEARD_MCDONALD_ISLANDS ## 98         EUROPE                                 VATICAN ## 99  LATIN_AMERICA                                HONDURAS ## 100          ASIA                               HONG_KONG ## 101        EUROPE                                 HUNGARY ## 102        EUROPE                                 ICELAND ## 103          ASIA                                   INDIA ## 104          ASIA                               INDONESIA ## 105          ASIA                                    IRAN ## 106          ASIA                                    IRAQ ## 107        EUROPE                                 IRELAND ## 108        EUROPE                             ISLE_OF_MAN ## 109        EUROPE                                  ISRAEL ## 110        EUROPE                                   ITALY ## 111 LATIN_AMERICA                                 JAMAICA ## 112          ASIA                                   JAPAN ## 113        EUROPE                                  JERSEY ## 114          ASIA                                  JORDAN ## 115        EUROPE                              KAZAKHSTAN ## 116        AFRICA                                   KENYA ## 117       OCEANIA                                KIRIBATI ## 118          ASIA                             KOREA_NORTH ## 119          ASIA                             KOREA_SOUTH ## 120          ASIA                                  KUWAIT ## 121        EUROPE                              KYRGYZSTAN ## 122          ASIA                                     LAO ## 123        EUROPE                                  LATVIA ## 124          ASIA                                 LEBANON ## 125        AFRICA                                 LESOTHO ## 126        AFRICA                                 LIBERIA ## 127        AFRICA                                   LIBYA ## 128        EUROPE                           LIECHTENSTEIN ## 129        EUROPE                               LITHUANIA ## 130        EUROPE                              LUXEMBOURG ## 131          ASIA                                   MACAO ## 132        EUROPE                               MACEDONIA ## 133        AFRICA                              MADAGASCAR ## 134        AFRICA                                  MALAWI ## 135          ASIA                                MALAYSIA ## 136          ASIA                                MALDIVES ## 137        AFRICA                                    MALI ## 138        EUROPE                                   MALTA ## 139       OCEANIA                        MARSHALL_ISLANDS ## 140 LATIN_AMERICA                              MARTINIQUE ## 141        AFRICA                              MAURITANIA ## 142        AFRICA                               MAURITIUS ## 143        AFRICA                                 MAYOTTE ## 144 LATIN_AMERICA                                  MEXICO ## 145       OCEANIA                              MICRONESIA ## 146        EUROPE                                 MOLDOVA ## 147        EUROPE                                  MONACO ## 148          ASIA                                MONGOLIA ## 149        EUROPE                              MONTENEGRO ## 150 LATIN_AMERICA                              MONTSERRAT ## 151        AFRICA                                 MOROCCO ## 152        AFRICA                              MOZAMBIQUE ## 153          ASIA                                 MYANMAR ## 154        AFRICA                                 NAMIBIA ## 155       OCEANIA                                   NAURU ## 156          ASIA                                   NEPAL ## 157        EUROPE                             NETHERLANDS ## 158       OCEANIA                           NEW_CALEDONIA ## 159       OCEANIA                             NEW_ZEALAND ## 160 LATIN_AMERICA                               NICARAGUA ## 161        AFRICA                                   NIGER ## 162        AFRICA                                 NIGERIA ## 163       OCEANIA                                    NIUE ## 164       OCEANIA                          NORFOLK_ISLAND ## 165       OCEANIA                NORTHERN_MARIANA_ISLANDS ## 166        EUROPE                                  NORWAY ## 167          ASIA                                    OMAN ## 168          ASIA                                PAKISTAN ## 169       OCEANIA                                   PALAU ## 170          ASIA                   PALESTINIAN_TERRITORY ## 171 LATIN_AMERICA                                  PANAMA ## 172       OCEANIA                        PAPUA_NEW_GUINEA ## 173 LATIN_AMERICA                                PARAGUAY ## 174 LATIN_AMERICA                                    PERU ## 175          ASIA                             PHILIPPINES ## 176       OCEANIA                                PITCAIRN ## 177        EUROPE                                  POLAND ## 178        EUROPE                                PORTUGAL ## 179 LATIN_AMERICA                             PUERTO_RICO ## 180          ASIA                                   QATAR ## 181        AFRICA                                 RÉUNION ## 182        EUROPE                                 ROMANIA ## 183        EUROPE                      RUSSIAN_FEDERATION ## 184        AFRICA                                  RWANDA ## 185 LATIN_AMERICA                        SAINT_BARTHÉLEMY ## 186        AFRICA SAINT_HELENA_ASCENSION_TRISTAN_DA_CUNHA ## 187 LATIN_AMERICA                       SAINT_KITTS_NEVIS ## 188 LATIN_AMERICA                             SAINT_LUCIA ## 189 LATIN_AMERICA                     SAINT_MARTIN_FRENCH ## 190 NORTH_AMERICA                   SAINT_PIERRE_MIQUELON ## 191 LATIN_AMERICA                SAINT_VINCENT_GRENADINES ## 192       OCEANIA                                   SAMOA ## 193        EUROPE                              SAN_MARINO ## 194        AFRICA                       SAO_TOME_PRINCIPE ## 195          ASIA                            SAUDI_ARABIA ## 196        AFRICA                                 SENEGAL ## 197        EUROPE                                  SERBIA ## 198        AFRICA                              SEYCHELLES ## 199        AFRICA                            SIERRA_LEONE ## 200          ASIA                               SINGAPORE ## 201 LATIN_AMERICA                            SINT_MAARTEN ## 202        EUROPE                                SLOVAKIA ## 203        EUROPE                                SLOVENIA ## 204       OCEANIA                         SOLOMON_ISLANDS ## 205        AFRICA                                 SOMALIA ## 206        AFRICA                            SOUTH_AFRICA ## 207    ANTARCTICA          SOUTH_GEORGIA_SANDWICH_ISLANDS ## 208        AFRICA                             SOUTH_SUDAN ## 209        EUROPE                                   SPAIN ## 210          ASIA                               SRI_LANKA ## 211        AFRICA                                   SUDAN ## 212 LATIN_AMERICA                                SURINAME ## 213        EUROPE                      SVALBARD_JAN_MAYEN ## 214        AFRICA                               SWAZILAND ## 215        EUROPE                                  SWEDEN ## 216        EUROPE                             SWITZERLAND ## 217          ASIA                                   SYRIA ## 218          ASIA                                  TAIWAN ## 219        EUROPE                              TAJIKISTAN ## 220        AFRICA                                TANZANIA ## 221          ASIA                                THAILAND ## 222          ASIA                             TIMOR_LESTE ## 223        AFRICA                                    TOGO ## 224       OCEANIA                                 TOKELAU ## 225       OCEANIA                                   TONGA ## 226 LATIN_AMERICA                         TRINIDAD_TOBAGO ## 227        AFRICA                                 TUNISIA ## 228        EUROPE                                  TURKEY ## 229        EUROPE                            TURKMENISTAN ## 230 LATIN_AMERICA                    TURKS_CAICOS_ISLANDS ## 231       OCEANIA                                  TUVALU ## 232        AFRICA                                  UGANDA ## 233        EUROPE                                 UKRAINE ## 234          ASIA                    UNITED_ARAB_EMIRATES ## 235        EUROPE                          UNITED_KINGDOM ## 236 NORTH_AMERICA                           UNITED_STATES ## 237       OCEANIA          UNITED_STATES_OUTLYING_ISLANDS ## 238 LATIN_AMERICA                                 URUGUAY ## 239        EUROPE                              UZBEKISTAN ## 240       OCEANIA                                 VANUATU ## 241 LATIN_AMERICA                               VENEZUELA ## 242          ASIA                                 VIETNAM ## 243 LATIN_AMERICA                  VIRGIN_ISLANDS_BRITISH ## 244 LATIN_AMERICA                          VIRGIN_ISLANDS ## 245       OCEANIA                           WALLIS_FUTUNA ## 246        AFRICA                          WESTERN_SAHARA ## 247          ASIA                                   YEMEN ## 248        AFRICA                                  ZAMBIA ## 249        AFRICA                                ZIMBABWE ## 250        EUROPE                                  KOSOVO"},{"path":"https://ieco-lab.github.io/slfSpread/articles/020_retrieve_SLF_records.html","id":"retrieve-and-save-records","dir":"Articles","previous_headings":"1. Retrieve data from GBIF and lydemapR and tidy > 1.1- GBIF via rgbif","what":"Retrieve and save records","title":"Retrieve SLF records from various sources and tidy them for MaxEnt modeling","text":"retrieved ID 5157899. matches ID SLF repository GBIF. Next, retrieve GBIF records using occ_download(). editing following GBIF constraints: hasCoordinate: limit records coordinate data year: retrieve records 1981 2023. 1981 chosen earliest date corresponds earliest climate data available. occurrenceStatus: set presences, absence data needed basisOfRecord: include everything except fossil records, ensure records within target time period. hasGeospatialIssue: exclude records issue coordinate data country: country record data pulled gbif server, now must download data edit number ways. First, import dataset working directory. also retrieve data citation download. rename raw download file. Finally, subset desired columns save separate .csv use tidying. raw query raw coordinates saved data-raw folder. read coordinate data saved afterwards prepare data tidying. data citation: “GBIF Occurrence Download https://doi.org/10.15468/dl.59gndc Accessed R via rgbif (https://github.com/ropensci/rgbif) 2024-08-05”","code":"# initiate download slf_gbif <- rgbif::occ_download(   # general formatting   type = \"and\",   format = \"SIMPLE_CSV\",   # inclusion rules   pred(\"taxonKey\", ids[[1]]), # search by ID, not species name   pred(\"hasCoordinate\", TRUE),   pred(\"hasGeospatialIssue\", FALSE),   pred(\"occurrenceStatus\", \"PRESENT\"),   pred_gte(\"year\", 1981), # records from 1981 onwards   # exclusion rules   pred_not(pred_in(\"basisOfRecord\", \"FOSSIL_SPECIMEN\")), # exclude fossil records   pred_not(pred_in(\"country\", c(\"US\", \"MX\", \"CA\"))), # exclude USA, Canada and mexico   pred_not(pred_in(\"country\", c(\"TW\"))) )  # be sure to open slf_gbif and retrieve the download key  # check on download status using key occ_download_wait('0049348-240626123714530') ## status: succeeded ## download is done, status: succeeded ## <<gbif download metadata>> ##   Status: SUCCEEDED ##   DOI: 10.15468/dl.59gndc ##   Format: SIMPLE_CSV ##   Download key: 0049348-240626123714530 ##   Created: 2024-08-05T15:55:28.927+00:00 ##   Modified: 2024-08-05T15:56:11.546+00:00 ##   Download link: https://api.gbif.org/v1/occurrence/download/request/0049348-240626123714530.zip ##   Total records: 1498 # download the data as a zip to PC slf_gbif_download <- occ_download_get(   key = '0049348-240626123714530',   path = file.path(here::here(), \"data-raw\"),   # overwrite = TRUE   ) %>%    occ_download_import()   # .zip file # unzip utils::unzip(   zipfile = file.path(here::here(), \"data-raw\", \"0049348-240626123714530.zip\"),   exdir =  file.path(here::here(), \"data-raw\")   ) # rename .csv file file.rename(   from = file.path(here::here(), \"data-raw\", \"0049348-240626123714530.csv\"),   to = file.path(here::here(), \"data-raw\", paste0(\"slf_gbif_raw_query_\", format(Sys.Date(), \"%Y-%m-%d\"), \".csv\"))   ) # delete original zip file.remove(file.path(here::here(), \"data-raw\", \"0049348-240626123714530.zip\"))    # simplify download into more useable .csv slf_gbif_download_simple <- slf_gbif_download %>%   mutate(prov = \"gbif\") %>%   dplyr::select(c(\"species\", \"decimalLongitude\", \"decimalLatitude\", \"countryCode\", \"prov\", \"year\", \"gbifID\")) %>% # select desired columns   # rename for consistency with rest of vignette   rename(\"name\" = \"species\",          \"longitude\" = \"decimalLongitude\",           \"latitude\" = \"decimalLatitude\",          \"key\" = \"gbifID\"   )  # save .csv output for use write_csv(x = slf_gbif_download_simple,            file = file.path(here::here(), \"data-raw\", paste0(\"slf_gbif_raw_coords_\", format(Sys.Date(), \"%Y-%m-%d\"), \".csv\")) ) gbif_citation('0049348-240626123714530') ## $download ## [1] \"GBIF Occurrence Download https://doi.org/10.15468/dl.59gndc Accessed from R via rgbif (https://github.com/ropensci/rgbif) on 2024-08-05\" ##  ## $datasets ## NULL"},{"path":"https://ieco-lab.github.io/slfSpread/articles/020_retrieve_SLF_records.html","id":"coordinate-veracity","dir":"Articles","previous_headings":"1. Retrieve data from GBIF and lydemapR and tidy > 1.1- GBIF via rgbif","what":"Coordinate veracity","title":"Retrieve SLF records from various sources and tidy them for MaxEnt modeling","text":"First, want check coordinate veracity using CoordinateCleaner package. picky apply tests GBIF data points datasets usually less accurate field survey data. valid likely coordinates points set centroid country province coordinates fall ocean duplicates points equal lat / lon points near GBIF HQ points near biodiv institutions points near whole lat / lon numbers seems like records removed duplicate records, followed records flagged ocean bodies water. also find records attributed biodiversity institutions country / province centroids. Next, filter problematic points ensure species naming consistent. Next, use humboldt::humboldt.occ.rarefy() spatially thin occurrence data. Humboldt package chosen perform initial thinning preserves non-coordinate data output. , can save spatially thinned version data information (unique keys dates) might useful later. humboldt::humboldt.occ.rarefy(), data rarefied 10km 10 passes. done final dataset. Spatial thinning reduce autocorrelation sampling bias. programmed function rarefy 10km. resolution climate data use CHELSA (30 arc-seconds, roughly 1km equator), aggregating 10km taking mean value per cell. way, one occurrence left per grid cell. Spatial thinning left 505 1,489 observations. save results cleaning just performed can referenced called later analysis. Later vignette, combining records data sources final dataset prepared MaxEnt.","code":"# read in data slf_gbif_coords1 <- readr::read_csv(file = file.path(here::here(), \"data-raw\", \"slf_gbif_raw_coords_2024-08-05.csv\"))  # coordinate cleaner slf_gbif_report <- CoordinateCleaner::clean_coordinates(   x = slf_gbif_coords1,    lon = \"longitude\",   lat = \"latitude\",   species = \"name\",   tests = c(\"centroids\", \"duplicates\", \"equal\", \"gbif\", \"institutions\", \"seas\", \"zeros\"),   # test details   seas_scale = 110,   centroids_detail = \"both\" ) %>%   as.data.frame() # remove flagged records slf_gbif_coords1 <- slf_gbif_report %>%   dplyr::filter(.summary == TRUE) # FALSE records are potentially problematic  # check species name unique(slf_gbif_coords1$name)  # there is only one naming convention  # rename species name #slf_gbif_coords1$name <- \"Lycorma delicatula\" set.seed(997)  slf_gbif_coords2 <- humboldt::humboldt.occ.rarefy(   in.pts = slf_gbif_coords1,    colxy = 2:3, # coordinate columns   rarefy.dist = 10,    rarefy.units = \"km\",    run.silent.rar = F # display progress bars   ) if(FALSE){      write_csv(slf_gbif_coords2, file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"slf_gbif_cleaned_coords_2024-08-05.csv\"))      # also save as a .rds file   write_rds(slf_gbif_coords2, file = file.path(here::here(), \"data\", \"slf_gbif_cleaned_coords_2024-08-05.rds\"))    }"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/020_retrieve_SLF_records.html","id":"retrieve-and-save-lydemapr-records","dir":"Articles","previous_headings":"1. Retrieve data from GBIF and lydemapR and tidy > 1.2- LydemapR","what":"Retrieve and save lydemapR records","title":"Retrieve SLF records from various sources and tidy them for MaxEnt modeling","text":"Next, retrieve data lydemapR package save .csv. repeat spatial thinning cleaning process outlined . next chunk import unpublished version lydemapr dataset. version published package soon, now use . file named “slf_lyde_raw_coords_2024-07-29.csv” consistency previous file naming. contains 900,000 published SLF records includes years 2022 2023. raw dataset composed 658,000 records SLF USA alone. records concentrated mid-atlantic region invasion front progressing. dataset also need run spatial thinning. First, need narrow records fit needs. time writing , interested records collected field surveys, can tuned needs analysis. , set collection method equal value “field_survey/management”. Obviously, also interested presence records . Lastly, pull records areas SLF established population. LydemapR defines established population either 2+ adults presence 1 egg mass. data fit needs 39,000 records total.","code":"slf_lyde <- lydemapr::lyde  write_csv(x = slf_lyde,            file = file.path(here::here(), \"data-raw\", paste0(\"slf_lyde_raw_coords_\", format(Sys.Date(), \"%Y-%m-%d\"), \".csv\"))) if (FALSE) {      slf_lyde_raw <- readr::read_csv(file = file.path(here::here(), \"data-raw\", \"slf_lyde_raw_coords_2024-07-29.csv\"))    # tidy   slf_lyde_raw <- dplyr::select(slf_lyde_raw, -survey)       # overwrite save original version   write_csv(x = slf_lyde_raw, file = file.path(here::here(), \"data-raw\", \"slf_lyde_raw_coords_2024-07-29.csv\"))    } # read in data slf_lyde <- readr::read_csv(file = file.path(here::here(), \"data-raw\", \"slf_lyde_raw_coords_2024-07-29.csv\"))  # unique values for collection method unique(slf_lyde$collection_method)  slf_lyde1 <- slf_lyde %>%   dplyr::filter(lyde_present == \"TRUE\", # only select presences          collection_method == \"field_survey/management\", # collection method = \"field_survey/management\"          lyde_established == \"TRUE\") %>% # only select areas records that are from established populations   # add species column   dplyr::mutate(species = \"Lycorma delicatula\")"},{"path":"https://ieco-lab.github.io/slfSpread/articles/020_retrieve_SLF_records.html","id":"coordinate-veracity-1","dir":"Articles","previous_headings":"1. Retrieve data from GBIF and lydemapR and tidy > 1.2- LydemapR","what":"Coordinate veracity","title":"Retrieve SLF records from various sources and tidy them for MaxEnt modeling","text":"run data cleaning process performed GBIF data. , majority duplicates, followed fell bodies water. Spatial thinning lyde dataset left 366 points 39,000 points fit needs.","code":"# coordinate cleaner slf_lyde_report <- CoordinateCleaner::clean_coordinates(   x = slf_lyde1,    lon = \"longitude\",   lat = \"latitude\",   species = \"species\",   tests = c(\"centroids\", \"duplicates\", \"equal\", \"gbif\", \"institutions\", \"seas\", \"zeros\"),   # test details   seas_scale = 110,   centroids_detail = \"both\" ) %>%   as.data.frame()  # remove flagged records slf_lyde1 <- slf_lyde_report %>%   dplyr::filter(.summary == TRUE) # FALSE records are potentially problematic set.seed(998)  slf_lyde2 <- humboldt::humboldt.occ.rarefy(   in.pts = slf_lyde1,    colxy = 4:5, # coordinate columns   rarefy.dist = 10,    rarefy.units = \"km\",    run.silent.rar = F # display progress bars   ) write_csv(slf_lyde2, file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"slf_lyde_cleaned_coords_2024-07-29.csv\"))  # also save as a .rds file write_rds(slf_lyde2, file = file.path(here::here(), \"data\", \"slf_lyde_cleaned_coords_2024-07-29.rds\"))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/020_retrieve_SLF_records.html","id":"visualize-slf-distributions","dir":"Articles","previous_headings":"1. Retrieve data from GBIF and lydemapR and tidy","what":"1.3- Visualize SLF distributions","title":"Retrieve SLF records from various sources and tidy them for MaxEnt modeling","text":"want visualize difference raw coordinates pulled GBIF cleaned, spatially thinned version. ensure proper geospatial coverage success spatial thinning runs.  mapping, seems spatial thinning reduced GBIF records, preserving spatial extent. also zoom invaded range, indeed every blue point paired least 1 darkorange point. , goal met! LydemapR data ensure spatial thinning success.  spatial thinning successful! However, first plot help us understand data eliminated spatial thinning. issue lost spatial extent removing certain types data. believe likely due preference records represent established populations excluding regulatory incidents unconfirmed populations, plot reduced raw dataset vs thinned dataset. Indeed, regulatory incidents unconfirmed populations account populations excluded (want ).","code":"# raw data gbif_raw <- readr::read_csv(file = file.path(here::here(), \"data-raw\", \"slf_gbif_raw_coords_2024-08-05.csv\")) ## Rows: 1498 Columns: 7 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr (3): name, countryCode, prov ## dbl (4): longitude, latitude, year, key ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. # thinned data gbif_thinned <- readr::read_csv(file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"slf_gbif_cleaned_coords_2024-08-05.csv\")) ## Rows: 488 Columns: 15 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr (2): name, prov ## dbl (4): longitude, latitude, year, key ## lgl (9): .val, .equ, .zer, .cen, .sea, .gbf, .inst, .dpl, .summary ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. # plot world map map_gbif_thinned <- ggplot() +   # the second line is a basemap from ggplot2   geom_polygon(data = map_data('world'), aes(x = long, y = lat, group = group), fill = NA, color = \"black\", lwd = 0.15) +   geom_point(data = gbif_raw, aes(x = longitude, y = latitude), color = \"blue\", size = 2) +   geom_point(data = gbif_thinned, aes(x = longitude, y = latitude), color = \"darkorange\", shape = 2) +   coord_quickmap(xlim = c(-164.5, 163.5), ylim = c(-55, 85)) +   ggtitle(\"SLF GBIF records- \\n raw (blue) vs thinned (darkorange)\") +   theme(panel.grid.major = element_blank(),         panel.grid.minor = element_blank(),         panel.background = element_blank()) +   theme_bw()  # plot map of Asia map_gbif_thinned_Asia <- ggplot() +   # the second line is a basemap from ggplot2   geom_polygon(data = map_data('world'), aes(x = long, y = lat, group = group), fill = NA, color = \"black\", lwd = 0.15) +   geom_point(data = gbif_raw, aes(x = longitude, y = latitude), color = \"blue\", size = 2) +   geom_point(data = gbif_thinned, aes(x = longitude, y = latitude), color = \"darkorange\", shape = 2) +   coord_quickmap(xlim = c(100, 140), ylim = c(20, 50)) +   ggtitle(\"SLF GBIF records in Asia-\\nraw (blue) vs thinned (darkorange)\") +   theme(panel.grid.major = element_blank(),         panel.grid.minor = element_blank(),         panel.background = element_blank()) +   theme_bw()    # patchwork display of plots map_gbif_thinned + map_gbif_thinned_Asia +   plot_layout(ncol = 2) # raw data lyde_raw <- readr::read_csv(file = file.path(here::here(), \"data-raw\", \"slf_lyde_raw_coords_2024-07-29.csv\")) ## Rows: 931259 Columns: 14 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr (6): source, state, lyde_density, source_agency, collection_method, pointID ## dbl (6): year, bio_year, latitude, longitude, rounded_longitude_10k, rounded... ## lgl (2): lyde_present, lyde_established ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. # thinned data lyde_thinned <- readr::read_csv(file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"slf_lyde_cleaned_coords_2024-07-29.csv\")) ## Rows: 366 Columns: 24 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (7): source, state, lyde_density, source_agency, collection_method, poi... ## dbl  (6): year, bio_year, latitude, longitude, rounded_longitude_10k, rounde... ## lgl (11): lyde_present, lyde_established, .val, .equ, .zer, .cen, .sea, .gbf... ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. # ensure data points represent presences lyde_raw <- lyde_raw %>%   filter(lyde_present == \"TRUE\")   # plot map of NAmerica map_lyde_allRecords <- ggplot() +   # this plots a basemap of the USA because data here are exclusively from the USA   geom_polygon(data = map_data('state'), aes(x = long, y = lat, group = group), fill = NA, color = \"black\", lwd = 0.15) +   geom_point(data = lyde_raw, aes(x = longitude, y = latitude), color = \"blue\", size = 2) +   geom_point(data = lyde_thinned, aes(x = longitude, y = latitude), color = \"darkorange\", shape = 2) +   coord_quickmap(xlim = c(-133.593750, -52.294922), ylim = c(25.085599, 55.304138)) +   ggtitle(\"SLF lydemapR records- \\nall records (blue)\\nvs thinned (darkorange)\") +   theme(panel.grid.major = element_blank(),         panel.grid.minor = element_blank(),         panel.background = element_blank()) +   theme_bw()       # include only established records  lyde_raw1 <- lyde_raw %>%   filter(lyde_established == \"TRUE\") %>%    mutate(species = \"Lycorma delicatula\")   # plot map including only established records map_lyde_estab <- ggplot() +   # this plots a basemap of the USA because data here are exclusively from the USA   geom_polygon(data = map_data('state'), aes(x = long, y = lat, group = group), fill = NA, color = \"black\", lwd = 0.15) +   geom_point(data = lyde_raw1, aes(x = longitude, y = latitude), color = \"blue\", size = 2) +   geom_point(data = lyde_thinned, aes(x = longitude, y = latitude), color = \"darkorange\", shape = 2) +   coord_quickmap(xlim = c(-90, -70), ylim = c(35, 45)) +   ggtitle(\"SLF lydemapR records- \\nall records estab populations (blue)\\nvs thinned (darkorange)\") +   theme(panel.grid.major = element_blank(),         panel.grid.minor = element_blank(),         panel.background = element_blank()) +   theme_bw()  # patchwork display of plots  map_lyde_allRecords + map_lyde_estab +   plot_layout(ncol = 2)"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/020_retrieve_SLF_records.html","id":"slf-data-from-published-sources","dir":"Articles","previous_headings":"2. Combine records","what":"2.1- SLF data from published sources","title":"Retrieve SLF records from various sources and tidy them for MaxEnt modeling","text":"step, combine records obtained GBIF LydemapR data taken literature. begin loading records taken published literature. total 165 records China, southeast Asia, Japan, SK USA. records obtained genetic studies represent samples taken established populations SLF. Data scarce established populations SLF within native range (China southeast Asia), records especially important. records taken peer-reviewed literature natural history notes:  map shows occurrence data literature provide good coverage native range might otherwise get.","code":"# read in .csv of papers slf_published_papers <- readr::read_csv(file.path(here::here(), \"data-raw\", \"slf_publishedOccurrenceRecords_papers.csv\")) ## Rows: 11 Columns: 5 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr (4): Author, Spatial Extent of Records, DOI, Notes ## dbl (1): Year ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. # kable table  slf_published_papers %>%   dplyr::select(!Notes) %>%   knitr::kable(format = \"pipe\") slf_published <- readr::read_csv(file.path(here::here(), \"data-raw\", \"slf_publishedOccurrenceRecords_v2.csv\")) ## Rows: 177 Columns: 10 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr (7): name, key, country, stateProvince, publishingArticle, accessionNum_... ## dbl (3): longitude, latitude, year ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. # save as .rds before proceeding write_rds(x = slf_published, file = file.path(here::here(), \"data\", \"slf_publishedOccurrenceRecords_v2.rds\")) map_published_Asia <- ggplot() +   # this plots a basemap of the USA because data here are exclusively from the USA   geom_polygon(data = map_data('world'), aes(x = long, y = lat, group = group), fill = NA, color = \"black\", lwd = 0.15) +   geom_point(data = slf_published, aes(x = longitude, y = latitude), color = \"darkorange\") +   coord_quickmap(xlim = c(100, 140), ylim = c(10, 45)) +   ggtitle(\"SLF data from published sources \\n in China\") +   theme(panel.grid.major = element_blank(),         panel.grid.minor = element_blank(),         panel.background = element_blank()) +   theme_bw()  map_published_NAmerica <- ggplot() +   # this plots a basemap of the USA because data here are exclusively from the USA   geom_polygon(data = map_data('world'), aes(x = long, y = lat, group = group), fill = NA, color = \"black\", lwd = 0.15) +   geom_point(data = slf_published, aes(x = longitude, y = latitude), color = \"darkorange\") +   coord_quickmap(xlim = c(-133.593750, -52.294922), ylim = c(25.085599, 55.304138)) +   ggtitle(\"SLF data from published sources \\n in N America\") +   theme(panel.grid.major = element_blank(),         panel.grid.minor = element_blank(),         panel.background = element_blank()) +   theme_bw()  # bounding box coords found at:  # http://bboxfinder.com/#0.000000,0.000000,0.000000,0.000000  # patchwork map_published_Asia + map_published_NAmerica +   plot_layout(ncol = 2)"},{"path":"https://ieco-lab.github.io/slfSpread/articles/020_retrieve_SLF_records.html","id":"tidy-and-join-datasets","dir":"Articles","previous_headings":"2. Combine records","what":"2.2- Tidy and join datasets","title":"Retrieve SLF records from various sources and tidy them for MaxEnt modeling","text":"Now, load cleaned coordinates GBIF LydemapR produced earlier. First, tidy data joining. keep species names, coordinates unique key ID. also add column states data source point .","code":"slf_gbif_coords3 <- readr::read_csv(file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"slf_gbif_cleaned_coords_2024-08-05.csv\"))  slf_lyde3 <- readr::read_csv(file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"slf_lyde_cleaned_coords_2024-07-29.csv\")) # tidy gbif data slf_gbif_coords3 %<>%   dplyr::select(name:latitude, key, prov) %>%   rename(\"data_source\" = \"prov\",          \"species\" = \"name\")  # tidy lyde data slf_lyde3 %<>%   dplyr::select(species, longitude, latitude, pointID) %>%   rename(\"key\" = \"pointID\") %>%   mutate(data_source = \"lyde\")    # published data slf_published %<>%   dplyr::select(name:key, publishingArticle) %>%   rename(\"species\" = \"name\",          \"data_source\" = \"publishingArticle\")  # the publishing data source column needs to be tidied further. I will take out commas and substitute spaces for underscores slf_published$data_source <- gsub(pattern = \" \", replacement = \"_\", x = slf_published$data_source)  slf_published$data_source <- gsub(pattern = \",\", replacement = \"\", x = slf_published$data_source)  # Finally, use head() to check coltypes are the same head(slf_lyde3) head(slf_gbif_coords3) head(slf_published)  # we see that the key column in the GBIF dataset is a double, while the key columns in the other 2 are characters. We will change this: slf_gbif_coords3$key <-  as.character(slf_gbif_coords3$key)  head(slf_gbif_coords3)  # the conversion worked"},{"path":"https://ieco-lab.github.io/slfSpread/articles/020_retrieve_SLF_records.html","id":"final-data-tidying","dir":"Articles","previous_headings":"","what":"3. Final Data Tidying","title":"Retrieve SLF records from various sources and tidy them for MaxEnt modeling","text":"Now data format easier join. join data save cleaned coordinates.","code":"slf_all_coords <- slf_gbif_coords3 %>%   full_join(., slf_lyde3) %>%   full_join(., slf_published) write_csv(x = slf_all_coords, file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"slf_all_coords_2024-08-05.csv\"))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/020_retrieve_SLF_records.html","id":"final-spatial-thinning","dir":"Articles","previous_headings":"3. Final Data Tidying","what":"3.1- Final spatial thinning","title":"Retrieve SLF records from various sources and tidy them for MaxEnt modeling","text":"last step tidying data perform second round spatial thinning. need joining 3 different datasets together, points may within 1km . still use CoordinateCleaner, time ditch Humboldt use spThin::thin spatially thin occurrence data. spThin::thin refined process spatial thinning tools analyzing output. data rarefied 10km 10 passes. done final dataset. Spatial thinning reduce autocorrelation sampling bias. , thin minimum 1km distance points. results run return thinned dataset text log file thinning run. files written vignettes-outputs folder, holds intermediate data objects final versions data. Basically, function thins data 10 different times writes rep able retain data points .csv file. resulting object list retained coordinates per run. data examined closer large difference records kept per run disparity. Now data thinned, use spThin::plotThin plot results run check quality. Note, plotting actual data points step 1.3; function shows whether 10 optimal number reps thin dataset. plot number records retained vs number reps. seems plot 3 803 records retained reps. However, different maximum, keep maximum 805 Now, lets load final thinned dataset final round cleaning.","code":"slf_all_coords <- readr::read_csv(file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"slf_all_coords_2024-08-05.csv\")) slf_all_coords2 <- spThin::thin(   loc.data = slf_all_coords,    lat.col = \"latitude\", long.col = \"longitude\",   spec.col = \"species\",   thin.par = 10,   reps = 10, # number of passes   # line below returns a list of data frames with the locations were preserved   locs.thinned.list.return = TRUE,    write.files = TRUE, # returns list of thinned data as a separate .csv file   # next, create a file that logs the thinning run, write the path to and name of the log file   write.log.file = TRUE,    log.file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", paste0(\"slf_all_coords_cleaned_thinning_log_2024-08-05.txt\")),   # finally, tell it where to write the new files and what to call the thinned dataset   out.dir = file.path(here::here(), \"vignette-outputs\", \"data-tables\"),   out.base = paste0(\"slf_all_coords_cleaned_2024-08-05\"),   verbose = TRUE # give details of run in the console   ) spThin::plotThin(thinned = slf_all_coords2) slf_all_coords2 <- readr::read_csv(file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"slf_all_coords_cleaned_2024-08-05_thin1.csv\")) # coordinate cleaner slf_all_coords_report <- CoordinateCleaner::clean_coordinates(   x = slf_all_coords2,    lon = \"longitude\",   lat = \"latitude\",   species = \"species\",   tests = \"duplicates\" ) %>%   as.data.frame()  # no duplicates!  # remove flagged records slf_all_coords2 <- slf_all_coords_report %>%   dplyr::filter(.summary == TRUE) %>% # FALSE records are potentially problematic   dplyr::select(species:latitude)"},{"path":"https://ieco-lab.github.io/slfSpread/articles/020_retrieve_SLF_records.html","id":"save-output-for-maxent","dir":"Articles","previous_headings":"","what":"3.2- Save output for MaxEnt","title":"Retrieve SLF records from various sources and tidy them for MaxEnt modeling","text":"finally convert slf coordinates format used MaxEnt save . , first column “species” must species name, second column “x” must longitude, third column “y” must latitude.  map, can see final points selected. good spread across native range better spread invaded range. version total dataset included newer data lydemapr, now better coverage invaded range. also check number points native vs invaded range. native range includes longitudes 35 105. can see SLF presence data invaded ranges Japan, South Korea United States. weakness data available given best effort account including presence data China literature. now half data need perform SDM! next vignette, download historical projected climate human impact data, basis methods predicting suitability Lycorma delicatula.","code":"# rename columns slf_all_coords3 <- slf_all_coords2 %>%   rename(\"x\" = \"longitude\",          \"y\" = \"latitude\")   # save write_csv(x = slf_all_coords3, file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", paste0(\"slf_all_coords_final_2024-08-05.csv\")))  # also save as a .rds file write_rds(slf_all_coords3, file = file.path(here::here(), \"data\", paste0(\"slf_all_coords_final_2024-08-05.rds\"))) slf_all_coords3 <- readr::read_csv(file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"slf_all_coords_final_2024-08-05.csv\")) ## Rows: 805 Columns: 3 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr (1): species ## dbl (2): x, y ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. map_all <- ggplot() +     geom_polygon(data = map_data('world'), aes(x = long, y = lat, group = group), fill = NA, color = \"black\", lwd = 0.15) +     geom_point(data = slf_all_coords3, aes(x = x, y = y), color = \"darkorange\", size = 1) +     coord_quickmap(xlim = c(-164.5, 163.5), ylim = c(-55, 85)) +     ggtitle(\"All SLF presences\") +     theme(panel.grid.major = element_blank(),           panel.grid.minor = element_blank(),           panel.background = element_blank()) +     theme_bw()   map_all_NAmerica <- ggplot() +     geom_polygon(data = map_data('world'), aes(x = long, y = lat, group = group), fill = NA, color = \"black\", lwd = 0.15) +     geom_point(data = slf_all_coords3, aes(x = x, y = y), color = \"darkorange\", size = 1) +     coord_quickmap(xlim = c(-133.593750, -52.294922), ylim = c(25.085599, 55.304138)) +     ggtitle(\"SLF presences N America\") +     theme(panel.grid.major = element_blank(),           panel.grid.minor = element_blank(),           panel.background = element_blank()) +     theme_bw()     map_all_Asia <- ggplot() +     geom_polygon(data = map_data('world'), aes(x = long, y = lat, group = group), fill = NA, color = \"black\", lwd = 0.15) +     geom_point(data = slf_all_coords3, aes(x = x, y = y), color = \"darkorange\", size = 1) +     coord_quickmap(xlim = c(68.906250, 152.534180), ylim = c(8.928487, 45.920587)) +     ggtitle(\"SLF presences Asia\") +     theme(panel.grid.major = element_blank(),           panel.grid.minor = element_blank(),           panel.background = element_blank()) +     theme_bw()    # patchwork   map_all_NAmerica + map_all_Asia +   plot_layout(ncol = 2) SLF_by_longitude <- ggplot(data = slf_all_coords3) +   geom_histogram(aes(x = x)) +   ggtitle(\"count of SLF presence records invaded vs native range\") +   labs(caption = \"the longitudinal range between the two dashed lines represents the native range for SLF\") +   xlab(\"longitude\") +   ylab(\"count of SLF presences\") +   geom_vline(xintercept = 73.37, linetype = \"dashed\") +   geom_vline(xintercept = 124.06, linetype = \"dashed\") +   theme_minimal()  # save output ggsave(SLF_by_longitude, filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"SLF_all_coords_final_by_longitude.jpg\"),        height = 8,         width = 10,        device = \"jpeg\",        dpi = \"retina\") ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`."},{"path":"https://ieco-lab.github.io/slfSpread/articles/020_retrieve_SLF_records.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Retrieve SLF records from various sources and tidy them for MaxEnt modeling","text":"De Bona, S., Barringer, L., Kurtz, P., Losiewicz, J., Parra, G. R., & Helmus, M. R. (2023). lydemapr: R package track spread invasive spotted lanternfly (Lycorma delicatula, White 1845) (Hemiptera, Fulgoridae) United States. NeoBiota, 86, 151–168. https://doi.org/10.3897/neobiota.86.101471 GBIF Occurrence Download https://doi.org/10.15468/dl.59gndc Accessed R via rgbif (https://github.com/ropensci/rgbif) 2024-08-05 Huron, N. ., Behm, J. E., & Helmus, M. R. (2022). Paninvasion severity assessment U.S. grape pest disrupt global wine market. Communications Biology, 5(1), 655. https://doi.org/10.1038/s42003-022-03580-w Lin, Y.-S., & Liao, J.-R. (2024). Multifaceted Investigation Absence Potential Invasion Spotted Lanternfly (Lycorma delicatula) Taiwan. Research Square. https://doi.org/10.21203/rs.3.rs-4832573/v1","code":""},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/020_retrieve_SLF_records.html","id":"visualize-changes-in-gbif-records-over-time","dir":"Articles","previous_headings":"Appendix","what":"Visualize changes in GBIF records over time","title":"Retrieve SLF records from various sources and tidy them for MaxEnt modeling","text":"","code":"# new data slf_new <- readr::read_csv(file = file.path(here::here(), \"data-raw\", \"data-old\", \"slf_gbif_cleaned_2024-08-05.csv\"))  # old data slf_old <- readr::read_csv(file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"slf_gbif_cleaned_2024-01-05.csv\"))  # plot SLF map_slf <- ggplot() +   geom_polygon(data = map_data('world'), aes(x = long, y = lat, group = group), fill = NA, color = \"black\", lwd = 0.15) +   geom_point(data = slf_new, aes(x = longitude, y = latitude), color = \"darkorange\", size = 2) +   geom_point(data = slf_old, aes(x = x, y = y), color = \"blue\", shape = 2) +   coord_quickmap(xlim = c(-164.5, 163.5), ylim = c(-55, 85)) +   ggtitle(\"SLF new points (darkorange) vs old (blue)\") +   theme(panel.grid.major = element_blank(),         panel.grid.minor = element_blank(),         panel.background = element_blank()) +   theme_bw()  # The old points are in blue and the new points are in darkorange"},{"path":"https://ieco-lab.github.io/slfSpread/articles/030_retrieve_bioclim_variables.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Retrieve bioclim rasters from CHELSA and tidy them for MaxEnt modeling","text":"last vignette, downloaded tided Lycorma delicatula occurrence data multiple sources. tidied, harmonized took measures reduce spatial autocorrelation without sacrificing spread dataset. also combined data single presence dataset used perform SDM. now need retrieve type data necessary SDM, environmental covariates. specifically interested effects climate change, focusing heavily derivatives temperature precipitation explain Lycorma delicatula distributions. vignette walk process downloading tidying climate data. downloading data CHELSA, high-resolution (30 arc-seconds, ~1km) land surface dataset provided Swiss Federal Institute Forest, Snow Landscape Research. specific data interested suite 19 “bioclimatic” variables. bioclim variables biologically relevant climate features derived temperature precipitation. CHELSA also makes variables available climate change predictions, using subset available CMIP6 models. use 3 ssp scenarios (126, 370, 585) GFDL-ESM4 model (read ahead explanation ). First, download data CHELSA local library. tidy, harmonize put datasets proper format MaxEnt. choose covariates models via assessment level co-linearity rasters. also consider biological relevance selecting final set covariates. Note: added number () statements throughout vignettes, usually prevent data downloaded unnecessarily. Simply change FALSE within () statement TRUE run chunk. prevent re-downloading.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/030_retrieve_bioclim_variables.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Retrieve bioclim rasters from CHELSA and tidy them for MaxEnt modeling","text":"Note: setting global options document certain code chunks rendered final .html file. set eval = FALSE none code re-run (preventing files overwritten knitting) simply overwrite chunks plots.","code":"library(tidyverse)  #data manipulation  library(here) #making directory pathways easier on different instances here::here() ## [1] \"C:/Users/tun83449/Documents/GitHub/slfSpread\" # here() is \".../Shared drives/slfClimate/projects/slfSpread/slfSpread_pkg\"  library(devtools) # devtools::install_github(\"danlwarren/ENMTools\") library(ENMTools) # env covariates colinearity  library(terra) library(patchwork)"},{"path":"https://ieco-lab.github.io/slfSpread/articles/030_retrieve_bioclim_variables.html","id":"retrieve-chelsa-bioclim-rasters","dir":"Articles","previous_headings":"","what":"1. Retrieve CHELSA bioclim rasters","title":"Retrieve bioclim rasters from CHELSA and tidy them for MaxEnt modeling","text":"First, download bioclim data local directory. recommend downloading data separate directory package. Since using directory outside immediate package, create object define file path beginning chunk. pathing still use ::() start package root folder. First, download historical climate data CHELSA. URLs bioclim data downloaded CHELSA stored data-raw/CHELSA within package directory. using two different versions CHELSA bioclim variables analysis: Historical- time period 1981-2010 Climate change predictions- time period 2041-2070, GFDL-ESM4 model, Ssp scenarios 126, 370, 585. CHELSA download directory group bioclim variables also contains 27 distinct climatologies, available historical datasets climate change models. URLs also downloaded, might applicable analysis. now, download 19 bioclim variables. like download additional climatologies available CHELSA, see code Appendix section vignette. chunks run initial run chunks section 2.2. running chunks, continue chunk “loop tidy rasters” section 2.2.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/030_retrieve_bioclim_variables.html","id":"historical","dir":"Articles","previous_headings":"1. Retrieve CHELSA bioclim rasters","what":"1.1 Historical","title":"Retrieve bioclim rasters from CHELSA and tidy them for MaxEnt modeling","text":"best approach found download data create loop open URL web browser (ready, literally just opens whatever URLs selected list browser). current loop construction, files can downloaded PC’s downloads folder, need manually moved destination directory (outside package root folder large). files stored manually maxent/historical_climate_rasters/chelsa2.1_30arcsec/originals.","code":"if(FALSE) {    # historical data   chelsa_historic_URLs <- read_table(file = file.path(here::here(), \"data-raw\", \"CHELSA\", \"chelsa_1981-2010_bioclim_URLs.txt\"),                                 col_names = FALSE) %>%     as.data.frame() %>%     dplyr::select(\"X1\") %>%     dplyr::rename(\"URL\" = \"X1\")      # select only URLs I am interested in    chelsa_historic_URLs <- slice(.data = chelsa_historic_URLs, 2:20)      # loop to download historical URLs- I tried utils::download.files, but it would not work with these data   for(i in 1:nrow(chelsa_historic_URLs)) {          file.tmp <- chelsa_historic_URLs[i, ]          utils::browseURL(url = file.tmp)        }  }"},{"path":"https://ieco-lab.github.io/slfSpread/articles/030_retrieve_bioclim_variables.html","id":"cmip6","dir":"Articles","previous_headings":"1. Retrieve CHELSA bioclim rasters","what":"1.2 CMIP6","title":"Retrieve bioclim rasters from CHELSA and tidy them for MaxEnt modeling","text":"Next, download data provided CMIP6 models. downloading data different SSP scenarios (see link explanation scenarios). ssp scenarios represent different assumptions global development greenhouse gas emissions. using ssp scenarios 126, 370, 585. 126 represents ideal scenario countries cooperating reduce emissions. 370 represents middle-high emissions scenario, coupled emphasis regional rivalry global conflict (reduce cooperation drive emissions). 585 represents high greenhouse gas emissions scenario countries cooperating improving infrastructure, emphasis reducing emissions. use GFDL-ESM4 CMIP6 model NOAA. According CHELSA documentation, five available models used together, CMIP6 model usage follow given priority (see documentation linked ). climate rasters moved respective folders within maxent/future_climate_rasters/chelsa2.1_30arcsec download complete.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/030_retrieve_bioclim_variables.html","id":"ssp126","dir":"Articles","previous_headings":"1. Retrieve CHELSA bioclim rasters > 1.2 CMIP6","what":"SSP126","title":"Retrieve bioclim rasters from CHELSA and tidy them for MaxEnt modeling","text":"","code":"if(FALSE) {    # ssp370 data   chelsa_126_URLs <- read_table(     file = file.path(here::here(), \"data-raw\", \"CHELSA\", \"chelsa_2041-2070_GFDL-ESM4_ssp126_bioclim_URLs.txt\"),     col_names = FALSE     ) %>%     as.data.frame() %>%     dplyr::select(\"X1\") %>%     dplyr::rename(\"URL\" = \"X1\")         # select only URLs I am interested in    chelsa_126_URLs <- slice(.data = chelsa_126_URLs, 1:19)      # loop to download ssp126 URLs   for(i in 1:nrow(chelsa_126_URLs)) {          file.tmp <- chelsa_126_URLs[i, ]          utils::browseURL(url = file.tmp)        }  }"},{"path":"https://ieco-lab.github.io/slfSpread/articles/030_retrieve_bioclim_variables.html","id":"ssp370","dir":"Articles","previous_headings":"1. Retrieve CHELSA bioclim rasters > 1.2 CMIP6","what":"SSP370","title":"Retrieve bioclim rasters from CHELSA and tidy them for MaxEnt modeling","text":"","code":"if(FALSE) {    # ssp370 data   chelsa_370_URLs <- read_table(file = file.path(here::here(), \"data-raw\", \"CHELSA\", \"chelsa_2041-2070_GFDL-ESM4_ssp370_bioclim_URLs.txt\"),                                 col_names = FALSE) %>%     as.data.frame() %>%     dplyr::select(\"X1\") %>%     dplyr::rename(\"URL\" = \"X1\")         # select only URLs I am interested in    chelsa_370_URLs <- slice(.data = chelsa_370_URLs, 1:19)      # loop to download ssp370 URLs   for(i in 1:nrow(chelsa_370_URLs)) {          file.tmp <- chelsa_370_URLs[i, ]          utils::browseURL(url = file.tmp)        }  }"},{"path":"https://ieco-lab.github.io/slfSpread/articles/030_retrieve_bioclim_variables.html","id":"ssp585","dir":"Articles","previous_headings":"1. Retrieve CHELSA bioclim rasters > 1.2 CMIP6","what":"SSP585","title":"Retrieve bioclim rasters from CHELSA and tidy them for MaxEnt modeling","text":"","code":"if(FALSE) {    # ssp370 data   chelsa_585_URLs <- read_table(     file = file.path(here::here(), \"data-raw\", \"CHELSA\", \"chelsa_2041-2070_GFDL-ESM4_ssp585_bioclim_URLs.txt\"),     col_names = FALSE     ) %>%     as.data.frame() %>%     dplyr::select(\"X1\") %>%     dplyr::rename(\"URL\" = \"X1\")         # select only URLs I am interested in    chelsa_585_URLs <- slice(.data = chelsa_585_URLs, 1:19)      # loop to download ssp370 URLs   for(i in 1:nrow(chelsa_585_URLs)) {          file.tmp <- chelsa_585_URLs[i, ]          utils::browseURL(url = file.tmp)        }  }"},{"path":"https://ieco-lab.github.io/slfSpread/articles/030_retrieve_bioclim_variables.html","id":"tidy-for-maxent","dir":"Articles","previous_headings":"","what":"2. Tidy for MaxEnt","title":"Retrieve bioclim rasters from CHELSA and tidy them for MaxEnt modeling","text":"Next, need tidy rasters MaxEnt. need mask data oceans bodies water. also need create downsized versions variables can used step 3 assess level correlation different variables. Lastly, rename files convert required .ascii format MaxEnt. mask CHELSA rasters using dataset called “global access cities”, proxy human impact used final anaylsis. dataset contains high-resolution mapping continents, good choice reference layer masking. use bio1 (annual mean temperature) reference resample new layers setting CRS extent.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/030_retrieve_bioclim_variables.html","id":"load-in-files","dir":"Articles","previous_headings":"2. Tidy for MaxEnt","what":"2.1 Load in files","title":"Retrieve bioclim rasters from CHELSA and tidy them for MaxEnt modeling","text":"get list files need modify. also create object containing new names assigned files simplify naming. Now files reference layers loaded names chosen, can begin reformatting layers.","code":"# set path to external directory mypath <- file.path(here::here() %>%                            dirname(),                         \"maxent/historical_climate_rasters/chelsa2.1_30arcsec\") # global access to cities global_atc <- terra::rast(x = file.path(mypath, \"originals\", \"2015_accessibility_to_cities_v1.0.tif\"))  # 1st bioclim layer as reference global_bio1 <- terra::rast(x = file.path(mypath, \"originals\", \"CHELSA_bio1_1981-2010_V.2.1.tif\")) # I will load in the files and then get the new names I would like to give them  # load in bioclim layers to be cropped- the original .tif files env.files <- list.files(path = file.path(mypath, \"originals\"), pattern = \"\\\\.tif$\", full.names = TRUE)  # output file names output.files <- list.files(path = file.path(mypath, \"originals\"), pattern = \"\\\\.tif$\", full.names = FALSE) %>%   # get rid of filetype endings   gsub(pattern = \".tif\", replacement = \"\") %>%   # crop off ending    gsub(pattern = \"_V.2.1\", replacement = \"\") %>%   tolower()  # more edits to file names output.files <- output.files %>%   gsub(pattern = \"chelsa_\", replacement = \"\") %>%   # specifically edit the access to cities naming   gsub(pattern = \"2015_accessibility_to_cities_v1.0\", replacement = \"atc_2015\")"},{"path":"https://ieco-lab.github.io/slfSpread/articles/030_retrieve_bioclim_variables.html","id":"prepare-reference-layers","dir":"Articles","previous_headings":"2. Tidy for MaxEnt","what":"2.2 Prepare reference layers","title":"Retrieve bioclim rasters from CHELSA and tidy them for MaxEnt modeling","text":"first step tidy reference layers global_atc global_bio1. need cropped extent. use smallest extent shared layers. also need check correct CRS use proj4 string notation (previously used) since expired. proj4 string previously using \"+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0\". EPSG number matches previous proj4 string EPSG:4326. use notation now . Lastly, need ensure origins . chunk, create 2 reference layers. main_layer (global_bio1) used resampling data, mask_layer (global_atc) used masking.","code":"# ext of the reference layers ext(global_atc) ext(global_bio1) # the extents will need to be corrected  # crs of reference layers terra::crs(x = global_atc, proj = TRUE) terra::crs(x = global_bio1, proj = TRUE) # Here is the proj4 string I was previously using: # \"+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0\" # The reference layer proj4 strings dont match this one, so I will reset them # The Proj4 string notation is expiring, so I will try to use an EPSG code equivalent  terra::origin(global_atc) terra::origin(global_bio1) # the origin of global_atc will need to be changed to match the others  # edits to reference layers  # set extent # set ext to the smallest whole number shared between the layers ext.obj <- terra::ext(-180, 179, -60, 83) # create main layer for future cropping, crop to new ext main_layer <- terra::crop(x = global_bio1, y = ext.obj, overwrite = FALSE) # create a mask layer specifically for the cropping and masking mask_layer <- terra::crop(x = global_atc, y = ext.obj, overwrite = FALSE)  # unify origins # set origin of global_atc terra::origin(mask_layer) <- c(-0.0001396088, -0.0001392488) # resample atc to bio1 layer because origins are different- most rasters will already have the origin of the bio1 layer mask_layer <- terra::resample(x = mask_layer, y = main_layer, method = \"bilinear\")  # set CRS of reference layers to be sure main_layer <- terra::project(x = main_layer, y = \"EPSG:4326\", method = \"bilinear\") mask_layer <- terra::project(x = mask_layer, y = \"EPSG:4326\", method = \"bilinear\")  # check terra::ext(mask_layer) terra::ext(main_layer) terra::origin(mask_layer) terra::origin(main_layer) terra::crs(mask_layer) terra::crs(main_layer)"},{"path":"https://ieco-lab.github.io/slfSpread/articles/030_retrieve_bioclim_variables.html","id":"tidying-historical-data","dir":"Articles","previous_headings":"2. Tidy for MaxEnt","what":"2.3 Tidying historical data","title":"Retrieve bioclim rasters from CHELSA and tidy them for MaxEnt modeling","text":"get tidying data. crop rasters using extent object created reference layers. follow cropping masking, convert cells x value global_atc NAs. also set CRS EPSG:4326, resample rasters. rasters resampled resolution global_bio1 resolution. output files saved v1. first chunk, : crop layers correct extent mask layers outlines continents set CRS EPSG:4326 set origin match reference layers crop layers ensure aggregation doesn’t increase extent chunk take long time run… maybe find good book read. convert rasters .ascii format required MaxEnt. Finally, aggregate selected rasters lower resolution, roughly 10km grid cells. want aggregate 10km downsampling resolution analysis account survey bias. data can now used MaxEnt model!","code":"mypath <- file.path(here::here() %>%                          dirname(),                       \"maxent/historical_climate_rasters/chelsa2.1_30arcsec\") # view list of filetypes for terra, use .ascii   terra::gdal(drivers = TRUE)    # loop to crop extent for all files   for(a in seq_along(env.files)) {          # load each raster into temp object     rast.hold <- terra::rast(env.files[a])                    # begin edits     # crop new rasters to extent     rast.hold <- terra::crop(x = rast.hold, y = ext.obj, overwrite = FALSE)          # mask the bioclim layers by global_atc     rast.hold <- terra::mask(x = rast.hold, mask = mask_layer)          # set crs     rast.hold <- terra::project(x = rast.hold, y = \"EPSG:4326\", method = \"bilinear\")          # set origin     terra::origin(rast.hold) <- c(-0.0001396088, -0.0001392488)          #resample to fit the extent/resolution of the main layer global_bio1     #use bilinear interpolation, since values are continuous     rast.hold <- terra::resample(x = rast.hold, y = main_layer, method = \"bilinear\")          # crop again to ensure aggregation doesnt increase extent     rast.hold <- terra::crop(x = rast.hold, y = ext.obj, overwrite = FALSE)                    #write out the new resampled rasters!     terra::writeRaster(       x = rast.hold,        filename = file.path(mypath, \"v1\", paste0(output.files[a], \"_global\", \".tif\")),        filetype = \"GTiff\",        overwrite = FALSE       )          # remove object once its done     rm(rast.hold)  } # directory of files to modify   env.files <- list.files(path = file.path(mypath, \"v1\"), pattern = \"\\\\.tif$\", full.names = TRUE) %>%     grep(\"atc_2015_global.tif|bio2_1981-2010_global.tif|bio11_1981-2010_global.tif|bio12_1981-2010_global.tif|bio15_1981-2010_global.tif\", ., value = TRUE)     # output file names   output.files <- list.files(path = file.path(mypath, \"v1\"), pattern = \"\\\\.tif$\", full.names = FALSE)  %>%     grep(\"atc_2015_global.tif|bio2_1981-2010_global.tif|bio11_1981-2010_global.tif|bio12_1981-2010_global.tif|bio15_1981-2010_global.tif\", ., value = TRUE) %>%     gsub(pattern = \".tif\", replacement = \".asc\") # loop to convert to .ascii for(a in seq_along(env.files)){      # holding object     rast.hold <- terra::rast(env.files[a])      # write output   terra::writeRaster(     x = rast.hold,      filename = file.path(mypath, \"v1_maxent\", output.files[a]),      filetype = \"AAIGrid\",      overwrite = FALSE     )      # remove object once its done   rm(rast.hold)        } # loop to aggregate and convert to .ascii for(a in seq_along(env.files)){      # holding object     rast.hold <- terra::rast(env.files[a])      # aggregate to 10km scale. cells are roughly 1km, so aggregate by factor of 10   # the na.rm argument is incredibly important because if any of the cells are NAs, the aggregated cell will  be an NA value.   rast.hold <- terra::aggregate(x = rast.hold, fact = 10, fun = \"mean\", na.rm = TRUE)      # crop again to ensure aggregation doesnt increase extent   rast.hold <- terra::crop(x = rast.hold, y = ext.obj, overwrite = FALSE)      # write output   terra::writeRaster(     x = rast.hold,      filename = file.path(mypath, \"v1_maxent_10km\", output.files[a]),      filetype = \"AAIGrid\",      overwrite = FALSE     )      # remove object once its done   rm(rast.hold)      }"},{"path":"https://ieco-lab.github.io/slfSpread/articles/030_retrieve_bioclim_variables.html","id":"tidying-cmip6-data","dir":"Articles","previous_headings":"2. Tidy for MaxEnt","what":"2.4 Tidying CMIP6 data","title":"Retrieve bioclim rasters from CHELSA and tidy them for MaxEnt modeling","text":", go steps section 2.3 CMIP6 versions rasters.","code":"# file path to directory mypath <- file.path(here::here() %>%                        dirname(),                     \"maxent/future_climate_rasters/chelsa2.1_30arcsec\")"},{"path":"https://ieco-lab.github.io/slfSpread/articles/030_retrieve_bioclim_variables.html","id":"ssp126-1","dir":"Articles","previous_headings":"2. Tidy for MaxEnt > 2.4 Tidying CMIP6 data","what":"SSP126","title":"Retrieve bioclim rasters from CHELSA and tidy them for MaxEnt modeling","text":"First, get file names create folders hold new copies per ssp scenario.","code":"# v1 for tidied rasters dir.create(file.path(mypath, \"2041-2070_ssp126_GFDL\", \"v1\"))  # v1_maxent for the ascii versions dir.create(file.path(mypath, \"2041-2070_ssp126_GFDL\", \"v1_maxent\"))  # 10km aggregated versions of ascii dir.create(file.path(mypath, \"2041-2070_ssp126_GFDL\", \"v1_maxent_10km\")) # I will load in the files and then get the new names I would like to give them  # load in bioclim layers to be cropped- the original .tif files env.files <- list.files(path = file.path(mypath, \"2041-2070_ssp126_GFDL\", \"originals\"), pattern = \"\\\\.tif$\", full.names = TRUE)  # output file names output.files <- list.files(path = file.path(mypath, \"2041-2070_ssp126_GFDL\", \"originals\"), pattern = \"\\\\.tif$\", full.names = FALSE) %>%   # change endings to show these are global raster versions   gsub(pattern = \"_V.2.1.tif\", replacement = \"\") %>%   # crop out some detail   gsub(pattern = \"-esm4_ssp\", replacement = \"_\") %>%   tolower()  # more edits to file names output.files <- output.files %>%   gsub(pattern = \"chelsa_\", replacement = \"\")"},{"path":"https://ieco-lab.github.io/slfSpread/articles/030_retrieve_bioclim_variables.html","id":"tidy","dir":"Articles","previous_headings":"2. Tidy for MaxEnt > 2.4 Tidying CMIP6 data > SSP126","what":"tidy","title":"Retrieve bioclim rasters from CHELSA and tidy them for MaxEnt modeling","text":"code chunk added later grab rasters need downstream.","code":"# view list of filetypes for terra, use .ascii terra::gdal(drivers = TRUE)    # loop to crop extent for all files   for(a in seq_along(env.files)) {          # load each raster into temp object     rast.hold <- terra::rast(env.files[a])                    # begin edits     # crop new rasters to extent     rast.hold <- terra::crop(x = rast.hold, y = ext.obj, overwrite = FALSE)          # mask the bioclim layer by global_atc     rast.hold <- terra::mask(x = rast.hold, mask = mask_layer)          # set crs     rast.hold <- terra::project(x = rast.hold, y = \"EPSG:4326\", method = \"bilinear\")               # set origin     terra::origin(rast.hold) <- c(-0.0001396088, -0.0001392488)               #resample to fit the extent/resolution of the main layer global_bio1     #use bilinear interpolation, since values are continuous     rast.hold <- terra::resample(x = rast.hold, y = main_layer, method = \"bilinear\")          # crop again to ensure aggregation doesnt increase extent     rast.hold <- terra::crop(x = rast.hold, y = ext.obj, overwrite = FALSE)                #write out the new resampled rasters!     terra::writeRaster(       x = rast.hold,       filename = file.path(mypath, \"2041-2070_ssp126_GFDL\", \"v1\", paste0(output.files[a], \"_global\", \".tif\")),       filetype = \"GTiff\",       overwrite = FALSE     )          # remove object once its done     rm(rast.hold)  } # directory of files to modify env.files <- list.files(path = file.path(mypath, \"2041-2070_ssp126_GFDL\", \"v1\"), pattern = \"\\\\.tif$\", full.names = TRUE) %>%   grep(\"bio2_2041-2070_gfdl_126_global.tif|bio11_2041-2070_gfdl_126_global.tif|bio12_2041-2070_gfdl_126_global.tif|bio15_2041-2070_gfdl_126_global.tif\", ., value = TRUE)  # output file names output.files <- list.files(path = file.path(mypath, \"2041-2070_ssp126_GFDL\", \"v1\"), pattern = \"\\\\.tif$\", full.names = FALSE) %>%   grep(\"bio2_2041-2070_gfdl_126_global.tif|bio11_2041-2070_gfdl_126_global.tif|bio12_2041-2070_gfdl_126_global.tif|bio15_2041-2070_gfdl_126_global.tif\", ., value = TRUE) %>%   gsub(pattern = \".tif\", replacement = \".asc\") # loop to convert to .ascii for(a in seq_along(env.files)) {      # holding object     rast.hold <- terra::rast(env.files[a])      # write output   terra::writeRaster(     x = rast.hold,      filename = file.path(mypath, \"2041-2070_ssp126_GFDL\", \"v1_maxent\", output.files[a]),      filetype = \"AAIGrid\",      overwrite = FALSE     )      # remove object once its done   rm(rast.hold)        } # loop to aggregate and convert to .ascii for(a in seq_along(env.files)){      # holding object     rast.hold <- terra::rast(env.files[a])      # aggregate to 10km scale. cells are roughly 1km, so aggregate by factor of 10   rast.hold <- terra::aggregate(x = rast.hold, fact = 10, fun = \"mean\", na.rm = TRUE)      # crop again to ensure aggregation doesnt increase extent   rast.hold <- terra::crop(x = rast.hold, y = ext.obj, overwrite = FALSE)      # write output   terra::writeRaster(     x = rast.hold,      filename = file.path(mypath, \"2041-2070_ssp126_GFDL\", \"v1_maxent_10km\", output.files[a]),      filetype = \"AAIGrid\",      overwrite = FALSE     )      # remove object once its done   rm(rast.hold)      }"},{"path":"https://ieco-lab.github.io/slfSpread/articles/030_retrieve_bioclim_variables.html","id":"ssp370-1","dir":"Articles","previous_headings":"2. Tidy for MaxEnt > 2.4 Tidying CMIP6 data","what":"SSP370","title":"Retrieve bioclim rasters from CHELSA and tidy them for MaxEnt modeling","text":"","code":"# v1 for tidied rasters dir.create(file.path(mypath, \"2041-2070_ssp370_GFDL\", \"v1\"))  # v1_maxent for the ascii versions dir.create(file.path(mypath, \"2041-2070_ssp370_GFDL\", \"v1_maxent\"))  # 10km aggregated versions of ascii dir.create(file.path(mypath, \"2041-2070_ssp370_GFDL\", \"v1_maxent_10km\")) # I will load in the files and then get the new names I would like to give them  # load in bioclim layers to be cropped- the original .tif files env.files <- list.files(path = file.path(mypath, \"2041-2070_ssp370_GFDL\", \"originals\"), pattern = \"\\\\.tif$\", full.names = TRUE)  # output file names output.files <- list.files(path = file.path(mypath, \"2041-2070_ssp370_GFDL\", \"originals\"), pattern = \"\\\\.tif$\", full.names = FALSE) %>%   # get rid of endings   gsub(pattern = \"_V.2.1.tif\", replacement = \"\") %>%   # crop out some detail   gsub(pattern = \"-esm4_ssp\", replacement = \"_\") %>%   tolower()  # more edits to file names output.files <- output.files %>%   gsub(pattern = \"chelsa_\", replacement = \"\")"},{"path":"https://ieco-lab.github.io/slfSpread/articles/030_retrieve_bioclim_variables.html","id":"tidy-1","dir":"Articles","previous_headings":"2. Tidy for MaxEnt > 2.4 Tidying CMIP6 data > SSP370","what":"tidy","title":"Retrieve bioclim rasters from CHELSA and tidy them for MaxEnt modeling","text":"","code":"# view list of filetypes for terra, use .ascii   terra::gdal(drivers = TRUE)    # loop to crop extent for all files   for(a in seq_along(env.files)) {          # load each raster into temp object     rast.hold <- terra::rast(env.files[a])                    # begin edits     # crop new rasters to extent     rast.hold <- terra::crop(x = rast.hold, y = ext.obj, overwrite = FALSE)          # mask the bioclim layer by global_atc     rast.hold <- terra::mask(x = rast.hold, mask = mask_layer)          # set crs     rast.hold <- terra::project(x = rast.hold, y = \"EPSG:4326\", method = \"bilinear\")          # set origin     terra::origin(rast.hold) <- c(-0.0001396088, -0.0001392488)          #resample to fit the extent/resolution of the main layer global_bio1     #use bilinear interpolation, since values are continuous     rast.hold <- terra::resample(x = rast.hold, y = main_layer, method = \"bilinear\")          # crop again to ensure aggregation doesnt increase extent     rast.hold <- terra::crop(x = rast.hold, y = ext.obj, overwrite = FALSE)                         #write out the new resampled rasters!     terra::writeRaster(       x = rast.hold,       filename = file.path(mypath, \"2041-2070_ssp370_GFDL\", \"v1\", paste0(output.files[a], \"_global\", \".tif\")),        filetype = \"GTiff\",        overwrite = FALSE       )          # remove object once its done     rm(rast.hold)  } # directory of files to modify env.files <- list.files(path = file.path(mypath, \"2041-2070_ssp370_GFDL\", \"v1\"), pattern = \"\\\\.tif$\", full.names = TRUE) %>%   grep(\"bio2_2041-2070_gfdl_370_global.tif|bio11_2041-2070_gfdl_370_global.tif|bio12_2041-2070_gfdl_370_global.tif|bio15_2041-2070_gfdl_370_global.tif\", ., value = TRUE)  # output file names output.files <- list.files(path = file.path(mypath, \"2041-2070_ssp370_GFDL\", \"v1\"), pattern = \"\\\\.tif$\", full.names = FALSE) %>%   grep(\"bio2_2041-2070_gfdl_370_global.tif|bio11_2041-2070_gfdl_370_global.tif|bio12_2041-2070_gfdl_370_global.tif|bio15_2041-2070_gfdl_370_global.tif\", ., value = TRUE) %>%   gsub(pattern = \".tif\", replacement = \".asc\") if(FALSE){      # loop to convert to .ascii   for(a in seq_along(env.files)) {          # holding object       rast.hold <- terra::rast(env.files[a])          # write output     terra::writeRaster(       x = rast.hold,        filename = file.path(mypath, \"2041-2070_ssp370_GFDL\", \"v1_maxent\", output.files[a]),       filetype = \"AAIGrid\",        overwrite = FALSE       )          # remove object once its done     rm(rast.hold)            }      } # loop to aggregate and convert to .ascii for(a in seq_along(env.files)){      # holding object     rast.hold <- terra::rast(env.files[a])      # aggregate to 10km scale. cells are roughly 1km, so aggregate by factor of 10   rast.hold <- terra::aggregate(x = rast.hold, fact = 10, fun = \"mean\", na.rm = TRUE)      # crop again to ensure aggregation doesnt increase extent   rast.hold <- terra::crop(x = rast.hold, y = ext.obj, overwrite = FALSE)            # write output   terra::writeRaster(     x = rast.hold,      filename = file.path(mypath, \"2041-2070_ssp370_GFDL\", \"v1_maxent_10km\", output.files[a]),      filetype = \"AAIGrid\",      overwrite = FALSE     )      # remove object once its done   rm(rast.hold)      }"},{"path":"https://ieco-lab.github.io/slfSpread/articles/030_retrieve_bioclim_variables.html","id":"ssp585-1","dir":"Articles","previous_headings":"2. Tidy for MaxEnt > 2.4 Tidying CMIP6 data","what":"SSP585","title":"Retrieve bioclim rasters from CHELSA and tidy them for MaxEnt modeling","text":"","code":"# v1 for tidied rasters dir.create(file.path(mypath, \"2041-2070_ssp585_GFDL\", \"v1\"))  # v1_maxent for the ascii versions dir.create(file.path(mypath, \"2041-2070_ssp585_GFDL\", \"v1_maxent\"))  # 10km aggregated versions of ascii dir.create(file.path(mypath, \"2041-2070_ssp585_GFDL\", \"v1_maxent_10km\")) # I will load in the files and then get the new names I would like to give them  # load in bioclim layers to be cropped- the original .tif files env.files <- list.files(path = file.path(mypath, \"2041-2070_ssp585_GFDL\", \"originals\"), pattern = \"\\\\.tif$\", full.names = TRUE)  # output file names output.files <- list.files(path = file.path(mypath, \"2041-2070_ssp585_GFDL\", \"originals\"), pattern = \"\\\\.tif$\", full.names = FALSE) %>%   # get rid of endings   gsub(pattern = \"_V.2.1.tif\", replacement = \"\") %>%   # crop out some detail   gsub(pattern = \"-esm4_ssp\", replacement = \"_\") %>%   tolower()  # more edits to file names output.files <- output.files %>%   gsub(pattern = \"chelsa_\", replacement = \"\") # view list of filetypes for terra, use .ascii   terra::gdal(drivers = TRUE)    # loop to crop extent for all files   for(a in seq_along(env.files)) {          # load each raster into temp object     rast.hold <- terra::rast(env.files[a])                    # begin edits     # crop new rasters to extent     rast.hold <- terra::crop(x = rast.hold, y = ext.obj, overwrite = FALSE)          # mask the bioclim layer by global_atc     rast.hold <- terra::mask(x = rast.hold, mask = mask_layer)          # set crs     rast.hold <- terra::project(x = rast.hold, y = \"EPSG:4326\", method = \"bilinear\")          # set origin     terra::origin(rast.hold) <- c(-0.0001396088, -0.0001392488)          #resample to fit the extent/resolution of the main layer global_bio1     #use bilinear interpolation, since values are continuous     rast.hold <- terra::resample(x = rast.hold, y = main_layer, method = \"bilinear\")          # crop again to ensure aggregation doesnt increase extent     rast.hold <- terra::crop(x = rast.hold, y = ext.obj, overwrite = FALSE)                         #write out the new resampled rasters!     terra::writeRaster(       x = rast.hold,       filename = file.path(mypath, \"2041-2070_ssp585_GFDL\", \"v1\", paste0(output.files[a], \"_global\", \".tif\")),        filetype = \"GTiff\",        overwrite = FALSE       )          # remove object once its done     rm(rast.hold)  }"},{"path":"https://ieco-lab.github.io/slfSpread/articles/030_retrieve_bioclim_variables.html","id":"tidy-2","dir":"Articles","previous_headings":"2. Tidy for MaxEnt > 2.4 Tidying CMIP6 data > SSP585","what":"tidy","title":"Retrieve bioclim rasters from CHELSA and tidy them for MaxEnt modeling","text":"","code":"# directory of files to modify env.files <- list.files(path = file.path(mypath, \"2041-2070_ssp585_GFDL\", \"v1\"), pattern = \"\\\\.tif$\", full.names = TRUE) %>%   grep(\"bio2_2041-2070_gfdl_585_global.tif|bio11_2041-2070_gfdl_585_global.tif|bio12_2041-2070_gfdl_585_global.tif|bio15_2041-2070_gfdl_585_global.tif\", ., value = TRUE)  # output file names output.files <- list.files(path = file.path(mypath, \"2041-2070_ssp585_GFDL\", \"v1\"), pattern = \"\\\\.tif$\", full.names = FALSE)  %>%   grep(\"bio2_2041-2070_gfdl_585_global.tif|bio11_2041-2070_gfdl_585_global.tif|bio12_2041-2070_gfdl_585_global.tif|bio15_2041-2070_gfdl_585_global.tif\", ., value = TRUE) %>%   gsub(pattern = \".tif\", replacement = \".asc\") # loop to convert to .ascii for(a in seq_along(env.files)) {      # holding object     rast.hold <- terra::rast(env.files[a])      # write output   terra::writeRaster(     x = rast.hold,      filename = file.path(mypath, \"2041-2070_ssp585_GFDL\", \"v1_maxent\", output.files[a]),      filetype = \"AAIGrid\",      overwrite = FALSE     )      # remove object once its done   rm(rast.hold)        } # loop to aggregate and convert to .ascii for(a in seq_along(env.files)){      # holding object     rast.hold <- terra::rast(env.files[a])      # aggregate to 10km scale. cells are roughly 1km, so aggregate by factor of 10   rast.hold <- terra::aggregate(x = rast.hold, fact = 10, fun = \"mean\", na.rm = TRUE)      # crop again to ensure aggregation doesnt increase extent   rast.hold <- terra::crop(x = rast.hold, y = ext.obj, overwrite = FALSE)            # write output   terra::writeRaster(     x = rast.hold,      filename = file.path(mypath, \"2041-2070_ssp585_GFDL\", \"v1_maxent_10km\", output.files[a]),      filetype = \"AAIGrid\",      overwrite = FALSE     )      # remove object once its done   rm(rast.hold)      }"},{"path":"https://ieco-lab.github.io/slfSpread/articles/030_retrieve_bioclim_variables.html","id":"assess-colinearity","dir":"Articles","previous_headings":"","what":"3. Assess Colinearity","title":"Retrieve bioclim rasters from CHELSA and tidy them for MaxEnt modeling","text":"Now different climatologies tidied use, need decide variables logical use model Lycorma delicatula. can done assessing level co-linearity variables assessing biological relevance SLF. using climatologies MaxEnt model, need assess level co-linearity (amount layers correlated ). expect , derived either temperature precipitation. using threshold 0.7 pearson’s correlation lower select variables use downstream models. perform correlation analysis historical versions rasters, climate change versions variables likely display trends. use analysis decide covariates go historical interpolated (climate change) models. important reduce co-linearity, metric used select covariates species distribution models. biology target species arguably important reducing co-linearity. MaxEnt model informed biology Lycorma delicatula likely produce misleading wrong predictions realized niche. process selecting covariates also need informed literature. example, evidence minimum winter temperature significantly negative impact egg survival (Lee et.al, 2011). downsize rasters v1 folder perform co-linearity analysis layers. done historical variables. using terra::aggregate() combine cells 2x2 grid fashion take mean 4 cells.","code":"mypath <- file.path(here::here() %>%                        dirname(),                     \"maxent/historical_climate_rasters/chelsa2.1_30arcsec\")  #list env layers, load env.files <- list.files(path = file.path(mypath, \"v1\"), pattern = \"\\\\.tif$\", full.names = TRUE) output.files <- list.files(path = file.path(mypath, \"v1\"), pattern = \"\\\\.tif$\", full.names = FALSE) # I had to modify \"pattern\" to not include any .tif.aux.xml files  # loop to downsample rasters for colinearity analysis # code taken from Huron et.al for(a in seq_along(env.files)){      # holding object   rast.hold <- terra::rast(env.files[a])      rast.hold <- terra::aggregate(     rast.hold,      fact = 2, # downsampling by factor of 2 (read 2 cells deep around cell) and take mean of cells     fun = \"mean\", # take mean of these cells     # expand = TRUE, # a carryover from raster::aggregate, terra does this automatically     na.rm = TRUE,      filename = file.path(mypath, \"v1_downsampled\", output.files[a]), overwrite = FALSE     )      # remove object once its done   rm(rast.hold)    }"},{"path":"https://ieco-lab.github.io/slfSpread/articles/030_retrieve_bioclim_variables.html","id":"create-and-tidy-correlation-matrix","dir":"Articles","previous_headings":"3. Assess Colinearity","what":"3.1 create and tidy correlation matrix","title":"Retrieve bioclim rasters from CHELSA and tidy them for MaxEnt modeling","text":"use ENMTools::raster.cor.matrix() perform correlation analysis. chunk also take awhile, time break book . correlation values saved 24x24 matrix. Now values saved .csv file, need tidy data readable format. simplify column row names reorder . also convert correlations absolute values can analyze differences layers 0-1 scale. correlations now intuitive read, ready analyzed.","code":"if(FALSE){      mypath <- file.path(here::here() %>%                          dirname(),                       \"maxent/historical_climate_rasters/chelsa2.1_30arcsec\")      # load downsampled layers and stack for raster.cor.matrix command    # list of layer paths   env.files <- list.files(path = file.path(mypath, \"v1_downsampled\"), pattern = \"\\\\.tif$\", full.names = TRUE) %>%     # only grab bioclim variables     grep(pattern = \"bio\", value = TRUE)           # stack downsampled layers   env <- c(x = terra::rast(env.files))   # use nlyr, a command of the function terra::dimensions() to see if stacking was successful   nlyr(env)         # create a correlation matrix for picking model layers   env.cor <- ENMTools::raster.cor.matrix(env = env, method = \"pearson\")      # write out correlations as .csv.   write.csv(x = env.cor, file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"env_cor_chelsa_downsampled_v2.csv\"), col.names = TRUE, row.names = TRUE)    } env.cor2 <- read.csv(file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"env_cor_chelsa_downsampled_v2.csv\"))   env.cor2 <- as.data.frame(env.cor2)  # convert rownames column to rownames row.names(env.cor2) <- env.cor2$X # get rid of X column env.cor2 <- env.cor2[, which(names(env.cor2) != \"X\")]  # reorder columns and take absolute values of correlations env.cor3 <- env.cor2 %>%   dplyr::select(order(colnames(.))) %>%   abs(.)   # simplify colnames colnames(env.cor3) <- gsub(pattern = \"_V.2.1\", replacement = \"\", x = colnames(env.cor3)) colnames(env.cor3) <- gsub(pattern = \"_1981.2010\", replacement = \"\", x = colnames(env.cor3)) colnames(env.cor3) <- gsub(pattern = \"CHELSA_\", replacement = \"\", x = colnames(env.cor3)) # simplify rownames rownames(env.cor3) <- gsub(pattern = \"_V.2.1\", replacement = \"\", x = rownames(env.cor3)) rownames(env.cor3) <- gsub(pattern = \"_1981.2010\", replacement = \"\", x = rownames(env.cor3)) rownames(env.cor3) <- gsub(pattern = \"CHELSA_\", replacement = \"\", x = rownames(env.cor3))  # factor levels to order row names var.names <- c(x = \"bio1\", \"bio2\", \"bio3\", \"bio4\", \"bio5\", \"bio6\", \"bio7\", \"bio8\", \"bio9\", \"bio10\", \"bio11\", \"bio12\", \"bio13\", \"bio14\", \"bio15\", \"bio16\", \"bio17\", \"bio18\", \"bio19\")  # reorder columns  env.cor4 <- env.cor3 %>%   dplyr::select(bio1, bio2:bio9, bio10:bio19) %>%   # reorder rows   mutate(var = rownames(.)) %>% # add column of row names to reorder   arrange(factor(var, levels = var.names)) %>%   dplyr::select(!var) # take out temp column  # write tidied data write.csv(x = env.cor4, file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"env_cor_chelsa_downsampled_abs_v2.csv\"), col.names = TRUE, row.names = TRUE)"},{"path":"https://ieco-lab.github.io/slfSpread/articles/030_retrieve_bioclim_variables.html","id":"covariate-selection-","dir":"Articles","previous_headings":"3. Assess Colinearity","what":"3.2 Covariate selection.","title":"Retrieve bioclim rasters from CHELSA and tidy them for MaxEnt modeling","text":"Now readable format converted absolute scale, can create heatmaps display values look trends. create heatmap raw values threshold 0.7. need set factor levels variable names rename .  found choosing covariates can rather ad-hoc, developed believe best-fit methodology choosing covariates much practice. First, look different groupings covariates (based temperature precipitation) choose representative group. ideal representative highly correlated others group, indicates predictive power, represents generality group (ie, mean yearly average). case, chose mean temperature coldest quarter precip (bio 11 12). Besides correlation values, mean temp coldest quarter highly impactful survival SLF eggs (Lee et.al, 2011). save plot produce binarized version continue choosing variables. way, cutoff clearer choice obvious.  Indeed, choice much clearer plot. Mean temp coldest quarter (bio 11) 0.7 correlated temp-based variables, except mean diurnal range (bio 2). Meanwhile, annual precipitation highly correlated precipitation based variables, except precipitation seasonality (bio 12). two variables also chosen.","code":"env.cor5 <- read.csv(file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"env_cor_chelsa_downsampled_abs_v2.csv\"))  row.names(env.cor5) <- env.cor5$X  env.cor5 <- as.matrix(env.cor5[, which(names(env.cor5) != \"X\")]) # Make into triangle #env.cor5[upper.tri(env.cor5, diag = FALSE)] <- NA  # pivot correlation heatmap for plotting # code taken from Huron et.al env.cor5 <- env.cor5 %>%   tibble::as_tibble() %>%   mutate(covar = colnames(.)) %>%   dplyr::select(covar, everything()) %>% # put covar at front   pivot_longer(cols = -covar, names_to = \"var\") %>% # pivot longer for plotting   dplyr::select(var, covar, everything()) # factor levels to order row names var.names <- c(x = \"bio1\", \"bio2\", \"bio3\", \"bio4\", \"bio5\", \"bio6\", \"bio7\", \"bio8\", \"bio9\", \"bio10\", \"bio11\", \"bio12\", \"bio13\", \"bio14\", \"bio15\", \"bio16\", \"bio17\", \"bio18\", \"bio19\")  # factor levels to rename abbreviations to actual names var.renames <- c(    \"bio1\" = \"annual mean temperature\",   \"bio2\" = \"mean diurnal range\",   \"bio3\" = \"isothermality\",   \"bio4\" = \"temperature seasonality\",   \"bio5\"    = \"max temp of warmest month\",   \"bio6\" = \"min temp of coldest month\",   \"bio7\" = \"temperature annual range\",   \"bio8\"    = \"mean temp of wettest quarter\",   \"bio9\" = \"mean temp of driest quarter\",   \"bio10\" = \"mean temp of warmest quarter\",   \"bio11\"   = \"mean temp of coldest quarter\",   \"bio12\" = \"annual precipitation\",   \"bio13\" = \"precip of wettest month\",   \"bio14\" = \"precip of driest month\",   \"bio15\" = \"precipitation seasonality\",   \"bio16\" = \"precip of wettest quarter\",   \"bio17\"   = \"precip of driest quarter\",   \"bio18\" = \"precip of warmest quarter\",   \"bio19\" = \"precip of coldest quarter\" ) # plot correlation matrix (env.cor_plot <- ggplot(data = env.cor5) +   geom_tile(aes(x = factor(var, levels = var.names), # reorder according to var.names factor obj                 y = factor(covar, levels = var.names),                  fill = value)) +   viridis::scale_fill_viridis(discrete = FALSE, direction = -1, limits = c(0,1), name = \"Correlation\", na.value = \"white\") +   theme_minimal() +   guides(x =  guide_axis(angle = 45)) +   labs(x = \"\", y = \"\")  +   labs(title = \"Pearson's correlations: CHELSA and atc covariate rasters\") +   theme(legend.position = \"bottom\") +   scale_y_discrete(labels = var.renames) +    coord_equal(ratio = 1) ) # save correlation heatmap ggsave(env.cor_plot, filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"env_cor_CHELSA_v2.jpg\"),        height = 8,         width = 10,        device = \"jpeg\",        dpi = \"retina\") # binary heatmap  env.cor6 <- env.cor5 # cut values into ranges above and below 0.7 env.cor6$value <- cut(env.cor6$value, breaks = c(0, 0.709, 1), labels = c(\"0.7 or below\", \"above 0.7\"))  # 0.7 threshold heatmap (env.cor_binary_plot <- ggplot(data = env.cor6) +   geom_tile(aes(x = factor(var, levels = var.names), # reorder according to var.names factor obj                 y = factor(covar, levels = var.names),                  fill = value)) +   theme_minimal() +   guides(x =  guide_axis(angle = 45),          fill = guide_legend(title = \"Correlation\")) +   labs(x = \"\", y = \"\")  +   labs(title = \"Pearson's correlations: CHELSA and atc covariate rasters\") +   scale_fill_manual(values = c(\"yellow2\", \"azure4\")) +   theme(legend.position = \"bottom\") +   scale_y_discrete(labels = var.renames) +   coord_equal(ratio = 1) ) ggsave(env.cor_binary_plot, filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"env_cor_CHELSA_v2_binary.jpg\"),        height = 8,         width = 10,        device = \"jpeg\",        dpi = \"retina\")"},{"path":"https://ieco-lab.github.io/slfSpread/articles/030_retrieve_bioclim_variables.html","id":"visualize-rasters","dir":"Articles","previous_headings":"","what":"4. Visualize rasters","title":"Retrieve bioclim rasters from CHELSA and tidy them for MaxEnt modeling","text":"final 4 variables selected SDM Lycorma delicatula, include “mean diurnal range”, “mean temperature coldest quarter”, “annual precipitation”, “precipitation seasonality”. covariates can projected climate change biologically relevant target species. next vignette, crop covariates appropriate spatial scale run global-scale model. also create necessary datasets model.","code":"mypath <- file.path(here::here() %>%                          dirname(),                       \"maxent/historical_climate_rasters/chelsa2.1_30arcsec\")  # load in bio 1 bio1 <- terra::rast(x = file.path(mypath, \"v1_downsampled\", \"bio1_1981-2010_global.tif\"))  bio1_plot <- ggplot() +   geom_tile(data = as.data.frame(bio1),                aes(x = x, y = y, fill = `bio1_1981-2010_global`)) +   xlab(\"longitude\") +   ylab(\"latitude\") +   theme_minimal() +   theme(legend.position = \"none\") +   labs(title = \"CHELSA bio 1\") +   coord_quickmap()"},{"path":"https://ieco-lab.github.io/slfSpread/articles/030_retrieve_bioclim_variables.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Retrieve bioclim rasters from CHELSA and tidy them for MaxEnt modeling","text":"Huron, N. ., Behm, J. E., & Helmus, M. R. (2022). Paninvasion severity assessment U.S. grape pest disrupt global wine market. Communications Biology, 5(1), 655. https://doi.org/10.1038/s42003-022-03580-w Karger, D.N., Conrad, O., Böhner, J., Kawohl, T., Kreft, H., Soria-Auza, R.W., Zimmermann, N.E., Linder, P., Kessler, M. (2017). Climatologies high resolution Earth land surface areas. Scientific Data. 4 170122. https://doi.org/10.1038/sdata.2017.122 Karger D.N., Conrad, O., Böhner, J., Kawohl, T., Kreft, H., Soria-Auza, R.W., Zimmermann, N.E, Linder, H.P., Kessler, M. (2018): Data : Climatologies high resolution earth’s land surface areas. EnviDat. https://doi.org/10.16904/envidat.228.v2.1 Krasting, J. P., John, J. G., Blanton, C., McHugh, C., Nikonov, S., Radhakrishnan, ., Rand, K., Zadeh, N. T., Balaji, V., Durachta, J., Dupuis, C., Menzel, R., Robinson, T., Underwood, S., Vahlenkamp, H., Dunne, K. ., Gauthier, P. P., Ginoux, P., Griffies, S. M., … Zhao, M. (2018). NOAA-GFDL GFDL-ESM4 model output prepared CMIP6 CMIP [Dataset]. Earth System Grid Federation. https://doi.org/10.22033/ESGF/CMIP6.1407 Lee, J.-S., Kim, .-K., Koh, S.-H., Cho, S. J., Jang, S.-J., Pyo, S.-H., & Choi, W. . (2011). Impact minimum winter temperature Lycorma delicatula (Hemiptera: Fulgoridae) egg mortality. Journal Asia-Pacific Entomology, 14(1), 123–125. https://doi.org/10.1016/j.aspen.2010.09.004 Weiss, D. J., Nelson, ., Gibson, H. S., Temperley, W., Peedell, S., Lieber, ., Hancher, M., Poyart, E., Belchior, S., Fullman, N., Mappin, B., Dalrymple, U., Rozier, J., Lucas, T. C. D., Howes, R. E., Tusting, L. S., Kang, S. Y., Cameron, E., Bisanzio, D., … Gething, P. W. (2018). global map travel time cities assess inequalities accessibility 2015. Nature, 553(7688), 333–336. https://doi.org/10.1038/nature25181","code":""},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/030_retrieve_bioclim_variables.html","id":"additional-environmental-covariates","dir":"Articles","previous_headings":"Appendix","what":"Additional environmental covariates","title":"Retrieve bioclim rasters from CHELSA and tidy them for MaxEnt modeling","text":"Along 19 traditional bioclimatic variables, CHELSA created 29 additional variables may help explain SLF invasion N. America. include 4 metrics growing degree day. Several studies attempted characterize lower threshold egg development found numbers 8-13C (Maino et.al, 2022). Maino et.al also found egg mortality increased significantly 10C (Maino et.al, 2022). include various measures degree day 10C threshold. additional variables add models: GDD10: Growing degree days heat sum 10°C NGD10: Number growing degree days 10°C GDGFGD10: First growing degree day 10°C GDDLGD10: Last growing degree day 10°C","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/030_retrieve_bioclim_variables.html","id":"download-historical-dd-variables","dir":"Articles","previous_headings":"Appendix > Additional environmental covariates","what":"Download historical DD variables","title":"Retrieve bioclim rasters from CHELSA and tidy them for MaxEnt modeling","text":"Files placed \"maxent/historical_climate_rasters/chelsa2.1_30arcsec/originals\".","code":"if(FALSE) {    # historical data   chelsa_historic_URLs <- read_table(file = file.path(here::here(), \"data-raw\", \"CHELSA\", \"chelsa_1981-2010_bioclim_URLs.txt\"),                                 col_names = FALSE) %>%     as.data.frame() %>%     dplyr::select(\"X1\") %>%     dplyr::rename(\"URL\" = \"X1\")      # select only DD URLs   chelsa_historic_URLs <- slice(.data = chelsa_historic_URLs, c(32, 35, 38, 55))      # loop to download historical URLs   for(i in 1:nrow(chelsa_historic_URLs)) {          file.tmp <- chelsa_historic_URLs[i, ]          utils::browseURL(url = file.tmp)        }  }"},{"path":"https://ieco-lab.github.io/slfSpread/articles/040_setup_global_MaxEnt_model.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Setup for global-scale MaxEnt model","text":"previous vignette, retrieved formatted rasters 19 global-scale climate variables CHELSA. represent relevant variables accomplishment goal, explain distribution Lycorma delicatula according climate. also retrieved climate change versions variables, created CMIP6 climate modeling project. variables standardized formatted needs. relevant variables chosen future models. goal analysis train four models: global model, native range model, two invaded models based invaded ranges North America east Asia. three models based historical (1981-2010) climate data extrapolated climate change using CMIP6 rasters. model based different training testing ranges. vignette, set run global model project climate change. need format data vignette, trained tested available climate data split 10 random folds. next vignette run model, following vignette set three regional models.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/040_setup_global_MaxEnt_model.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Setup for global-scale MaxEnt model","text":"prepare vignette loading necessary packages run script. also creating maps analysis, create list object containing standardized map style continue use. Note: setting global options document certain code chunks rendered final .html file. set eval = FALSE none code re-run (preventing files overwritten knitting) simply overwrite chunks plots.","code":"library(tidyverse)  #data manipulation  library(here) #making directory pathways easier on different instances here::here() ## [1] \"C:/Users/tun83449/Documents/GitHub/slfSpread\" # here() starts at the root folder of this package.  library(devtools) library(dismo) # generate random background points  # spatial data handling library(raster)  library(terra)  # aesthetics library(webshot) library(webshot2) library(kableExtra) library(patchwork) # model training dataset # save as .csv write_csv(model_info, file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"global_models_info.csv\"))  # save as .html kableExtra::save_kable(   model_info_kable,    file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"global_models_info.html\"),   self_contained = TRUE,   bs_theme = \"simplex\"   )  # initialize webshot by  # webshot::install_phantomjs() # convert to pdf webshot::webshot(   url = file.path(here::here(), \"vignette-outputs\", \"figures\", \"global_models_info.html\"),   file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"global_models_info.jpg\"),   zoom = 2 )   # rm html file.remove(file.path(here::here(), \"vignette-outputs\", \"figures\", \"global_models_info.html\"))  # model extents map_style <- list(   xlab(\"longitude\"),   ylab(\"latitude\"),   theme_classic(),   theme(legend.position = \"bottom\",         panel.background = element_rect(fill = \"lightblue2\",                                         colour = \"lightblue2\")         ),   scale_x_continuous(expand = c(0, 0)),   scale_y_continuous(expand = c(0, 0)),   labs(fill = \"Suitability for SLF\"),   viridis::scale_fill_viridis(option = \"D\"),   coord_equal() )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/040_setup_global_MaxEnt_model.html","id":"select-background-points-for-model","dir":"Articles","previous_headings":"","what":"1. Select Background Points for model","title":"Setup for global-scale MaxEnt model","text":"MaxEnt requires set “background” “pseudoabsence” points use sample rasters, take place recorded absences. MaxEnt can randomly pick internally, intuitive manually select . can also account latitudinal stretching cell size factors selected manually. Just review, points used characterize variables affect SLF distribution. Temperature / precipitation values extracted rasters point set. MaxEnt use points calculate equation describes relationship SLF environment predict suitability. Note one set background points need created global regional models. First, load known SLF presences background sampling occur grid cells. Gallien et.al recommended 20,000 points background global-scale model. Gallien also found higher number background points artificially deflates MaxEnt predicitons, important choose many. However, appropriate scale datasets according spatial scale rasters. Initially, selected 42,523 random background points using dismo::randomPoints(), Santana Jr et.al recommended amount modeling global scale (Santana Jr et.al, 2019). models incredibly specific overfit, models incredible complex, downgraded point count 20,000. Note running analysis 10km scale, need use 10km rasters ensure points chosen appropriate spacing. datasets stored vignette-outputs/data-tables. Now, plot points visualization purposes. points seem sufficiently cover global extent. can also see latitude weighting, areas nearest poles less densely covered points areas near equator.","code":"# dismo requires the base function (not tidyverse) slf_points <- read_rds(file = file.path(here::here(), \"data\", \"slf_all_coords_final_2024-08-05.rds\")) %>%   dplyr::select(-species) %>%   as.data.frame() # file path to local directory mypath <- file.path(here::here() %>%                       dirname(),                    \"maxent/historical_climate_rasters/chelsa2.1_30arcsec/v1_maxent_10km\") # load in reference layer. needs to be done with raster package because dismo doesnt recognize terra package objects global_bio2 <- raster::raster(x = file.path(mypath, \"bio2_1981-2010_global.asc\")) # check number of cells terra::ncell(global_bio2) # plenty of cells to work with if we remove those with SLF points  # set seed so that the random points for this dataset are the same the next time this code is run set.seed(1.5) # generate random points  global_points <- dismo::randomPoints(   mask = global_bio2,    n = 20000, # double the default number used by maxent   p = slf_points,   excludep = TRUE, # exclude cells where slf has been found   lonlatCorrection = TRUE, # weight samples by latitude because cell size is larger closer to equator   warn = 2 # higher number gives most warnings, including if sample size not reached   ) %>%   as.data.frame(.)  # save as csv write_csv(x = global_points, file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"global_background_points_v3.csv\")) # save as rds file write_rds(global_points, file = file.path(here::here(), \"data\", \"global_background_points_v3.rds\")) mypath <- file.path(here::here() %>%                       dirname(),                    \"maxent/historical_climate_rasters/chelsa2.1_30arcsec/v1_maxent_10km\")  global_bio2_df <- terra::rast(x = file.path(mypath, \"bio2_1981-2010_global.asc\")) %>%   terra::as.data.frame(., xy = TRUE)  global_points <- read_csv(file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"global_background_points_v3.csv\")) ## Rows: 20000 Columns: 2 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## dbl (2): x, y ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. global_background_plot <- ggplot() +     geom_raster(data = global_bio2_df, aes(x = x, y = y), fill = \"azure1\") +     geom_point(data = global_points, aes(x = x, y = y), color = \"firebrick2\", size = 0.1) +     ggtitle(\"'global' model background points\") +     map_style +     theme(legend.position = \"none\") ggsave(   global_background_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"global_model_background_points_v3.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/040_setup_global_MaxEnt_model.html","id":"plot-slf-presences","dir":"Articles","previous_headings":"","what":"2. Plot SLF presences","title":"Setup for global-scale MaxEnt model","text":"Now create plot SLF presence locations reference. points represent known presences model. Now selected background point datasets created rasters training projection purposes, ready run models. next vignette train project global model, following vignette perform similar setup regional model.","code":"global_slf_plot <- ggplot() +   geom_raster(data = global_bio2_df, aes(x = x, y = y), fill = \"azure1\") +   geom_point(data = slf_points, aes(x = x, y = y), color = \"darkorange\", size = 0.1) +   labs(     title = \"'global' model SLF presences\",     x = \"longitude\",     y = \"latitude\"   ) +   scale_x_continuous(expand = c(0, 0)) +   scale_y_continuous(expand = c(0, 0)) +   theme_classic() +   theme(panel.background = element_rect(fill = \"lightblue2\",                                         colour = \"lightblue2\")         ) +   coord_equal() ggsave(   global_slf_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"global_model_presence_points_v3.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/040_setup_global_MaxEnt_model.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Setup for global-scale MaxEnt model","text":"Calvin, D. D., Rost, J., Keller, J., Crawford, S., Walsh, B., Bosold, M., & Urban, J. (2023). Seasonal activity spotted lanternfly (Hemiptera: Fulgoridae), Southeast Pennsylvania. Environmental Entomology, 52(6), 1108–1125. https://doi.org/10.1093/ee/nvad093 Gallien, L., Douzet, R., Pratte, S., Zimmermann, N. E., & Thuiller, W. (2012). Invasive species distribution models – violating equilibrium assumption can create new insights. Global Ecology Biogeography, 21(11), 1126–1136. https://doi.org/10.1111/j.1466-8238.2012.00768.x Santana Jr, P. ., Kumar, L., Da Silva, R. S., Pereira, J. L., & Picanço, M. C. (2019). Assessing impact climate change worldwide distribution Dalbulus maidis (DeLong) using MaxEnt. Pest Management Science, 75(10), 2706–2715. https://doi.org/10.1002/ps.5379","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/040_setup_global_MaxEnt_model.html","id":"appendix--patchwork-background-and-presence-plots","dir":"Articles","previous_headings":"","what":"Appendix- Patchwork background and presence plots","title":"Setup for global-scale MaxEnt model","text":"","code":"global_slf_plot <- global_slf_plot +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"A\") +   scale_x_continuous(expand = c(0, 0)) +   scale_y_continuous(expand = c(0, 0)) +   theme(     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.1),     plot.tag = element_text(face = \"bold\", size = 25)     )   global_background_plot <- global_background_plot +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"B\") +   scale_x_continuous(expand = c(0, 0)) +   scale_y_continuous(expand = c(0, 0))  +   theme(     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.1),     plot.tag = element_text(face = \"bold\", size = 25)   )      global_patchwork <- (global_slf_plot / global_background_plot) +   plot_layout(axes = \"collect\", axis_titles = \"collect\") +   plot_annotation(title = \"global-scale model (A) presences and (B) background points\") ggsave(   global_patchwork,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"global_model_v3_summary.jpg\"),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/050_run_global_MaxEnt_model.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Run global-scale MaxEnt model","text":"last vignette, produced background point dataset global-scale model. vignette, start training MaxEnt models obtaining outputs need analysis! vignette train global-scale model next vignettes train three regional-scale models. first step toward goal analyzing realized niche Lycorma delicatula multiple spatial scales. output global-scale model compared directly output ensemble regional-scale models determine impact climate change suitability SLF important viticultural regions. hypothesize creating models multiple spatial scales, can confidence suitability predictions made specific SLF populations important viticultural regions, can predict risk specific populations spreading now climate change. also hypothesize regional-scale models, ensembled single prediction, make refined predictions global-scale model . begin setup model associating presence data covariates data frame fed MaxEnt. also separate data random folds cross-validation. done, can train MaxEnt model. Outputs model include list summary statistics, suitability maps point-wise suitability values SLF presences important viticultural regions. also create projected map suitability outputs 3 CMIP6 scenarios plan use analysis. vignette 3 subvignettes (051-053) outline comment basic workflow 3 R functions created use vignette. functions include compute_MaxEnt_summary_statistics_CV.R, create_MaxEnt_suitability_maps_CV.R, predict_xy_suitability_CV.R. Please see subvignettes step--step guide creation functions. package also versions functions designed MaxEnt models without cross-validation. share name without _CV ending used regional models.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/050_run_global_MaxEnt_model.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Run global-scale MaxEnt model","text":"CURRENT MODEL VERSION: v3 Note: setting global options document certain code chunks rendered final .html file. set eval = FALSE none code re-run (preventing files overwritten knitting) simply overwrite chunks plots. SDMtune run MaxEnt java via rJava package. need ensure machine proper version java installed (x32 x64) operating system. chunk sets java memory allocation (Xmx). increase memory allocation 512m (default) 2GB memory.","code":"# general tools library(tidyverse)  #data manipulation library(here) #making directory pathways easier on different instances here::here() # here::here() starts at the root folder of this package. ## [1] \"C:/Users/tun83449/Documents/GitHub/slfSpread\" library(devtools)  # SDMtune and dependencies library(SDMtune) # main package used to run SDMs library(dismo) # package underneath SDMtune library(rJava) # for running MaxEnt library(plotROC) # plots ROCs  # spatial data handling library(raster)  library(terra)  library(sf)  library(viridis)  library(blockCV) # appendix, not necessary to run this vignette checkMaxentInstallation(verbose = TRUE) ## ✔ Java is installed. ## ✔ The packege rJava is installed. ## ✔ The file maxent.jar is present in the correct folder. ## [1] TRUE # xmx sets java memory allocation options(java.parameters = \"-Xmx2048m\")  # xss sets java stack size # options(java.parameters = c(\"-Xss2560k\", \"-Xmx2048m\"))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/050_run_global_MaxEnt_model.html","id":"format-data-for-global-model","dir":"Articles","previous_headings":"","what":"1. Format Data for Global Model","title":"Run global-scale MaxEnt model","text":"load datasets need MaxEnt models. labeled beginning object name parameter used SDMtune::train() function (x, p ). begin loading covariate data loading points datasets.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/050_run_global_MaxEnt_model.html","id":"import-data","dir":"Articles","previous_headings":"1. Format Data for Global Model","what":"1.1 Import data","title":"Run global-scale MaxEnt model","text":"First, load SLF presence dataset created vignette 020 background points dataset created vignette 040. Next, load stack covariates needed model, trimmed vignette 030. load 3 sets CMIP6 covariates, 1 per ssp scenario (126/370/585). import rasters environmental covariates, stack gather summary statistics. also shorten names exclude possible operators layer names (example, using dash symbol found interfere SDMtune making predictions tables downstream). Now perform operation times 3 CMIP6 models.","code":"# slf presences p_slf_points <- readr::read_rds(file = file.path(here::here(), \"data\", \"slf_all_coords_final_2024-08-05.rds\")) %>%   dplyr::select(-species)   # entire eastern USA background point set a_global_background_points <- readr::read_rds(file = file.path(here::here(), \"data\", \"global_background_points_v3.rds\")) # path to directory mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/historical_climate_rasters/chelsa2.1_30arcsec\")  # the env covariates used to train the model global x_global_hist_env_covariates_list <- list.files(path = file.path(mypath, \"v1_maxent_10km\"), pattern = \"\\\\.asc$\", full.names = TRUE) %>%     grep(\"bio2_1981-2010_global.asc|bio11_1981-2010_global.asc|bio12_1981-2010_global.asc|bio15_1981-2010_global.asc\", ., value = TRUE) # path to directory   mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/future_climate_rasters/chelsa2.1_30arcsec\")    # SSP126 x_global_126_env_covariates_list <- list.files(   path = file.path(mypath, \"2041-2070_ssp126_GFDL\", \"v1_maxent_10km\"), pattern = \"\\\\_global.asc$\", full.names = TRUE   ) %>%   # dont include Access to cities   grep(pattern = \"atc_2015\", value = TRUE, invert = TRUE)   # SSP370 x_global_370_env_covariates_list <- list.files(   path = file.path(mypath, \"2041-2070_ssp370_GFDL\", \"v1_maxent_10km\"), pattern = \"\\\\_global.asc$\", full.names = TRUE   ) %>%   # dont include Access to cities   grep(pattern = \"atc_2015\", value = TRUE, invert = TRUE)   ## SSP585 x_global_585_env_covariates_list <- list.files(   path = file.path(mypath, \"2041-2070_ssp585_GFDL\", \"v1_maxent_10km\"), pattern = \"\\\\_global.asc$\", full.names = TRUE   ) %>%   # dont include Access to cities   grep(pattern = \"atc_2015\", value = TRUE, invert = TRUE) # layer name object. Check order of layers first env_layer_names <- c(\"bio11\", \"bio12\", \"bio15\", \"bio2\") # stack env covariates x_global_hist_env_covariates <- terra::rast(x = x_global_hist_env_covariates_list)  # attributes nlyr(x_global_hist_env_covariates) names(x_global_hist_env_covariates) minmax(x_global_hist_env_covariates) # ext(x_global_hist_env_covariates) # crs(x_global_hist_env_covariates)   # I will change the name of the variables because they are throwing errors in SDMtune names(x_global_hist_env_covariates) <- env_layer_names # confirmed- SDMtune doesnt like dashes in column names (it is read as a mathematical operation) # stack env covariates x_global_126_env_covariates <- terra::rast(x = x_global_126_env_covariates_list)  # attributes nlyr(x_global_126_env_covariates) names(x_global_126_env_covariates) minmax(x_global_126_env_covariates) # ext(x_global_126_env_covariates) # crs(x_global_126_env_covariates)  names(x_global_126_env_covariates) <- env_layer_names   # stack env covariates x_global_370_env_covariates <- terra::rast(x = x_global_370_env_covariates_list)  # attributes nlyr(x_global_370_env_covariates) names(x_global_370_env_covariates) minmax(x_global_370_env_covariates) # ext(x_global_370_env_covariates) # crs(x_global_370_env_covariates)  names(x_global_370_env_covariates) <- env_layer_names   # stack env covariates x_global_585_env_covariates <- terra::rast(x = x_global_585_env_covariates_list)  # attributes nlyr(x_global_585_env_covariates) names(x_global_585_env_covariates) minmax(x_global_585_env_covariates) # ext(x_global_585_env_covariates) # crs(x_global_585_env_covariates)  names(x_global_585_env_covariates) <- env_layer_names rm(x_global_hist_env_covariates_list) rm(x_global_126_env_covariates_list) rm(x_global_370_env_covariates_list) rm(x_global_585_env_covariates_list)"},{"path":"https://ieco-lab.github.io/slfSpread/articles/050_run_global_MaxEnt_model.html","id":"create-input-data-objects","dir":"Articles","previous_headings":"1. Format Data for Global Model","what":"1.2 create input data objects","title":"Run global-scale MaxEnt model","text":"need combine covariate, presence background point datasets single dataset feed MaxEnt (SWD, samples data object). dataset need contain point-wise values predictor covariates presence background point coordinates. SDMtune takes SWD object purpose, containing presences background points associated covariate data fed model, create now. usually look many records dropped save , SDMtune gives undefined warning many samples discarded. case, lost 2 presence records, acceptable. also save output used later.","code":"global_SWD <- SDMtune::prepareSWD(   species = \"Lycorma delicatula\",   env = x_global_hist_env_covariates,   p = p_slf_points,   a = a_global_background_points,   verbose = TRUE # print helpful messages   )  global_SWD@coords # coordinates global_SWD@pa # presence / absence (background counted as absence) global_SWD@data # extracted data from SDMtune::swd2csv(swd = global_SWD, file_name = c(   file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"global_slf_presences_with_data_v3.csv\"),   file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"global_background_points_with_data_v3.csv\")   ))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/050_run_global_MaxEnt_model.html","id":"create-training-test-split","dir":"Articles","previous_headings":"1. Format Data for Global Model > 1.2 create input data objects","what":"Create training / test split","title":"Run global-scale MaxEnt model","text":"randomly split presences training testing, using 80% points training 20% testing. use SDMtune::randomFold() split training data 10 partitions cross-validation. method loosely adapted Srivastava et.al, 2021. first attempts, tried blocked cross-validation methodology using function blockCV::cv_spatial(). attempted many papers say spatially segmenting k-folds rigorous method simple random k-fold. However, method work dataset left many test folds 0 presence points. believe due spatial scale working model (global) comparatively narrow species range (limited east Asia USA). block size reduces autocorrelation 1.5 million meters, made blocks large block receive adequate species presences. also attempted spatial blocking distance (cv_cluster()), yielded similar results. See Appendix file code. Let’s create training/testing data split. Now split training data 10-fold random cross validation.","code":"global_trainTest <-  SDMtune::trainValTest(   x = global_SWD,   test = 0.2, # set used for predicting maps and suitability values   only_presence = TRUE, # only split presences and recycle bg points   seed = 3 )  # separate off training data global_train <- global_trainTest[[1]] global_test <- global_trainTest[[2]]  global_train@coords # coordinates global_train@pa # presence / absence (background counted as absence) global_train@data # extracted data from # create random folds global_trainFolds <- SDMtune::randomFolds(   data = global_train,   k = 10, # 10 folds   only_presence = TRUE,   seed = 4 )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/050_run_global_MaxEnt_model.html","id":"train-tune-global-model","dir":"Articles","previous_headings":"","what":"2. Train & Tune Global Model","title":"Run global-scale MaxEnt model","text":"First, train model 10 cross-validated replicates. model trained 80% SLF presence data, 20% held apart used downstream analysis. default settings used MaxEnt, apart following changes: feature types used (l = linear, q = quadratic, p = product, h = hinge, t = threshold) replicates = 10 iterations = 5000. max number iterations optimization algorithm perform stopping training. Increasing number default 500 allows algorithm make refined predictions. use hyperparameters train initial model, parameters may change based model tuning, perform next.","code":"global_model <- SDMtune::train(   method = \"Maxent\",   data = global_train,   folds = global_trainFolds, # 10 folds for dataset   fc = \"lqpht\", # feature classes set to ALL   iter = 5000, # number of iterations   progress = TRUE )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/050_run_global_MaxEnt_model.html","id":"tuning-maxent-model","dir":"Articles","previous_headings":"2. Train & Tune Global Model","what":"2.1 Tuning MaxEnt Model","title":"Run global-scale MaxEnt model","text":"Next, perform model tuning varying specific hyperparameters. selected hyperparameters thought best model based numerous papers. However, modeling papers species made different choices parameter selection . Luckily, SDMtune makes easy select best fit set hyperparameters range possibilities using gridSearch() function. function trains different model every possible combination hyperparameters listed. can pick best model based AUC, TSS AICc. selected hyperparameters specific reasons listed literature. Feature classes: h, qpht, lqpht Feature classes important govern environmental covariates transformed algorithm (example, presences fall beyond specific point range values, algorithm might determine threshold feature appropriate.) Elith et.al, 2011 used hinge features features showed hinge features alone may perform better. referred MaxEnt model using hinge features resembling additive model, unlike GAM. supplemental materials paper demonstrated linear features redundant also using hinge features. SLF modeling papers, including Huron et.al others SLF, simply use features. Regularization Multiplier: 0.25, 0.5, 1, 1.5, 2 Regularization penalizes overfitting model. model fit range covariate values, point model applied another area values, receives penalty. Radosavljevic Anderson 2014 used range regularization multipliers, 0.25 2, test appropriate value, adopt. compare models highest test AUC TSS values. also save model variations .rds object. Based test AUC metric, highest value attributed model regularization multiplier 1.5 qpht features (model 11). also check based TSS. get slightly different results based test TSS metric. see highest value attributed model regularization multiplier 1.5 lqpht () features (model 12). need choose either model 11 model 12. Since difference test AUC TSS incredibly small models (0.002), choose model 12 model consistently fit across model versions. tuned parameters also applied future models performed SLF regional scale.","code":"# the arguments that can be tuned later getTunableArgs(global_model)  # list of hyperparameters hypers <- list(   reg = c(0.25, 0.5, 1, 1.5, 2), # regularization multiplier   fc = c(\"h\", \"qpht\", \"lqpht\") # feature classes   ) if (FALSE) {    # Train a model with all possible combinations of hyperparameters   global_model_tuned_auc <- SDMtune::gridSearch(     model = global_model,      hypers = hypers, # hyperparameter list     metric = \"auc\",     save_models = TRUE,     interactive = TRUE,      progress = TRUE     )         # show tuning results   global_model_tuned_auc@results   # select number of best model   best.model.auc <- which.max(global_model_tuned_auc@results$test_AUC)    } if (FALSE) {    # Train a model with all possible combinations of hyperparameters   global_model_tuned_tss <- SDMtune::gridSearch(     model = global_model,      hypers = hypers, # hyperparameter list     metric = \"tss\",      save_models = TRUE,     interactive = TRUE,      progress = TRUE     )         # show tuning results   global_model_tuned_tss@results   # select number of best model   best.model.tss <- which.max(global_model_tuned_tss@results$test_TSS)    } global_model <- global_model_tuned_auc@models[[12]]"},{"path":"https://ieco-lab.github.io/slfSpread/articles/050_run_global_MaxEnt_model.html","id":"summary-statistics","dir":"Articles","previous_headings":"2. Train & Tune Global Model","what":"2.2 Summary Statistics","title":"Run global-scale MaxEnt model","text":"apply function compute_MaxEnt_summary_statistics_CV() produce summary statistics model. list includes marginal univariate response curves, jackknife tests, variable importance, thresholds confusion matrices, among statistics. complete annotated workflow used create function, see 051_maxent_workflow.Rmd. now save results model tuning performed chunks ago, created directory model results. also save gridded tuning result figures manually Viewer pane model directory folder created using compute_MaxEnt_summary_statistics_CV().","code":"# output directory mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/models/slf_global_v3\")  slfSpread::compute_MaxEnt_summary_statistics_CV(   model.obj = global_model,    model.name = \"global\",    mypath = mypath,    create.dir = FALSE, # create subdirectory   env.covar.obj = x_global_hist_env_covariates, # env covariates raster stacked   train.obj = global_train, # training data used to create model   trainFolds.obj = global_trainFolds,  # k-folds of training data   test.obj = global_test, # data you wish to use to test the model   jk.test.type = c(\"train\", \"test\"), # types of jackknife curves to be created   plot.type = c(\"cloglog\", \"logistic\") # types of univariate and marginal response curves to be created   ) # save gridsearch interactive tables from Viewer pane  # save df results of model tuning write.csv(global_model_tuned_auc@results, file = file.path(mypath, \"global_model_tuning_auc_results.csv\")) write.csv(global_model_tuned_tss@results, file = file.path(mypath, \"global_model_tuning_tss_results.csv\"))  # save tuned models readr::write_rds(global_model_tuned_auc, file = file.path(mypath, \"global_model_tuned_auc.rds\")) readr::write_rds(global_model_tuned_tss, file = file.path(mypath, \"global_model_tuned_tss.rds\"))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/050_run_global_MaxEnt_model.html","id":"create-outputs-for-analysis","dir":"Articles","previous_headings":"","what":"3. Create Outputs for Analysis","title":"Run global-scale MaxEnt model","text":"","code":"mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/models/slf_global_v3\") global_model <- read_rds(file = file.path(mypath, \"global_model.rds\"))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/050_run_global_MaxEnt_model.html","id":"create-suitability-maps--mean-and-thresholded","dir":"Articles","previous_headings":"3. Create Outputs for Analysis","what":"3.1 Create suitability maps- mean and thresholded","title":"Run global-scale MaxEnt model","text":"use SDMtune::predict() function predict suitability range interest. threshold map MTP, MTSS 10_percentile thresholds. workflow application use function create_MaxEnt_suitability_maps_CV(). take map reclassify areas aren’t suitable obvious. use MTSS (maximum training sensitivity plus specificity threshold), threshold one rigorous available. maximizes TSS, threshold dependent goodness fit metric shown perform well produce consistent predictions presence-methods (Liu et al, 2013; Liu et al, 2016). also use MTP (minimum training presence) 10_percentile (10 percentile training threshold) thresholds. thresholds represent continuum training data exclusion. MTP threshold exclude data assumes confidence validity training data, making conservative predictions (largest suitable range invasive species) 10_percentile threshold excludes top 10% suitable training samples, appropriate less confidence training data. Finally, MTSS threshold maximizes sensitivity (likelihood detecting true positive) (Maryam Bordkhani (n.d.)). retrieve specific value MTSS threshold model use define considered unsuitable raster. , reclassify mean raster anything threshold now “unsuitable”. use mean cloglog threshold iterations. create binary version mean raster, unsuitable regions (MTSS training threshold) 0, threshold 1. , can reclassify averaged raster MaxEnt predictions. load averaged prediction model reclassify raster using temporary raster layer create. raster values model predicts climate unsuitable, can plotted overtop averaged raster mask unsuitable areas. also create suitability maps projected 2041-2070 climate change scenarios.","code":"slfSpread::create_MaxEnt_suitability_maps_CV(   model.obj = global_model,   model.name = \"global\",    mypath = mypath,    create.dir = FALSE,    env.covar.obj = x_global_hist_env_covariates,    describe.proj = \"globe_1981-2010\", # name of area or time period projected to   clamp.pred = TRUE,   thresh = c(\"MTP\", \"MTSS\"),   map.thresh = TRUE, # whether thresholded versions of these maps should be created   map.thresh.extra = \"MTP\", # whether an added underlayer threshold should be plotted (MTP plotted under MTSS)   summary.file = file.path(mypath, \"global_summary_all_iterations.csv\") ) slfSpread::create_MaxEnt_suitability_maps_CV(   model.obj = global_model,   model.name = \"global\",    mypath = mypath,    create.dir = FALSE,    env.covar.obj = x_global_126_env_covariates,    describe.proj = \"globe_2041-2070_GFDL_ssp126\", # name of area or time period projected to   clamp.pred = TRUE,   thresh = c(\"MTP\", \"MTSS\"),   map.thresh = TRUE, # whether thresholded versions of these maps should be created   map.thresh.extra = \"MTP\",   summary.file = file.path(mypath, \"global_summary_all_iterations.csv\") ) slfSpread::create_MaxEnt_suitability_maps_CV(   model.obj = global_model,   model.name = \"global\",    mypath = mypath,    create.dir = FALSE,    env.covar.obj = x_global_370_env_covariates,    describe.proj = \"globe_2041-2070_GFDL_ssp370\", # name of area or time period projected to   clamp.pred = TRUE,   thresh = c(\"MTP\", \"MTSS\"),   map.thresh = TRUE, # whether thresholded versions of these maps should be created   map.thresh.extra = \"MTP\",   summary.file = file.path(mypath, \"global_summary_all_iterations.csv\") ) slfSpread::create_MaxEnt_suitability_maps_CV(   model.obj = global_model,   model.name = \"global\",    mypath = mypath,    create.dir = FALSE,    env.covar.obj = x_global_585_env_covariates,    describe.proj = \"globe_2041-2070_GFDL_ssp585\", # name of area or time period projected to   clamp.pred = TRUE,   thresh = c(\"MTP\", \"MTSS\"),   map.thresh = TRUE, # whether thresholded versions of these maps should be created   map.thresh.extra = \"MTP\",   summary.file = file.path(mypath, \"global_summary_all_iterations.csv\") )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/050_run_global_MaxEnt_model.html","id":"predict-suitability-for-known-slf-presences","dir":"Articles","previous_headings":"3. Create Outputs for Analysis","what":"3.2 Predict suitability for known SLF presences","title":"Run global-scale MaxEnt model","text":"get projected suitability values, calculated cloglog scale (0 1) known SLF populations used input data models. suitability values added back original data frame saved. workflow application use function predict_xy_suitability_CV(). function extracts covariate data data point uses model object predict suitability SLF establishment location based climate variables. function two modes predicting suitability: simple buffered. use simple (suitability exact point) location SLF populations. Later analysis, use point-wise suitability predictions create scatter plot global vs regional models. repeat process CMIP6 data.","code":"mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/models/slf_global_v3\")  # slf presence data slf_presences <- read.csv(file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"slf_all_coords_final_2024-08-05.csv\")) %>%   dplyr::select(-species) slfSpread::predict_xy_suitability_CV(   xy.obj = slf_presences,   xy.type = \"Lycorma delicatula\",   env.covar.obj = x_global_hist_env_covariates,   model.obj = global_model,   mypath = mypath,   clamp.pred = TRUE, # clamp predictions   predict.type = c(\"cloglog\", \"logistic\"),   output.name = \"global_slf_all_coords_1981-2010\" ) slfSpread::predict_xy_suitability_CV(   xy.obj = slf_presences,   xy.type = \"Lycorma delicatula\",   env.covar.obj = x_global_126_env_covariates,   model.obj = global_model,   mypath = mypath,   clamp.pred = TRUE,   predict.type = c(\"cloglog\", \"logistic\"),   output.name = \"global_slf_all_coords_2041-2070_GFDL_ssp126\" ) slfSpread::predict_xy_suitability_CV(   xy.obj = slf_presences,   xy.type = \"Lycorma delicatula\",   env.covar.obj = x_global_370_env_covariates,   model.obj = global_model,   mypath = mypath,   clamp.pred = TRUE,   predict.type = c(\"cloglog\", \"logistic\"),   output.name = \"global_slf_all_coords_2041-2070_GFDL_ssp370\" ) slfSpread::predict_xy_suitability_CV(   xy.obj = slf_presences,   xy.type = \"Lycorma delicatula\",   env.covar.obj = x_global_585_env_covariates,   model.obj = global_model,   mypath = mypath,   clamp.pred = TRUE,   predict.type = c(\"cloglog\", \"logistic\"),   output.name = \"global_slf_all_coords_2041-2070_GFDL_ssp585\" )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/050_run_global_MaxEnt_model.html","id":"predict-suibability-for-ivr-regions","dir":"Articles","previous_headings":"3. Create Outputs for Analysis","what":"3.3 Predict suibability for IVR regions","title":"Run global-scale MaxEnt model","text":"perform action , locations 1,000 important wineries around world. use buffered method predicting suitability application. buffered method creates buffer zone around point considers values within buffer predicting suitability. important points represent regions important viticulture exact geospatial coordinates, likely mapped centroid areas vast expanses vineyards. , using buffer zone accounts lack exact coordinates. take maximum value buffer, mean, minimum others can used well. use buffer radial distance 20,000m (default, 20km) resolution predictions 10km, distance considers two surrounding cells side. repeat process CMIP6 data. Now outputs need global model! outputs used comparison regional version time period analyze realized regional niche SLF multiple spatial scales. used make inferences impacts climate change suitability SLF. next vignette, set training 3 regional models.","code":"mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/models/slf_global_v3\")  # load in all IVR points load(file = file.path(here::here(), \"data\", \"wineries.rda\"))   IVR_regions <- wineries %>%   dplyr::select(x, y) slfSpread::predict_xy_suitability_CV(   xy.obj = IVR_regions,   xy.type = \"IVR regions\",   env.covar.obj = x_global_hist_env_covariates,   model.obj = global_model,   mypath = mypath,   clamp.pred = TRUE,   predict.type = c(\"cloglog\", \"logistic\"),   output.name = \"global_wineries_1981-2010\",   # buffer   buffer.pred = TRUE ) slfSpread::predict_xy_suitability_CV(   xy.obj = IVR_regions,   xy.type = \"IVR regions\",   env.covar.obj = x_global_126_env_covariates,   model.obj = global_model,   mypath = mypath,   clamp.pred = TRUE,   predict.type = c(\"cloglog\", \"logistic\"),   output.name = \"global_wineries_2041-2070_GFDL_ssp126\",   buffer.pred = TRUE ) slfSpread::predict_xy_suitability_CV(   xy.obj = IVR_regions,   xy.type = \"IVR regions\",   env.covar.obj = x_global_370_env_covariates,   model.obj = global_model,   mypath = mypath,   clamp.pred = TRUE,   predict.type = c(\"cloglog\", \"logistic\"),   output.name = \"global_wineries_2041-2070_GFDL_ssp370\",   buffer.pred = TRUE ) slfSpread::predict_xy_suitability_CV(   xy.obj = IVR_regions,   xy.type = \"IVR regions\",   env.covar.obj = x_global_585_env_covariates,   model.obj = global_model,   mypath = mypath,   clamp.pred = TRUE,   predict.type = c(\"cloglog\", \"logistic\"),   output.name = \"global_wineries_2041-2070_GFDL_ssp585\",   buffer.pred = TRUE ) summary_global <- read_csv(file.path(mypath, \"global_summary_all_iterations.csv\"))  readr::write_rds(summary_global, file = file.path(here::here(), \"data\", \"global_summary_all_iterations_v3.rds\"))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/050_run_global_MaxEnt_model.html","id":"take-mean-of-ssp-scenario-predictions","dir":"Articles","previous_headings":"","what":"4. Take mean of ssp scenario predictions","title":"Run global-scale MaxEnt model","text":"load three ssp scenario rasters just created back R take mean rasters predictions step later downstream.","code":"# ssp 126 pred_global_2055_126 <- terra::rast(   x = file.path(mypath, \"global_pred_suit_clamped_cloglog_globe_2041-2070_GFDL_ssp126_mean.asc\") ) # ssp 370 pred_global_2055_370 <- terra::rast(   x = file.path(mypath, \"global_pred_suit_clamped_cloglog_globe_2041-2070_GFDL_ssp370_mean.asc\") ) # ssp 585 pred_global_2055_585 <- terra::rast(   x = file.path(mypath, \"global_pred_suit_clamped_cloglog_globe_2041-2070_GFDL_ssp585_mean.asc\") ) pred_global_2055_stack <- c(pred_global_2055_126, pred_global_2055_370, pred_global_2055_585) # apply mean between layers pred_global_2055_mean <- terra::app(   x = pred_global_2055_stack,   fun = \"mean\",   filename = file.path(mypath, \"global_pred_suit_clamped_cloglog_globe_2041-2070_GFDL_ssp_averaged.asc\"),   filetype = \"AAIGrid\",   overwrite = FALSE )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/050_run_global_MaxEnt_model.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Run global-scale MaxEnt model","text":"Elith, J., Phillips, S. J., Hastie, T., Dudík, M., Chee, Y. E., & Yates, C. J. (2011). statistical explanation MaxEnt ecologists: Statistical explanation MaxEnt. Diversity Distributions, 17(1), 43–57. https://doi.org/10.1111/j.1472-4642.2010.00725.x Feng, X. (2022). Shandongfx/nimbios_enm [HTML]. https://github.com/shandongfx/nimbios_enm (Original work published 2018). Gallien, L., Douzet, R., Pratte, S., Zimmermann, N. E., & Thuiller, W. (2012). Invasive species distribution models – violating equilibrium assumption can create new insights. Global Ecology Biogeography, 21(11), 1126–1136. https://doi.org/10.1111/j.1466-8238.2012.00768.x Liu, C., Newell, G., & White, M. (2016). selection thresholds predicting species occurrence presence-data. Ecology Evolution, 6(1), 337–348. https://doi.org/10.1002/ece3.1878 Liu, C., White, M., & Newell, G. (2013). Selecting thresholds prediction species occurrence presence-data. Journal Biogeography, 40(4), 778–789. https://doi.org/10.1111/jbi.12058 Maryam Bordkhani. (n.d.). Threshold rule [Online post]. Radosavljevic, ., & Anderson, R. P. (2014). Making better Maxent models species distributions: Complexity, overfitting evaluation. Journal Biogeography, 41(4), 629–643. https://doi.org/10.1111/jbi.12227 Phillips, S. J., Anderson, R. P., & Schapire, R. E. (2006). Maximum entropy modeling species geographic distributions. Ecological Modelling, 190(3), 231–259. https://doi.org/10.1016/j.ecolmodel.2005.03.026 Steven Phillips. (2017). Brief Tutorial Maxent. http://biodiversityinformatics.amnh.org/open_source/maxent/. Steven J. Phillips, Miroslav Dudík, & Robert E. Schapire. (2023). Maxent software modeling species niches distributions (Version 3.4.3 (Java)) [Computer software]. http://biodiversityinformatics.amnh.org/open_source/maxent/. Srivastava, V., Roe, . D., Keena, M. ., Hamelin, R. C., & Griess, V. C. (2021). Oh places ’ll go: Improving species distribution modelling invasive forest pests uncertain world. Biological Invasions, 23(1), 297–349. https://doi.org/10.1007/s10530-020-02372-9 Valavi, R., Elith, J., Lahoz-Monfort, J. J., & Guillera-Arroita, G. (2019). blockCV: r package generating spatially environmentally separated folds k-fold cross-validation species distribution models. Methods Ecology Evolution, 10(2), 225–232. https://doi.org/10.1111/2041-210X.13107 VanDerWal, J., Shoo, L. P., Graham, C., & Williams, S. E. (2009). Selecting pseudo-absence data presence-distribution modeling: far stray know? Ecological Modelling, 220(4), 589–594. https://doi.org/10.1016/j.ecolmodel.2008.11.010 Vignali, S., Barras, . G., Arlettaz, R., & Braunisch, V. (2020). SDMtune: R package tune evaluate species distribution models. Ecology Evolution, 10(20), 11488–11506. https://doi.org/10.1002/ece3.6786","code":""},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/050_run_global_MaxEnt_model.html","id":"attempt-at-spatially-and-environmentally-blocked-cross-validation","dir":"Articles","previous_headings":"Appendix","what":"Attempt at Spatially and environmentally Blocked Cross-validation","title":"Run global-scale MaxEnt model","text":"attempted method body literature says blocked cross validation rigorous random CV. Blocked CV results spatially separated training testing data, prevents autocorrelation within environmental covariates. However, method work combination scale covariates comparatively narrow range SLF presences. global scale analysis means block size needs quite large (1.5 million meters) reduce spatial autocorrelation training points. narrow spread presence points comparison means every blocked CV group (10) received test presences test points. also tried 5 groups, point distributions still ideal. First, check spatial autocorrelation level. determines appropriate block size prevent spatial autocorrelation. range spatial autocorrelation estimated 2,263,953 meters presence/absence data using build model. also use interactive tool visualize block size based pa data. go ahead use 2.25 million meter distance spatial blocks. method work 5 test folds 10 received 0 test points. spread presences seems narrow fold receive adequate training test presences. also try spatial clustering algorithm. Clustering based distance also put test presences fold (0), blocked CV method used revert k-fold random CV.","code":"#presences global_presences_with_data <- read_csv(   file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"global_slf_presences_with_data_v3.csv\")   ) %>%   # add presence/absence column   mutate(pa = 1)  # background points global_background_with_data <-  read_csv(   file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"global_background_points_with_data_v3.csv\")   ) %>%   mutate(pa = 0)   # join global_all_points_with_data <- full_join(global_presences_with_data, global_background_with_data) %>%   sf::st_as_sf(coords = c(\"X\", \"Y\"), crs = 4326) # set seed for consistency of random sampling set.seed(2)  # take spatial autocorrelation distance spatial_autocor <- blockCV::cv_spatial_autocor(   x = global_all_points_with_data,   column = \"pa\",   plot = TRUE,   progress = TRUE )  spatial_autocor$range spatial_autocor$plots  # OLD METHOD # convert to a Lambert projection because variograms do not work with lat/long projections # using EPSG:9834, Lambert Cylindrical Equal Area (Spherical) #global_raster <- terra::project(x = x_global_hist_env_covariates, y = \"EPSG:9834\", method = \"bilinear\", threads = TRUE) # test for spatial autocorrelation distance #spatial_autocor <- blockCV::cv_spatial_autocor( #  r = global_raster, #  num_sample = 20000, # quadrupled from default due to raster size #  plot = TRUE, #  progress = TRUE #) blockCV::cv_block_size(   x = global_all_points_with_data,   column = \"pa\" ) global_folds <- blockCV::cv_spatial(   x = global_all_points_with_data,   column = \"pa\",   r = x_global_hist_env_covariates,   k = 5,   size = 2263953,   hexagon = FALSE, # I am pretty sure the function used to calculate the autocorrelation distance used square blocks   selection = \"random\",   iteration = 50,   seed = 3,   progress = TRUE,    report = TRUE ) #  View(global_folds$folds_list) # this fold list contains each block  global_folds$records  blockCV::cv_plot(   cv = global_folds,   r = x_global_hist_env_covariates ) global_folds <- blockCV::cv_cluster(   x = global_all_points_with_data,   column = \"pa\",   k = 5,   r = x_global_hist_env_covariates,   scale = TRUE,   raster_cluster = TRUE,   report = TRUE )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/051_compute_MaxEnt_summary_statistics_workflow.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"MaxEnt Summary Statistics Output- workflow","text":"vignette gives example workflow producing MaxEnt model R associated outputs. Chunks 1-10 share formatting vignette 050, parent vignette. vignette created isolate entire workflow creating model. processes vignette used models produced, rasterized predictions suitability. workflow depends heavily R package SDMtune. workflow can used dataset train maxent model, extract summary statistics make predictions pointwise species presence data entire areas (exemplified workflow). list outputs summary statistics obtained models produced vignette: .RDS file MaxEnt model Presence data used train test model suitability map projected area interest presence/absence map generated using Maximum Sensitivity plus specificity threshold produced model point-wise predictions species presence data AUC ROC plot TSS Suitability thresholds (including minimum training presence, 10% training presence, etc) Marginal response curves Uni-variate response curves Variable permutation importance Jackknife leave-one-test plot model settings can also obtained using function package called compute_MaxEnt_summary_statistics(), creates outputs summary statistics, writes .RDS file records presence data used train test model (create suitability map, presence/absence map point-wise predictions). run vignette, first run step 2 vig 050. create necessary files objects run vignette.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/051_compute_MaxEnt_summary_statistics_workflow.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"MaxEnt Summary Statistics Output- workflow","text":"Note: setting global options document certain code chunks rendered final .html file. set eval = FALSE none code re-run (preventing files overwritten knitting) simply overwrite chunks plots. NOTE output created point end vignette can created using function slfSpread::compute_MaxEnt_summary_statistics(). include ending appendix chunks create output using SDMtune::predict(). ::, analysis performed SDMtune. wanted perform analysis dismo, function SDMtune::SDMmodel2MaxEnt() convert model object MaxEnt object dismo package.","code":"library(tidyverse)  #data manipulation  library(here) #making directory pathways easier on different instances here::here() # here() starts at the root folder of this package. library(devtools) library(rJava) # for running MaxEnt  library(dismo) # package underneath SDMtune library(SDMtune) # main package used to run SDMs  # dependencies of SDMtune library(kableExtra) # required for producing model reports library(plotROC) # plots ROCs library(rasterVis)  library(viridis)  # spatial data handling library(terra)   library(pROC) map_style <- list(   xlab(\"longitude\"),   ylab(\"latitude\"),   theme_classic(),   theme(legend.position = \"bottom\",         panel.background = element_rect(fill = \"lightblue\",                                 colour = \"lightblue\")         ),   coord_equal()  ) mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/models\")  # create directory for model dir.create(path = file.path(mypath, \"slf_global_v3_TEST\")) dir.create(path = file.path(mypath, \"slf_global_v3_TEST\", \"plots\")) mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/models/slf_global_v3_TEST\")  # save model  saveRDS(object = global_model, file = file.path(mypath, \"global_model.rds\"))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/051_compute_MaxEnt_summary_statistics_workflow.html","id":"get-auc-tss-and-variable-contributions","dir":"Articles","previous_headings":"","what":"Get AUC, TSS, and variable contributions","title":"MaxEnt Summary Statistics Output- workflow","text":"retrieve AUC TSS values training test data save output .csv. relative contribution permutation importance environmental covariate also available via SDMtune::maxentVarImp() function. put table.","code":"# vector of AUC values AUC <- c(   # get training AUC value   SDMtune::auc(global_model),   # get test AUC value   SDMtune::auc(global_model, test = global_test) )  # vector of TSS values TSS <- c(    # get training TSS value   SDMtune::tss(global_model),   # get test TSS value   SDMtune::tss(global_model, test = global_test) )  # compile to data frame auc_tss <- data.frame(AUC, TSS, row.names = c(\"Training\", \"Test\"))  # write csv write.csv(auc_tss, file = file.path(mypath, \"global_model_auc_tss.csv\"), row.names = TRUE) # variable importance var_imp <- SDMtune::maxentVarImp(global_model) # write to csv write.csv(var_imp, file = file.path(mypath, \"global_model_var_contrib.csv\"), row.names = FALSE)"},{"path":"https://ieco-lab.github.io/slfSpread/articles/051_compute_MaxEnt_summary_statistics_workflow.html","id":"plot-roc-univariate-and-marginal-response-curves","dir":"Articles","previous_headings":"","what":"Plot ROC, univariate and marginal response curves","title":"MaxEnt Summary Statistics Output- workflow","text":"First, plot ROC curves, show true positive vs false positive rates. done iteration model. AUC 0.5 better desirable. Next, plot univariate marginal response curves. According MaxEnt output, univariate response curves “represent different model, namely, Maxent model created using corresponding variable” (Phillips et.al, 2006). models trained variable alone, show variable affects probability presence. Meanwhile, marginal response curves “show environmental variable affects Maxent prediction. curves show predicted probability presence changes environmental variable varied, keeping environmental variables average sample value” (Phillips et.al, 2006). marginal response curves show effects changing variable.","code":"# loop that plots an ROC curve for each model iteration for (a in seq(length(global_model@models))) {      # load in temp plot object    plot.ROC <- SDMtune::plotROC(global_model@models[[a]], test = global_test)      # add title   plot.ROC <- plot.ROC +     ggtitle(paste(\"ROC curve (sensitivity  vs 1 - Specificity) for\", \"global_model\", \"iteration\", a))        # save output   ggsave(plot.ROC,           filename = file.path(mypath, \"plots\", paste0(\"global_model_\", \"iter\", a, \"_ROC.jpg\")),          height = 8,           width = 10,          device = \"jpeg\",          dpi = \"retina\")      # remove temp object    rm(plot.ROC)  } threshold.types <- c(\"cloglog\", \"logistic\") # for each variable used in the model, create a response curve for (a in names(x_env_covariates)) {      # load in temp plot object    plot.univar <- SDMtune::plotResponse(     model = global_model,     var = a,     type = \"cloglog\",     fun = \"mean\",     rug = TRUE     )      # add title   plot.univar <- plot.univar +     ggtitle(paste(\"global_model\", a, \"univariate response curve- cloglog output\"))        # save output   ggsave(plot.univar,           filename = file.path(mypath, \"plots\", paste0(\"global_model_\", a, \"_univar_resp_curve_cloglog\", \".jpg\")),          height = 8,           width = 10,          device = \"jpeg\",          dpi = \"retina\")      # remove temp object    rm(plot.univar)    } # for each variable used in the model, create a response curve for (a in names(x_env_covariates)) {      # for each threshold type, plot a response curve   for (b in threshold.types) {        # load in temp plot object      plot.response <- SDMtune::plotResponse(       model = global_model,       var = a,       type = b,       marginal = TRUE,       fun = \"mean\",       rug = TRUE       )          # add title     plot.response <- plot.response +       ggtitle(paste(\"global_model\", a, \"marginal response curve-\", b, \"output\"))            # save output     ggsave(plot.response,             filename = file.path(mypath, \"plots\", paste0(\"global_model_\", a, \"_marg_resp_curve_\", b, \".jpg\")),            height = 8,             width = 10,            device = \"jpeg\",            dpi = \"retina\")          # remove temp object      rm(plot.response)      }  }"},{"path":"https://ieco-lab.github.io/slfSpread/articles/051_compute_MaxEnt_summary_statistics_workflow.html","id":"extract-summary-statistics","dir":"Articles","previous_headings":"","what":"Extract summary statistics","title":"MaxEnt Summary Statistics Output- workflow","text":"Next, extract summary statistics model include presence/absence thresholds, training statistics useful metrics. Specifically, interested extracting particular thresholds (minimum training presence, 10 percentile training presence maximum training sensitivity plus specificity) can create presence/absence maps based . save individual tables. also extract results model iteration table, take mean statistics, save .","code":"# create empty date frame for joining empty.table <- as.data.frame(global_model@models[[1]]@model@results) %>%   mutate(statistic = row.names(global_model@models[[1]]@model@results)) %>% # add column of statistic names   dplyr::select(statistic)   # loop to write summary statistics for each iteration of the model for (i in seq(length(global_model@models))) {      # load in temp object    data.obj <- as.data.frame(global_model@models[[i]]@model@results)      # change colname   colnames(data.obj) <- paste0(\"iter_\", i, \"_summary\")   # write to csv   write.csv(     x = data.obj,      file = file.path(mypath, paste0(\"global_model_summary_iter\", i, \".csv\")),      row.names = TRUE     )      # add column name to data object   data.obj <- mutate(data.obj, statistic = row.names(global_model@models[[1]]@model@results))      # while i has not reached the length of the model replicates, append the summary statistics to the empty table   while (i < length(global_model@models)) {     # join data.obj temporary object to empty table     empty.table <- right_join(empty.table, data.obj, by = \"statistic\")          break        }      # if i has reached the length of the model replicates, compute a mean and write the final table to .csv   if (i == length(global_model@models)) {      # compute the mean of the 5 columns           empty.table <- mutate(empty.table, mean = rowMeans(empty.table[, -1]))      # write to csv      write.csv(        x = empty.table,         file = file.path(mypath, paste0(\"global_model_summary_all_iterations.csv\")),        row.names = FALSE        )            }      # remove temp object   rm(data.obj)    }"},{"path":"https://ieco-lab.github.io/slfSpread/articles/051_compute_MaxEnt_summary_statistics_workflow.html","id":"write-training-and-testing-data-to-file","dir":"Articles","previous_headings":"","what":"Write training and testing data to file","title":"MaxEnt Summary Statistics Output- workflow","text":"always good idea exact data used train test model hand, write directory.","code":"# write training data to csv SDMtune::swd2csv(swd = global_train, file_name = file.path(mypath, \"global_train_Kfold.csv\")) # load csv in again global_train_Folds <- read.csv(file = file.path(mypath, \"global_train_Kfold.csv\")) # bind training data with folds global_train_Folds <- cbind(global_train_Folds, global_trainFolds) # overwrite csv for training  write_csv(x = global_train_Folds, file = file.path(mypath, \"global_train_Kfold.csv\"))  # write testing data to csv SDMtune::swd2csv(swd = global_test, file_name = file.path(mypath, \"global_test.csv\"))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/051_compute_MaxEnt_summary_statistics_workflow.html","id":"jackknife-test-for-variable-importance","dir":"Articles","previous_headings":"","what":"Jackknife test for variable importance","title":"MaxEnt Summary Statistics Output- workflow","text":"jackknife test leave-one-test iteratively leaves predictor variable produces model variables. also option create model predictor variable alone. records gain loss AUC value. informative test designed test variable importance. perform jackknife entire model’s training data alone. also create one model iteration using training testing data. also perform jackknife model iterations, based training test data.","code":"# jackknife global_JK <- SDMtune::doJk(   model = global_model,   # test = global_test, # not used for models with replicates   metric = \"auc\",   with_only = TRUE, # also run test for each variable alone   progress = TRUE   )  # write raw data to csv write_csv(x = global_JK, file = file.path(mypath, \"global_model_jackknife_all_iterations_training.csv\"))  # plot jackknife global_JK_plot <- plotJk(jk = global_JK, type = \"train\")  global_JK_plot <- global_JK_plot +   ggtitle(paste(\"global_entire- jackknife test\")) +   labs(subtitle = \"all iterations, training data\")  ggsave(global_JK_plot,             filename = file.path(mypath, \"plots\", \"global_model_jackknife_all_iterations_training.jpg\"),            height = 8,             width = 10,            device = \"jpeg\",            dpi = \"retina\") plot.types <- c(\"train\", \"test\") # for loop to output csv file of jackknife test, one per model iteration for (a in seq(length(global_model@models))) {      # jackknife   jk.obj <- SDMtune::doJk(     model = global_model@models[[a]],     test = global_test,      metric = \"auc\",     with_only = TRUE, # also run test for each variable alone     progress = TRUE     )      # write raw data to csv   write_csv(x = jk.obj, file = file.path(mypath, paste0(\"global_model_jackknife_iter\", a, \"_training_testing.csv\")))        # sub-loop to output 2 types of plots per test, training and testing     for(b in plot.types) {            # plot training jackknife       jk.obj_plot <- plotJk(jk = jk.obj, type = b)              # modify objects to add titles and subtitles       jk.obj_plot <- jk.obj_plot +         ggtitle(paste(\"global_entire- jackknife test\")) +         labs(subtitle = paste0(\"iter \", a, \", \", b, \"ing data\"))              ggsave(jk.obj_plot,               filename = file.path(mypath, \"plots\", paste0(\"global_model_jackknife_iter\", a, \"_\", b, \"ing.jpg\")),              height = 8,               width = 10,              device = \"jpeg\",              dpi = \"retina\")              # remove temp object        rm(jk.obj_plot)      }      # remove temp object    rm(jk.obj)    }"},{"path":"https://ieco-lab.github.io/slfSpread/articles/051_compute_MaxEnt_summary_statistics_workflow.html","id":"variable-importance","dir":"Articles","previous_headings":"","what":"Variable importance","title":"MaxEnt Summary Statistics Output- workflow","text":"Lastly, variable importance calculated percentage probability.","code":"# calculate variable importance var_imp <- SDMtune::varImp(model = global_model, progress = TRUE) # write to csv write_csv(x = var_imp, file = file.path(mypath, \"global_model_variable_importance.csv\"))  # plot var_imp_plot <- SDMtune::plotVarImp(df = var_imp)  var_imp_plot <- var_imp_plot +   ggtitle(\"Variable importance for global_model\")    ggsave(var_imp_plot,         filename = file.path(mypath, \"plots\", \"global_model_variable_importance.jpg\"),        height = 8,         width = 10,        device = \"jpeg\",        dpi = \"retina\")"},{"path":"https://ieco-lab.github.io/slfSpread/articles/051_compute_MaxEnt_summary_statistics_workflow.html","id":"confusion-matrix-for-common-threshold-values","dir":"Articles","previous_headings":"","what":"Confusion Matrix for common threshold values","title":"MaxEnt Summary Statistics Output- workflow","text":"Lastly, pick mean cloglog threshold values type threshold used model run confusion matrix value. confusion matrix show number true positives, false positives, true negatives false negatives per threshold value help determine threshold makes sense, given data. need create vector values, can found model_summary_all_iterations file created workflow.","code":"# load in summary file and slice the threshold values conf.matr.data <- read.csv(file.path(mypath, \"global_model_summary_all_iterations.csv\")) %>%   dplyr::slice(20, 24, 28, 32, 36, 40, 44, 48, 52) # create empty table with threshold labels   conf.matr.output <- as.data.frame(conf.matr.data[, 1]) %>%     rename(\"hold_type\" = \"conf.matr.data[, 1]\")  for (a in seq(length(global_model@models))) {    conf.matr.hold <- SDMtune::confMatrix(     model = global_model@models[[a]],     test = global_test,     type = \"cloglog\",     th = conf.matr.data[, 6] # the mean value for all cloglog thresholds     )       # bind threshold names   conf.matr.hold <- cbind(conf.matr.hold, conf.matr.data[, 1]) %>%     rename(\"hold_type\" = \"conf.matr.data[, 1]\") %>%     dplyr::select(hold_type, everything())      # write individual run results to file    write.table(     x = conf.matr.hold,      sep = \",\",     file = file.path(mypath, paste0(\"global_model_thresh_confusion_matrix_iter\", a, \".csv\")),      row.names = FALSE,     col.names = c(\"threshold_type\", \"threshold_value\", \"tp\", \"fp\", \"fn\", \"tn\")     )       # before all model iterations have been summarized, append to empty table    while (a < length(global_model@models)) {       # join conf.matr.hold temporary object to empty table       conf.matr.output <- right_join(conf.matr.output, conf.matr.hold, by = \"hold_type\")              break              }           # when all model iterations have been appended, take the mean threshold value and write to csv     if (a == length(global_model@models)) {       # compute the mean of the 5 columns            conf.matr.output <- mutate(conf.matr.output,                                   tp_mean = rowMeans(dplyr::across(contains(\"tp\"))), # compute the average of all \"tp\" columns                                  fp_mean = rowMeans(dplyr::across(contains(\"fp\"))),                                  fn_mean = rowMeans(dplyr::across(contains(\"fn\"))),                                  tn_mean = rowMeans(dplyr::across(contains(\"tn\"))),                                  th = rowMeans(dplyr::across(contains(\"th\")))                                  ) %>%         dplyr::select(hold_type, th, tp_mean, fp_mean, fn_mean, tn_mean) %>%         rename(\"threshold_value\" = \"th\",                \"threshold_type\" = \"hold_type\") %>%         dplyr::select(threshold_type, threshold_value, everything())             # write to csv       write.csv(         x = conf.matr.output,          file = file.path(mypath, paste0(\"global_model_thresh_confusion_matrix_all_iterations.csv\")),         row.names = FALSE         )           }      #remove temp object   rm(conf.matr.hold)  }"},{"path":"https://ieco-lab.github.io/slfSpread/articles/051_compute_MaxEnt_summary_statistics_workflow.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"MaxEnt Summary Statistics Output- workflow","text":"Feng, X. (2022). Shandongfx/nimbios_enm [HTML]. https://github.com/shandongfx/nimbios_enm (Original work published 2018). Phillips, S. J., Anderson, R. P., & Schapire, R. E. (2006). Maximum entropy modeling species geographic distributions. Ecological Modelling, 190(3), 231–259. https://doi.org/10.1016/j.ecolmodel.2005.03.026 Srivastava, V., Roe, . D., Keena, M. ., Hamelin, R. C., & Griess, V. C. (2021). Oh places ’ll go: Improving species distribution modelling invasive forest pests uncertain world. Biological Invasions, 23(1), 297–349. https://doi.org/10.1007/s10530-020-02372-9 Vignali, S., Barras, . G., Arlettaz, R., & Braunisch, V. (2020). SDMtune: R package tune evaluate species distribution models. Ecology Evolution, 10(20), 11488–11506. https://doi.org/10.1002/ece3.6786","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/060_setup_regional_MaxEnt_models.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Setup for regional-scale MaxEnt models","text":"previous vignette, ran global model, first step examine suitability SLF multiple spatial scales. vignette, set run three regional-scale models, one geographical region SLF found. run model based SLF presence data native range (China), invaded region Asia (Japan South Korea), invaded region North America. hypothesize creating models multiple spatial scales, can confidence suitability predictions made specific SLF populations important viticultural regions, can predict risk specific populations spreading now climate change. also hypothesize regional-scale models, ensembled single prediction, make refined predictions global-scale model . vignette set regional-scale models similar fashion setup created global model vignette 040, additional steps. First, use geopolitical boundaries bounding boxes select broad area regional model’s background points. choose much broader area SLF currently occupies area can reduce area based climate. narrow area model using Köppen-Geiger climate zones. presence point within region intersects zone, zone included area used choose background points. regional-scale model, : Select countries bounding box represent regional-scale model area Select SLF presences fall region. used train model. Intersect SLF presences K-G climate zones Keep zones intersect, combine area use area crop bioclim layers tidied vignette 020 Use masked bioclim layers select background points Choose test/validation presences, come different region training points Plot chosen training test presence per model. table summarizing model structures:","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/060_setup_regional_MaxEnt_models.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Setup for regional-scale MaxEnt models","text":"prepare vignette loading necessary packages run script. also creating maps analysis, create list object containing standardized map style continue use. Note: setting global options document certain code chunks rendered final .html file. set eval = FALSE none code re-run (preventing files overwritten knitting) simply overwrite chunks plots.","code":"# general tools library(tidyverse)  #data manipulation library(here) #making directory pathways easier on different instances here::here() # here() starts at the root folder of this package. ## [1] \"C:/Users/tun83449/Documents/GitHub/slfSpread\" library(devtools)  library(dismo) # generate random background points  # spatial data handling library(raster)  library(terra) library(sf)  # spatial data sources library(rnaturalearth) # remotes::install_github(\"ropensci/rnaturalearthhires\") library(rnaturalearthhires) library(kgc) # koppen climate rasters  # aesthetics library(webshot) library(webshot2) library(kableExtra) library(patchwork) # model training dataset # save as .csv write_csv(model_info, file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_ensemble_models_info.csv\"))  # save as .html kableExtra::save_kable(   model_info_kable,    file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"regional_ensemble_models_info.html\"),   self_contained = TRUE,   bs_theme = \"simplex\"   )  # initialize webshot by  # webshot::install_phantomjs() # convert to pdf webshot::webshot(   url = file.path(here::here(), \"vignette-outputs\", \"figures\", \"regional_ensemble_models_info.html\"),   file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"regional_ensemble_models_info.jpg\"),   zoom = 2 )  # model extents map_style <- list(   xlab(\"longitude\"),   ylab(\"latitude\"),   theme_classic(),   theme(legend.position = \"bottom\",         panel.background = element_rect(fill = \"lightblue2\",                                         colour = \"lightblue2\")   ),   scale_x_continuous(expand = c(0, 0)),   scale_y_continuous(expand = c(0, 0)),   labs(fill = \"Suitability for SLF\"),   viridis::scale_fill_viridis(option = \"D\"),   coord_equal() )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/060_setup_regional_MaxEnt_models.html","id":"retrieve-k-g-climate-zones","dir":"Articles","previous_headings":"","what":"1. Retrieve K-G climate zones","title":"Setup for regional-scale MaxEnt models","text":"First, use kgc package retrieve global raster Köppen-Geiger climate zones. need set path directory necessary bioclimatic raster layers. Now download Köppen-Geiger climate zones, use clip bioclim layers. need tidy data aggregating spatial scale use bioclim variables. using mode, variable set numbers representing categorical, want average take median. Now lets plot zones make sure worked. also write raster shapefile easy selection climate zones.","code":"# path to directory   mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent\") # lists of target files in the directory # load in bioclim layers to be cropped- the 10km .asc files env.files <- list.files(path = file.path(mypath, \"historical_climate_rasters\", \"chelsa2.1_30arcsec\", \"v1_maxent_10km\"), pattern = \"\\\\.asc$\", full.names = TRUE) %>% # extract the 4 bioclim layers I will be using in my models.    grep(\"atc_2015_global.asc|bio2_1981-2010_global.asc|bio11_1981-2010_global.asc|bio12_1981-2010_global.asc|bio15_1981-2010_global.asc\", ., value = TRUE) # get data kmz_data <- kgc::kmz  # generate coordinates kmz_lat <- kgc::genCoords(latlon = \"lat\", full = TRUE) kmz_lon <- kgc::genCoords(latlon = \"lon\", full = TRUE)  # join data and coordinates kmz_data <- cbind(kmz_lat, kmz_lon) %>%   cbind(., kmz_data) %>%   as.data.frame() %>%   # relocate column   dplyr::select(kmz_lon, everything())     # convert to raster kmz_data_rast <- terra::rast(   x = kmz_data,   type = \"xyz\",   crs = \"EPSG:4326\"   ) # change name of layer names(kmz_data_rast) <- \"Koeppen_climate_zone\"  # validity- minmax should range between 0-32 minmax(kmz_data_rast) # retrieve names of zones kmz_names <- kgc::getZone(1:32) # make facor levels kmz_names_factor <- factor(   x = kmz_names,   levels = unique(kmz_names),   ordered = TRUE ) # layer used to aggregate raster agg_layer <- terra::rast(file.path(mypath, \"historical_climate_rasters\", \"chelsa2.1_30arcsec\", \"v1_maxent_10km\", \"atc_2015_global.asc\")) # raster stats terra::origin(agg_layer) terra::crs(agg_layer)  # resample koppen_zones_rast <- terra::resample(   x = kmz_data_rast,   y = agg_layer, # aggregate to this origin and resolution   method = \"mode\",   threads = TRUE,   filename = file.path(mypath, \"models\", \"working_dir\", \"koeppen_climate_zones.asc\"),   filetype = \"AAIGrid\",    overwrite = FALSE     ) koeppen_zones_rast <- terra::rast(x = file.path(mypath, \"models\", \"working_dir\", \"koeppen_climate_zones.asc\")) # origin terra::origin(koeppen_zones_rast) ## [1] -0.0001396088 -0.0001392489 # convert to df koeppen_zones_rast_df <- terra::as.data.frame(koeppen_zones_rast, xy = TRUE)  # plot main layer as example KG_climate_map <- ggplot() +   # change scale of plots to be standard across figures   geom_raster(data = koeppen_zones_rast_df,              aes(x = x, y = y, fill = as.factor(koeppen_climate_zones))) +     labs(       title = \"Köppen-Geiger Climate Zones\",        x = \"longitude\",       y = \"latitude\",       fill = \"K-G climate zone\"     ) +   scale_x_continuous(expand = c(0, 0)) +   scale_y_continuous(expand = c(0, 0)) +   viridis::scale_fill_viridis(     discrete = TRUE,     aesthetics = \"fill\",     option = \"H\",     direction = -1,     labels = kmz_names_factor     ) +   guides(fill = guide_legend(nrow = 3)) +   theme_classic() +   theme(legend.position = \"bottom\") +   coord_equal() ggsave(   KG_climate_map,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"koppen_climate_zones.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\" ) # next, convert raster to polygon KG_zones_invaded_poly <- terra::as.polygons(   x = koeppen_zones_rast,   aggregate = TRUE, # combine cells with the same value into one area   values = TRUE, # include cell values as attributes   crs = \"EPSG:4326\" )   gdal(drivers=TRUE)  # write to shapefile terra::writeVector(   x = KG_zones_invaded_poly,   filename = file.path(mypath, \"models\", \"working_dir\", \"shapefiles\", \"koeppen_climate_zones.shp\"),   filetype = \"ESRI Shapefile\",   overwrite = FALSE ) koeppen_zones_rast <- terra::rast(x = file.path(mypath, \"models\", \"working_dir\", \"koeppen_climate_zones.asc\"))   slf_points <- read_csv(file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"slf_all_coords_final_2024-08-05.csv\")) %>%   dplyr::select(-species)"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/060_setup_regional_MaxEnt_models.html","id":"invaded-region-in-north-america-ri-namerica-model","dir":"Articles","previous_headings":"2. Trim bioclim layers","what":"2.1 invaded region in North America (Ri.NAmerica model)","title":"Setup for regional-scale MaxEnt models","text":"First, overlay SLF presence points use select climate regions keep. use create reference layer. , use layer mask layers already cropped N America. Now intersect points shapefile. need crop shapefile extent presences intersect keep climate zones contain presences. resulting shapefile used crop bioclim data choose background points specific model.","code":"# extent object for North America ext.obj <- terra::ext(-140.976563, -51.064453, 15.182421, 60.586967)  # convert to vector slf_points_vect <- terra::vect(x = slf_points, geom = c(\"x\", \"y\"), crs = \"EPSG:4326\") %>%   # crop by extent area of interest   terra::crop(., y = ext.obj) %>%   # convert to geom, which gets coordinates of a spatVector   terra::geom()   # convert back to data frame slf_points_invaded <- terra::as.data.frame(slf_points_vect) %>%   dplyr::select(-c(geom, part, hole)) %>%   sf::st_as_sf(coords = c(\"x\", \"y\"), crs = \"EPSG:4326\")  # will not need this object again rm(slf_points_vect)"},{"path":"https://ieco-lab.github.io/slfSpread/articles/060_setup_regional_MaxEnt_models.html","id":"intersect-points-and-kg-zones","dir":"Articles","previous_headings":"2. Trim bioclim layers > 2.1 invaded region in North America (Ri.NAmerica model)","what":"Intersect points and KG zones","title":"Setup for regional-scale MaxEnt models","text":"Now lets plot sanity check.  mask bioclim layers, see something similar .","code":"# load in shapefile again KG_zones_invaded_poly <- sf::read_sf(dsn = file.path(mypath, \"models\", \"working_dir\", \"shapefiles\", \"koeppen_climate_zones.shp\")) %>%   dplyr::rename(\"koeppen_climate_zones\" = \"koeppen_cl\")  # bounding box for cropping ext.obj.vect <- c(xmin = -140.976563, ymin = 15.182421, xmax = -51.064453, ymax = 60.586967) # first, crop K-G raster to N America KG_zones_invaded_poly <- sf::st_crop(KG_zones_invaded_poly, y = ext.obj.vect) %>%   # also get rid of ocean   dplyr::filter(koeppen_climate_zones != 32)     # intersect regional_invaded_withSLF <- sf::st_filter(x = KG_zones_invaded_poly, y = slf_points_invaded)  # write to file sf::st_write(   obj = regional_invaded_withSLF,    dsn = file.path(here::here(), \"vignette-outputs\", \"shapefiles\", \"SLF_regional_invaded_extent.shp\"),   driver = \"ESRI Shapefile\",   append = FALSE   ) regional_invaded_withSLF <- sf::read_sf(dsn = file.path(here::here(), \"vignette-outputs\", \"shapefiles\", \"SLF_regional_invaded_extent.shp\")) %>%   dplyr::rename(\"koeppen_climate_zones\" = \"kppn_c_\")   # get extent st_bbox(regional_invaded_withSLF) ##       xmin       ymin       xmax       ymax  ## -138.66681   19.12534  -52.58347   60.83319 (regional_invaded_withSLF_plot <- ggplot() +    # world map    geom_polygon(data = map_data('world', region = c(\"Canada\", \"USA\", \"Mexico\", \"Guatemala\", \"Honduras\", \"El Salvador\", \"Nicaragua\", \"Bahamas\", \"Cuba\", \"Costa Rica\", \"Haiti\", \"Dominican Republic\", \"Jamaica\", \"Bermuda\")), aes(x = long, y = lat, group = group), fill = \"azure4\", color = \"black\", lwd = 0.15) +    # slf native range shapefile    geom_sf(data = regional_invaded_withSLF, aes(fill = as.factor(koeppen_climate_zones)), color = \"black\") +    # scales    labs(      title = \"Köppen-Geiger climate zones as background selection area\\nfor 'Ri.NAmerica' model\",      caption = \"K-G zones selected if containing SLF presences\",      x = \"longitude\",      y = \"latitude\",      fill = \"Köppen climate zone\"      ) +    scale_fill_brewer(palette = \"Paired\", labels = kmz_names_factor) +    theme_classic() +    theme(legend.position = \"right\") +    coord_sf(xlim = c(-140.976563, -51.064453), ylim = c(15.182421, 60.586967)) ) ggsave(   regional_invaded_withSLF_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"SLF_regional_invaded_extent_KG_climate_zones.jpg\"),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\" )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/060_setup_regional_MaxEnt_models.html","id":"mask-bioclim-layers","dir":"Articles","previous_headings":"2. Trim bioclim layers > 2.1 invaded region in North America (Ri.NAmerica model)","what":"Mask bioclim layers","title":"Setup for regional-scale MaxEnt models","text":"start masking process importing bioclim layers reference layer need. also crop layer N America, need bounding box . now mask rasters using shapefile created . Lets plot one new layers make sure cropping worked.  Now bioclim layers trimmed, can use rasters downstream choose background points model. repeat process two regional models.","code":"# import layers env.files <- list.files(path = file.path(mypath, \"historical_climate_rasters\", \"chelsa2.1_30arcsec\", \"v1_maxent_10km\"), pattern = \"\\\\_NAmerica.asc$\", full.names = TRUE)   # output file names output.files <- list.files(path = file.path(mypath, \"historical_climate_rasters\", \"chelsa2.1_30arcsec\", \"v1_maxent_10km\"), pattern = \"\\\\_NAmerica.asc$\", full.names = FALSE) %>%   gsub(pattern = \"NAmerica\", replacement = \"regional_invaded_KG\")  # also load shapefile again regional_invaded_withSLF <- terra::vect(file.path(here::here(), \"vignette-outputs\", \"shapefiles\", \"SLF_regional_invaded_extent.shp\"))   # bbox for cropping ext.obj.crop <- terra::ext(-138.66681, 19.12534, -52.58347, 60.83319 , xy = TRUE) # loop to crop extent for all files for(a in seq_along(env.files)){    # load in first raster   rast.hold <- terra::rast(env.files[a])      # mask new rasters using shapefile   rast.hold <- terra::mask(x = rast.hold, mask = regional_invaded_withSLF, overwrite = FALSE)       # crop to extent as well   rast.hold <- terra::crop(x = rast.hold, y = ext.obj.crop, overwrite = FALSE)      #write out the new resampled rasters!   terra::writeRaster(     x = rast.hold,      filename = file.path(mypath, \"historical_climate_rasters\", \"chelsa2.1_30arcsec\", \"v1_maxent_10km\", output.files[a]),      filetype = \"AAIGrid\",      overwrite = TRUE     )      # remove object once its done   rm(rast.hold)    }  # I am pretty sure this method resets the raster cell numbers, which might be annoying downstream.... bio11 <- terra::rast(x = file.path(mypath, \"historical_climate_rasters\", \"chelsa2.1_30arcsec\", \"v1_maxent_10km\", \"bio11_1981-2010_regional_invaded_KG.asc\"))  # convert to df bio11_df <- terra::as.data.frame(bio11, xy = TRUE)  # plot main layer as example (ggplot() +   # change scale of plots to be standard across figures   geom_raster(data = bio11_df,              aes(x = x, y = y, fill = `CHELSA_bio11_1981-2010_V.2.1`)) +   xlab(\"longitude\") +   ylab(\"latitude\") +   theme_minimal() +   theme(legend.position = \"none\") +   coord_equal() ) ## Warning: Raster pixels are placed at uneven horizontal intervals and will be shifted ## ℹ Consider using `geom_tile()` instead. ## Raster pixels are placed at uneven horizontal intervals and will be shifted ## ℹ Consider using `geom_tile()` instead. # the cropping worked rm(ext.obj) rm(ext.obj.vect) rm(ext.obj.crop)"},{"path":"https://ieco-lab.github.io/slfSpread/articles/060_setup_regional_MaxEnt_models.html","id":"invaded-region-in-south-korea-and-japan-ri-asia-model","dir":"Articles","previous_headings":"2. Trim bioclim layers","what":"2.2 Invaded region in South Korea and Japan (Ri.Asia model)","title":"Setup for regional-scale MaxEnt models","text":"need find way clip climate zones native vs invaded region, climate zones likely present Japan Korea native range. However, want segment data region. normally use country administrative borders, many contested islands left . , obtain bounding box Japan South Korea use geographically segment KG climate zones masking.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/060_setup_regional_MaxEnt_models.html","id":"intersect-points-and-kg-zones-1","dir":"Articles","previous_headings":"2. Trim bioclim layers > 2.2 Invaded region in South Korea and Japan (Ri.Asia model)","what":"Intersect points and KG zones","title":"Setup for regional-scale MaxEnt models","text":"just want presences invaded east asian range. manually filter points accidentally got native Ri.Asia models. Now intersect points shapefile. need crop shapefile extent presences intersect keep climate zones contain presences. resulting shapefile used crop bioclim data choose background points specific model. Now lets plot sanity check.","code":"koeppen_zones_rast <- terra::rast(x = file.path(mypath, \"models\", \"working_dir\", \"koeppen_climate_zones.asc\"))   slf_points <- read_csv(file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"slf_all_coords_final_2024-08-05.csv\")) %>%   dplyr::select(-species) ## Rows: 805 Columns: 3 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr (1): species ## dbl (2): x, y ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. # extent object for Japan and SK ext.obj <- terra::ext(122.93816, 153.98561, 24.21210, 45.52041)  # convert to vector slf_points_vect <- terra::vect(x = slf_points, geom = c(\"x\", \"y\"), crs = \"EPSG:4326\") %>%   # crop by extent area of interest   terra::crop(., y = ext.obj) %>%   # convert to geom, which gets coordinates of a spatVector   terra::geom()   # convert to sf object slf_points_invaded_asian <- terra::as.data.frame(slf_points_vect) %>%   dplyr::select(-c(geom, part, hole)) %>%   # filter out specific points that were showing up in both native and invaded_regional model   dplyr::filter(x > 125) %>%   # convert to sf object   sf::st_as_sf(coords = c(\"x\", \"y\"), crs = \"EPSG:4326\")   # will not need this object again rm(slf_points_vect) # load in shapefile again KG_zones_invaded_asian_poly <- sf::read_sf(dsn = file.path(mypath, \"models\", \"working_dir\", \"shapefiles\", \"koeppen_climate_zones.shp\")) %>%   dplyr::rename(\"koeppen_climate_zones\" = \"koeppen_cl\")  # bounding box for cropping ext.obj.vect <- c(xmin = 122.93816, ymin = 24.21210, xmax = 153.98561, ymax = 45.52041) # first, crop K-G raster to SK and Japan KG_zones_invaded_asian_poly <- st_crop(KG_zones_invaded_asian_poly, y = ext.obj.vect) %>%   # also get rid of ocean   dplyr::filter(koeppen_climate_zones != 32)     # intersect regional_invaded_asian_withSLF <- sf::st_filter(x = KG_zones_invaded_asian_poly, y = slf_points_invaded_asian)  # write to file sf::st_write(   obj = regional_invaded_asian_withSLF,    dsn = file.path(here::here(), \"vignette-outputs\", \"shapefiles\", \"SLF_regional_invaded_asian_extent.shp\"),   driver = \"ESRI Shapefile\",   append = FALSE   ) regional_invaded_asian_withSLF <- sf::read_sf(dsn = file.path(here::here(), \"vignette-outputs\", \"shapefiles\", \"SLF_regional_invaded_asian_extent.shp\")) %>%   dplyr::rename(\"koeppen_climate_zones\" = \"kppn_c_\")  # get extent st_bbox(regional_invaded_asian_withSLF) ##      xmin      ymin      xmax      ymax  ## 122.93816  30.49986 149.74986  46.58424 (regional_invaded_asian_withSLF_plot <- ggplot() +    # world map    geom_polygon(data = map_data('world', region = c(\"Japan\", \"North Korea\", \"China\", \"South Korea\", \"Russia\", \"Mongolia\")), aes(x = long, y = lat, group = group), fill = \"azure4\", color = \"black\", lwd = 0.15) +    # slf native range shapefile    geom_sf(data = regional_invaded_asian_withSLF, aes(fill = as.factor(koeppen_climate_zones)), color = \"black\") +    # scales    labs(      title = \"Köppen-Geiger climate zones as background selection area\\nfor 'Ri.Asia' model\",      caption = \"K-G zones selected if containing SLF presences\",      x = \"longitude\",      y = \"latitude\",      fill = \"Köppen climate zone\"      ) +    scale_fill_brewer(palette = \"Paired\", labels = kmz_names_factor) +    theme_classic() +    theme(legend.position = \"right\") +    coord_sf(xlim = c(122.93816, 153.98561), ylim = c(24.21210, 45.52041)) ) ggsave(   regional_invaded_asian_withSLF_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"SLF_regional_invaded_asian_extent_KG_climate_zones.jpg\"),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\" )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/060_setup_regional_MaxEnt_models.html","id":"mask-bioclim-layers-1","dir":"Articles","previous_headings":"2. Trim bioclim layers > 2.2 Invaded region in South Korea and Japan (Ri.Asia model)","what":"Mask bioclim layers","title":"Setup for regional-scale MaxEnt models","text":"Looks good!","code":"# bioclim layers env.files <- list.files(path = file.path(mypath, \"historical_climate_rasters\", \"chelsa2.1_30arcsec\", \"v1_maxent_10km\"), pattern = \"\\\\_global.asc$\", full.names = TRUE)   # set naming for rasters output.files <- list.files(path = file.path(mypath, \"historical_climate_rasters\", \"chelsa2.1_30arcsec\", \"v1_maxent_10km\"), pattern = \"\\\\_global.asc$\", full.names = FALSE) %>%   gsub(pattern = \"global\", replacement = \"regional_invaded_asian_KG\")    # load in shapefile as spatVector  regional_invaded_asian_withSLF <- terra::vect(x = file.path(here::here(), \"vignette-outputs\", \"shapefiles\", \"SLF_regional_invaded_asian_extent.shp\"))  # for cropping ext.obj.crop <- terra::ext(122.93816, 30.49986, 149.74986, 46.58424, xy = TRUE) # loop to crop extent for all files for(a in seq_along(env.files)){    #ensure that the CRS is consistent   rast.hold <- terra::rast(env.files[a])      # crop new rasters to extent   rast.hold <- terra::mask(x = rast.hold, mask = regional_invaded_asian_withSLF)   # crop to extent as well   rast.hold <- terra::crop(x = rast.hold, y = ext.obj.crop, overwrite = FALSE)      # write out the new resampled rasters!   terra::writeRaster(     x = rast.hold,      filename = file.path(mypath, \"historical_climate_rasters\", \"chelsa2.1_30arcsec\", \"v1_maxent_10km\", output.files[a]),      filetype = \"AAIGrid\",      overwrite = FALSE     )      # remove object once its done   rm(rast.hold)    } bio11_invaded_asian <- terra::rast(   x = file.path(mypath, \"historical_climate_rasters\", \"chelsa2.1_30arcsec\", \"v1_maxent_10km\", \"bio11_1981-2010_regional_invaded_asian_KG.asc\")   )  # convert to df bio11_invaded_asian_df <- terra::as.data.frame(bio11_invaded_asian, xy = TRUE)  # plot main layer as example (ggplot() +   # change scale of plots to be standard across figures   geom_raster(data = bio11_invaded_asian_df,              aes(x = x, y = y, fill = `CHELSA_bio11_1981-2010_V.2.1`)) +   xlab(\"longitude\") +   ylab(\"latitude\") +   theme_minimal() +   theme(legend.position = \"none\") +   coord_equal() ) ## Warning: Raster pixels are placed at uneven horizontal intervals and will be shifted ## ℹ Consider using `geom_tile()` instead. ## Raster pixels are placed at uneven horizontal intervals and will be shifted ## ℹ Consider using `geom_tile()` instead. # the cropping worked rm(ext.obj) rm(ext.obj.vect) rm(ext.obj.crop)"},{"path":"https://ieco-lab.github.io/slfSpread/articles/060_setup_regional_MaxEnt_models.html","id":"native-region-in-southeast-asia-rn-model","dir":"Articles","previous_headings":"2. Trim bioclim layers","what":"2.3 Native region in Southeast Asia (Rn model)","title":"Setup for regional-scale MaxEnt models","text":"native range China defined anywhere within Southeast asia contains climate zones SLF found within east southeast Asia. first need download shapefiles countries southeast asia. use shapefiles clip KG climate zones shapefile. , use final shapefile clip bioclim rasters.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/060_setup_regional_MaxEnt_models.html","id":"get-shapefile-for-native-range","dir":"Articles","previous_headings":"2. Trim bioclim layers > 2.3 Native region in Southeast Asia (Rn model)","what":"Get shapefile for native range","title":"Setup for regional-scale MaxEnt models","text":"retrieve shapefile data naturalearthdata using R package called rnaturalearth access database. Now data, can cut parts want. can treat shapefile like data table simply retrieve countries want. keep countries southeast Asia, plus countries south Asia excluding Pakistan Afghanistan east Asia excluding invaded range Asia (Japan, SK, NK) (Wikipedia, see references). using much larger extent lot conjecture true native range SLF, want climate zones considered. Macau Hong Kong show original dataset, likely considered part larger country (case Hong Kong, China). use shapefile cut KG climate zones, intersect result SLF points dataset","code":"# check which types of data are available # these are in the rnaturalearth package data(df_layers_cultural)  # I will use states_provinces  # get metadata ne_metadata <- ne_find_vector_data(   scale = 10,   category = \"cultural\",   getmeta = TRUE ) %>%   dplyr::filter(layer == \"admin_0_countries\") # URL to open metadata utils::browseURL(ne_metadata[, 3])   # download data asia_sf <- rnaturalearth::ne_download(   scale = 10, # highest resolution   type = \"admin_0_countries\", # states and provinces   category = \"cultural\",   destdir = file.path(here::here(), \"data-raw\", \"ne_countries\"),   load = TRUE, # load into environment   returnclass = \"sf\" # shapefile ) ## Reading layer `ne_10m_admin_0_countries' from data source  ##   `C:\\Users\\tun83449\\Documents\\GitHub\\slfSpread\\data-raw\\ne_countries\\ne_10m_admin_0_countries.shp'  ##   using driver `ESRI Shapefile' ## Simple feature collection with 258 features and 168 fields ## Geometry type: MULTIPOLYGON ## Dimension:     XY ## Bounding box:  xmin: -180 ymin: -90 xmax: 180 ymax: 83.6341 ## Geodetic CRS:  WGS 84 # southeast asia shapefile asia_sf <- asia_sf %>%   # filter all countries in southeast asia   dplyr::filter(     NAME %in% c(       # southeast asia       \"Brunei\", \"East Timor\", \"Indonesia\", \"Laos\", \"Malaysia\", \"Myanmar\", \"Philippines\", \"Singapore\", \"Thailand\", \"Vietnam\",        # east asia       \"China\", \"Hong Kong\", \"Macau\", \"Mongolia\", \"Taiwan\",        # south asia       \"Bangladesh\", \"Bhutan\", \"India\", \"Maldives\", \"Nepal\", \"Sri Lanka\")     ) %>%   # set crs   sf::st_transform(x = ., dst = \"EPSG:4326\")   # save sf::st_write(   obj = asia_sf,    dsn = file.path(here::here(), \"vignette-outputs\", \"shapefiles\", \"asia_admin.shp\"),   driver = \"ESRI Shapefile\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/060_setup_regional_MaxEnt_models.html","id":"select-kg-regions","dir":"Articles","previous_headings":"2. Trim bioclim layers > 2.3 Native region in Southeast Asia (Rn model)","what":"Select KG regions","title":"Setup for regional-scale MaxEnt models","text":"import SLF presences KG shapefile first. Next, crop SLF presences KG shapefile datasets using Asian range shapefile. Now lets plot sanity check.","code":"# slf presences slf_points <- read_csv(file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"slf_all_coords_final_2024-08-05.csv\")) %>%   dplyr::select(-species) ## Rows: 805 Columns: 3 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr (1): species ## dbl (2): x, y ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. # load in KG shapefile  koeppen_zones_rast <- terra::rast(file.path(mypath, \"models\", \"working_dir\", \"koeppen_climate_zones.asc\"))   # re-load asia admin shapefile asia_vect <- terra::vect(file.path(here::here(), \"vignette-outputs\", \"shapefiles\", \"asia_admin.shp\")) # temp mask layer mask_layer <- vect(asia_sf) # convert to vector slf_points_masked <- terra::vect(x = slf_points, geom = c(\"x\", \"y\"), crs = \"EPSG:4326\") %>% # crop by extent area of interest terra::mask(., mask = mask_layer) %>% # convert to geom, which gets coordinates of a spatVector terra::geom()   # convert back to data frame slf_points_native <- terra::as.data.frame(slf_points_masked) %>%   dplyr::select(-c(geom, part, hole)) %>%   sf::st_as_sf(coords = c(\"x\", \"y\"), crs = \"EPSG:4326\")    # will not need these objects again rm(slf_points_masked) rm(mask_layer) # first, mask K-G raster by asian countries koeppen_zones_rast_native <- terra::mask(koeppen_zones_rast, mask = asia_vect)   # next, convert raster to polygon KG_zones_native_poly <- terra::as.polygons(   x = koeppen_zones_rast_native,   aggregate = TRUE,   values = TRUE,   crs = \"EPSG:4326\" )   # write to shapefile terra::writeVector(   x = KG_zones_native_poly,   filename = file.path(mypath, \"models\", \"working_dir\", \"shapefiles\", \"asia_admin_KG.shp\"),   filetype = \"ESRI Shapefile\",   overwrite = TRUE ) # load back in as shapefile KG_zones_native_poly <- sf::read_sf(dsn = file.path(mypath, \"models\", \"working_dir\", \"shapefiles\", \"asia_admin_KG.shp\")) %>%   # rename   dplyr::rename(\"koeppen_climate_zones\" = \"koeppen_cl\") %>%   # also get rid of ocean   dplyr::filter(koeppen_climate_zones != 32)     # intersect regional_native_withSLF <- sf::st_filter(x = KG_zones_native_poly, y = slf_points_native)   # write to file sf::st_write(   obj = regional_native_withSLF,    dsn = file.path(here::here(), \"vignette-outputs\", \"shapefiles\", \"SLF_regional_native_extent.shp\"),   driver = \"ESRI Shapefile\",   append = FALSE   ) regional_native_withSLF <- sf::read_sf(dsn = file.path(here::here(), \"vignette-outputs\", \"shapefiles\", \"SLF_regional_native_extent.shp\")) %>%   dplyr::rename(\"koeppen_climate_zones\" = \"kppn_c_\")  # get extent st_bbox(regional_native_withSLF) ##       xmin       ymin       xmax       ymax  ##  72.666527  -9.666806 140.999860  53.249861 (regional_native_withSLF_plot <- ggplot() +   geom_polygon(     data = map_data('world', region = c(\"Brunei\", \"East Timor\", \"Indonesia\", \"Laos\", \"Malaysia\", \"Myanmar\", \"Philippines\", \"Singapore\", \"Thailand\", \"Vietnam\", \"China\", \"Hong Kong\", \"Macau\", \"Mongolia\", \"Taiwan\",\"Bangladesh\", \"Bhutan\", \"India\", \"Maldives\", \"Nepal\", \"Sri Lanka\")),      aes(x = long, y = lat, group = group), fill = \"azure4\", color = \"black\", lwd = 0.15) +    # slf native range shapefile    geom_sf(data = regional_native_withSLF, aes(fill = as.factor(koeppen_climate_zones)), color = \"black\") +    # scales    labs(      title = \"Köppen climate zones as background selection area for 'Rn' model\",      caption = \"K-G zones selected if containing SLF presences\",      x = \"longitude\",      y = \"latitude\",      fill = \"Köppen climate zone\"      ) +    scale_fill_brewer(palette = \"Paired\", labels = kmz_names_factor) +    theme_classic() +    theme(legend.position = \"right\") +    coord_sf() ) ggsave(   regional_native_withSLF_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"SLF_native_extent_KG_climate_zones.jpg\"),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\" )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/060_setup_regional_MaxEnt_models.html","id":"mask-bioclim-layers-2","dir":"Articles","previous_headings":"2. Trim bioclim layers > 2.3 Native region in Southeast Asia (Rn model)","what":"Mask bioclim layers","title":"Setup for regional-scale MaxEnt models","text":"now mask rasters using shapefile created Lets plot one new layers make sure cropping worked.","code":"# import layers env.files <- list.files(path = file.path(mypath, \"historical_climate_rasters\", \"chelsa2.1_30arcsec\", \"v1_maxent_10km\"), pattern = \"\\\\_global.asc$\", full.names = TRUE)   # output file names output.files <- list.files(path = file.path(mypath, \"historical_climate_rasters\", \"chelsa2.1_30arcsec\", \"v1_maxent_10km\"), pattern = \"\\\\_global.asc$\", full.names = FALSE) %>%   gsub(pattern = \"global\", replacement = \"regional_native_KG\")  # also load shapefile again regional_native_withSLF <- terra::vect(file.path(here::here(), \"vignette-outputs\", \"shapefiles\", \"SLF_regional_native_extent.shp\"))   ext.obj.crop <- terra::ext(72.666527, -9.666806, 140.999860, 53.249861, xy = TRUE) # loop to crop extent for all files for(a in seq_along(env.files)){    #ensure that the CRS is consistent   rast.hold <- terra::rast(env.files[a])      # mask new rasters using shapefile   rast.hold <- terra::mask(x = rast.hold, mask = regional_native_withSLF, overwrite = FALSE)   # crop to extent as well   rast.hold <- terra::crop(x = rast.hold, y = ext.obj.crop, overwrite = FALSE)      #write out the new resampled rasters!   terra::writeRaster(     x = rast.hold,      filename = file.path(mypath, \"historical_climate_rasters\", \"chelsa2.1_30arcsec\", \"v1_maxent_10km\", output.files[a]),      filetype = \"AAIGrid\",      overwrite = FALSE     )      # remove object once its done   rm(rast.hold)    } # I am pretty sure this method resets the raster cell numbers, which might be annoying downstream.... bio11_native <- terra::rast(x = file.path(mypath, \"historical_climate_rasters\", \"chelsa2.1_30arcsec\", \"v1_maxent_10km\", \"bio11_1981-2010_regional_native_KG.asc\"))  # convert to df bio11_native_df <- terra::as.data.frame(bio11_native, xy = TRUE)  # plot main layer as example (ggplot() +   # change scale of plots to be standard across figures   geom_raster(data = bio11_native_df,              aes(x = x, y = y, fill = `CHELSA_bio11_1981-2010_V.2.1`)) +   xlab(\"longitude\") +   ylab(\"latitude\") +   theme_minimal() +   theme(legend.position = \"none\") +   coord_equal() ) ## Warning: Raster pixels are placed at uneven horizontal intervals and will be shifted ## ℹ Consider using `geom_tile()` instead. ## Raster pixels are placed at uneven horizontal intervals and will be shifted ## ℹ Consider using `geom_tile()` instead. # the cropping worked rm(ext.obj.crop)"},{"path":"https://ieco-lab.github.io/slfSpread/articles/060_setup_regional_MaxEnt_models.html","id":"choose-background-points-from-selection-areas","dir":"Articles","previous_headings":"","what":"3. Choose background points from selection areas","title":"Setup for regional-scale MaxEnt models","text":"Now, need use rasters just created choose background points, used MaxEnt sample climate compare sample known SLF presences. background points randomized stand-true absences, generate using dismo::randomPoints().","code":"mypath <- file.path(here::here() %>%                       dirname(),                    \"maxent/historical_climate_rasters/chelsa2.1_30arcsec/v1_maxent_10km\")"},{"path":"https://ieco-lab.github.io/slfSpread/articles/060_setup_regional_MaxEnt_models.html","id":"invaded-region-of-north-america-ri-namerica-model","dir":"Articles","previous_headings":"3. Choose background points from selection areas","what":"3.1 invaded region of North America (Ri.NAmerica model)","title":"Setup for regional-scale MaxEnt models","text":"Create 10,000 random background points. corrected latitudinal stretching selected presence locations, like global model. Now lets visualize result.  can see background points isolated area selected using K-G climate zones North America, operation successful. Now, repeat process next two models.","code":"# load in raster to choose points from regional_invaded_bio11 <- raster::raster(x = file.path(mypath, \"bio11_1981-2010_regional_invaded_KG.asc\"))   # load in slf points to intersect slf_points <- read_rds(file = file.path(here::here(), \"data\", \"slf_all_coords_final_2024-08-05.rds\")) %>%   dplyr::select(-species) %>%   as.data.frame() # set seed set.seed(5)  # generate random points  regional_invaded_background <- dismo::randomPoints(   mask = regional_invaded_bio11,    n = 10000, # default number used by maxent   p = slf_points,   excludep = TRUE, # exclude cells where slf has been found   lonlatCorrection = TRUE, # weight samples by latitude because cell size is larger closer to equator   warn = 2 # higher number gives most warnings, including if sample size not reached   ) %>%   as.data.frame(.)  # save as csv write_csv(   x = regional_invaded_background,    file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_invaded_background_points_v7.csv\")   ) # save as rds file write_rds(   regional_invaded_background,    file = file.path(here::here(), \"data\", \"regional_invaded_background_points_v7.rds\") ) # plotting raster regional_invaded_bio11_df <- terra::rast(x = file.path(mypath, \"bio11_1981-2010_regional_invaded_KG.asc\")) %>%   terra::as.data.frame(., xy = TRUE)  # re-read background points  regional_invaded_background <- read.csv(file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_invaded_background_points_v7.csv\"))  # extent object for N America ext.obj <- terra::ext( -140.976563, -51.064453, 15.182421, 60.586967)  # load in raster for visualization global_atc <- terra::rast(x = file.path(mypath, \"atc_2015_global.asc\")) %>%   # crop to easternUSA   terra::crop(., y = ext.obj) # convert to df global_atc_df <- terra::as.data.frame(global_atc, xy = TRUE) # plot at the continental scale (regional_invaded_background_plot <- ggplot() +    geom_raster(data = global_atc_df, aes(x = x, y = y), fill = \"azure4\") +    geom_raster(data = regional_invaded_bio11_df, aes(x = x, y = y), fill = \"azure1\") +    geom_point(data = regional_invaded_background, aes(x = x, y = y), color = \"firebrick2\", size = 0.1) +    scale_x_continuous(expand = c(0, 0)) +    scale_y_continuous(expand = c(0, 0)) +    labs(      title = \"'Ri.NAmerica' model background points\",       x = \"longitude\",      y = \"latitude\"      ) +    theme_classic() +    theme(      legend.position = \"none\",      panel.background = element_rect(fill = \"lightblue2\",                                         colour = \"lightblue2\")      ) +     coord_equal()  ) ## Warning: Raster pixels are placed at uneven horizontal intervals and will be shifted ## ℹ Consider using `geom_tile()` instead. ## Raster pixels are placed at uneven horizontal intervals and will be shifted ## ℹ Consider using `geom_tile()` instead. ggsave(   regional_invaded_background_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"regional_invaded_model_background_points_v7.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/060_setup_regional_MaxEnt_models.html","id":"invaded-region-of-asia-south-korea-and-japan-ri-asia-model","dir":"Articles","previous_headings":"3. Choose background points from selection areas","what":"3.2 invaded region of Asia (South Korea and Japan, Ri.Asia model)","title":"Setup for regional-scale MaxEnt models","text":"Now lets visualize result.","code":"# load in raster to choose points from invaded_asian_bio11 <- raster::raster(x = file.path(mypath, \"bio11_1981-2010_regional_invaded_asian_KG.asc\"))   # load in slf points to intersect slf_points <- read_rds(file = file.path(here::here(), \"data\", \"slf_all_coords_final_2024-08-05.rds\")) %>%   dplyr::select(-species) %>%   as.data.frame() # set seed set.seed(7)    # generate random points  regional_invaded_asian_points <- dismo::randomPoints(   mask = invaded_asian_bio11, # cropped to regional_invaded_asian range   n = 10000, # default number used by maxent   p = slf_points,   excludep = TRUE, # exclude cells where slf has been found   lonlatCorrection = TRUE, # weight samples by latitude because cell size is larger closer to equator   warn = 2 # higher number gives most warnings, including if sample size not reached   ) %>%   as.data.frame(.)  # save as csv write_csv(x = regional_invaded_asian_points, file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_invaded_asian_background_points_v2.csv\")) # save as rds file write_rds(regional_invaded_asian_points, file = file.path(here::here(), \"data\", \"regional_invaded_asian_background_points_v2.rds\")) invaded_asian_bio11_df <- terra::rast(   x = file.path(mypath, \"bio11_1981-2010_regional_invaded_asian_KG.asc\")   ) %>%   terra::as.data.frame(., xy = TRUE)  global_atc_df <- terra::rast(x = file.path(mypath, \"atc_2015_global.asc\")) %>%   terra::as.data.frame(., xy = TRUE)  regional_invaded_asian_points <- read.csv(file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_invaded_asian_background_points_v2.csv\")) (regional_invaded_asian_points_plot <- ggplot() +    geom_raster(data = global_atc_df, aes(x = x, y = y), fill = \"azure4\") +    geom_raster(data = invaded_asian_bio11_df, aes(x = x, y = y), fill = \"azure1\") +    geom_point(data = regional_invaded_asian_points, aes(x = x, y = y), color = \"firebrick2\", size = 0.1) +    ggtitle(\"'Ri.Asia' model background points\") +    map_style +    theme(legend.position = \"none\") +    coord_equal(xlim = c(122, 153.98561), ylim = c(24.21210, 47)) ) ## Coordinate system already present. Adding new coordinate system, which will ## replace the existing one. ## Warning: Raster pixels are placed at uneven horizontal intervals and will be shifted ## ℹ Consider using `geom_tile()` instead. ## Raster pixels are placed at uneven horizontal intervals and will be shifted ## ℹ Consider using `geom_tile()` instead. ## Raster pixels are placed at uneven horizontal intervals and will be shifted ## ℹ Consider using `geom_tile()` instead. ggsave(regional_invaded_asian_points_plot,         filename = file.path(          here::here(), \"vignette-outputs\", \"figures\", \"regional_invaded_asian_model_background_points_v2.jpg\"          ),        height = 8,         width = 10,        device = \"jpeg\",        dpi = \"retina\"        )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/060_setup_regional_MaxEnt_models.html","id":"native-region-rn-model","dir":"Articles","previous_headings":"3. Choose background points from selection areas","what":"3.3 Native region (Rn model)","title":"Setup for regional-scale MaxEnt models","text":"","code":"# path to directory mypath <- file.path(here::here() %>%                       dirname(),                    \"maxent/historical_climate_rasters/chelsa2.1_30arcsec/v1_maxent_10km\") # mask layer I will use regional_native_bio2 <- raster::raster(x = file.path(mypath, \"bio2_1981-2010_regional_native_KG.asc\")) # %>%   #!is.na()  # also get ext terra::ext(regional_native_bio2)   # load in slf points to intersect slf_points <- read_rds(file = file.path(here::here(), \"data\", \"slf_all_coords_final_2024-08-05.rds\")) %>%   dplyr::select(-species) %>%   as.data.frame() # set seed so that the random points for this dataset are the same the next time this code is run set.seed(6)    # generate random points  regional_native_points <- dismo::randomPoints(   mask = regional_native_bio2,    n = 10000, # default number used by maxent   p = slf_points,   excludep = TRUE, # exclude cells where slf has been found   lonlatCorrection = TRUE, # weight samples by latitude because cell size is larger closer to equator   warn = 2 # higher number gives most warnings, including if sample size not reached   ) %>%   as.data.frame(.)  # save as csv write_csv(x = regional_native_points,            file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_native_background_points_v3.csv\")           ) # save as rds file write_rds(regional_native_points,            file = file.path(here::here(), \"data\", \"regional_native_background_points_v3.rds\") ) regional_native_bio2_df <- terra::rast(x = file.path(mypath, \"bio2_1981-2010_regional_native_KG.asc\")) %>%   terra::as.data.frame(., xy = TRUE)  regional_native_points <- read_csv(file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_native_background_points_v3.csv\")) ## Rows: 10000 Columns: 2 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## dbl (2): x, y ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. global_atc_df <- terra::rast(x = file.path(mypath, \"atc_2015_global.asc\")) %>%   terra::as.data.frame(., xy = TRUE) (regional_native_points_plot <- ggplot() +   geom_raster(data = global_atc_df, aes(x = x, y = y), fill = \"azure4\") +   geom_raster(data = regional_native_bio2_df, aes(x = x, y = y), fill = \"azure1\") +   geom_point(data = regional_native_points, aes(x = x, y = y), color = \"firebrick2\", size = 0.1) +   ggtitle(\"'Rn' model background points\") +   map_style +   theme(legend.position = \"none\")  +   coord_equal(xlim = c(72.666527, 140.999860), ylim = c(-9.666806, 53.249861)) ) ## Coordinate system already present. Adding new coordinate system, which will ## replace the existing one. ## Warning: Raster pixels are placed at uneven horizontal intervals and will be shifted ## ℹ Consider using `geom_tile()` instead. ## Raster pixels are placed at uneven horizontal intervals and will be shifted ## ℹ Consider using `geom_tile()` instead. ## Raster pixels are placed at uneven horizontal intervals and will be shifted ## ℹ Consider using `geom_tile()` instead. ggsave(regional_native_points_plot,         filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"regional_native_model_background_points_v3.jpg\"),        height = 8,         width = 10,        device = \"jpeg\",        dpi = \"retina\")"},{"path":"https://ieco-lab.github.io/slfSpread/articles/060_setup_regional_MaxEnt_models.html","id":"choose-and-plot-training-points","dir":"Articles","previous_headings":"","what":"4. Choose and plot training points","title":"Setup for regional-scale MaxEnt models","text":"Next, use bounding boxes isolate SLF presences major region. normally sufficient select correct points, region isolated others fashion bounding box easily separates points region case.","code":"mypath <- file.path(here::here() %>%                       dirname(),                    \"maxent\") # background raster for plotting global_atc_df <- terra::rast(   x = file.path(mypath, \"historical_climate_rasters\", \"chelsa2.1_30arcsec\", \"v1_maxent_10km\", \"atc_2015_global.asc\")   ) %>%   terra::as.data.frame(., xy = TRUE)  # load in slf points to intersect slf_points <- read_rds(file = file.path(here::here(), \"data\", \"slf_all_coords_final_2024-08-05.rds\")) %>%   dplyr::select(-species)"},{"path":"https://ieco-lab.github.io/slfSpread/articles/060_setup_regional_MaxEnt_models.html","id":"invaded-region-of-north-america-ri-namerica-model-1","dir":"Articles","previous_headings":"4. Choose and plot training points","what":"4.1 Invaded region of North America (Ri.NAmerica model)","title":"Setup for regional-scale MaxEnt models","text":"convert SLF points dataset spatial vector object can filtered using bounding box, transform back dataframe. Now plot points raster ensure bounding box worked.","code":"# extent object for N America ext.obj <- terra::ext(-96.503906, -59.589844, 23.5, 47.457809)  # convert to vector slf_points_vect <- terra::vect(x = slf_points, geom = c(\"x\", \"y\"), crs = \"EPSG:4326\") %>%   # crop by extent area of interest   terra::crop(., y = ext.obj) %>%   # convert to geom, which gets coordinates of a spatVector   terra::geom()   # convert back to data frame slf_points_invaded <- terra::as.data.frame(slf_points_vect) %>%   dplyr::select(-c(geom, part, hole))  # will not need this object again rm(slf_points_vect) write_csv(   x = slf_points_invaded,   file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_invaded_train_slf_presences_v7.csv\") ) # load in raster regional_invaded <- terra::rast(   x = file.path(mypath, \"historical_climate_rasters\", \"chelsa2.1_30arcsec\", \"v1_maxent_10km\", \"atc_2015_regional_invaded_KG.asc\")   ) # also convert to df regional_invaded_df <- terra::as.data.frame(regional_invaded, xy = TRUE)  # plot regional_invaded_slf_plot <- ggplot() +   geom_raster(data = global_atc_df, aes(x = x, y = y), fill = \"azure4\") +   geom_raster(data = regional_invaded_df, aes(x = x, y = y), fill = \"azure1\") +   geom_point(data = slf_points_invaded, aes(x = x, y = y), color = \"darkorange\", size = 0.5) +   labs(     title = \"'Ri.NAmerica' model SLF presences\",     x = \"longitude\",     y = \"latitude\"   ) +   scale_x_continuous(expand = c(0, 0)) +   scale_y_continuous(expand = c(0, 0)) +   theme_classic() +   theme(panel.background = element_rect(fill = \"lightblue2\",                                         colour = \"lightblue2\")         ) +   coord_equal(xlim = c(-140.976563, -51.064453), ylim = c(15.182421, 60.586967)) ggsave(   regional_invaded_slf_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"regional_invaded_train_slf_presences_v7.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/060_setup_regional_MaxEnt_models.html","id":"invaded-regional-south-korea-and-japan","dir":"Articles","previous_headings":"4. Choose and plot training points","what":"4.2 Invaded Regional (South Korea and Japan)","title":"Setup for regional-scale MaxEnt models","text":"","code":"# native range extent shapefile used to select slf presences mask_layer <- terra::vect(x = file.path(here::here(), \"vignette-outputs\", \"shapefiles\", \"SLF_regional_invaded_asian_extent.shp\"))  # convert to vector slf_points_masked <- terra::vect(x = slf_points, geom = c(\"x\", \"y\"), crs = \"EPSG:4326\") %>% # crop by extent area of interest terra::mask(., mask = mask_layer) %>% # convert to geom, which gets coordinates of a spatVector terra::geom()   # convert back to data frame slf_points_invaded_asian <- terra::as.data.frame(slf_points_masked) %>%   dplyr::select(-c(geom, part, hole)) %>%     dplyr::filter(x > 125)    # will not need this object again rm(slf_points_masked) write_csv(   x = slf_points_invaded_asian,   file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_invaded_asian_train_slf_presences_v2.csv\") ) invaded_asian <- terra::rast(   x = file.path(mypath, \"historical_climate_rasters\", \"chelsa2.1_30arcsec\", \"v1_maxent_10km\", \"atc_2015_regional_invaded_asian_KG.asc\")   ) # also convert to df invaded_asian_df <- terra::as.data.frame(invaded_asian, xy = TRUE)  regional_invaded_asian_slf_plot <- ggplot() +   geom_raster(data = global_atc_df, aes(x = x, y = y), fill = \"azure4\") +   geom_raster(data = invaded_asian_df, aes(x = x, y = y), fill = \"azure1\") +   geom_point(data = slf_points_invaded_asian, aes(x = x, y = y), color = \"darkorange\", size = 1) +   labs(     title = \"'Ri.Asia' model SLF presences\",     x = \"longitude\",     y = \"latitude\"   ) +   scale_x_continuous(expand = c(0, 0)) +   scale_y_continuous(expand = c(0, 0)) +   theme_classic() +   theme(panel.background = element_rect(fill = \"lightblue2\",                                         colour = \"lightblue2\")         ) +   coord_equal(xlim = c(122, 153.98561), ylim = c(24.21210, 47)) ggsave(   regional_invaded_asian_slf_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"regional_invaded_asian_train_slf_presences_v2.jpg\"),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/060_setup_regional_MaxEnt_models.html","id":"native-regional","dir":"Articles","previous_headings":"4. Choose and plot training points","what":"4.3 Native Regional","title":"Setup for regional-scale MaxEnt models","text":"","code":"# native range extent shapefile used to select slf presences mask_layer <- terra::vect(x = file.path(here::here(), \"vignette-outputs\", \"shapefiles\", \"SLF_native_range_extent.shp\"))  # convert to vector slf_points_masked <- terra::vect(x = slf_points, geom = c(\"x\", \"y\"), crs = \"EPSG:4326\") %>% # crop by extent area of interest terra::mask(., mask = mask_layer) %>% # convert to geom, which gets coordinates of a spatVector terra::geom()   # convert back to data frame slf_points_native <- terra::as.data.frame(slf_points_masked) %>%   dplyr::select(-c(geom, part, hole))    # will not need this object again rm(slf_points_masked) rm(mask_layer) write_csv(   x = slf_points_native,   file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_native_train_slf_presences_v3.csv\") ) regional_native <- terra::rast(   x = file.path(mypath, \"historical_climate_rasters\", \"chelsa2.1_30arcsec\", \"v1_maxent_10km\", \"atc_2015_regional_native_KG.asc\")   )  # re-import point data slf_points_native <- read_csv(file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_native_train_slf_presences_v3.csv\")) ## Rows: 269 Columns: 2 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## dbl (2): x, y ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. # also convert to df regional_native_df <- terra::as.data.frame(regional_native, xy = TRUE)  regional_native_slf_plot <- ggplot() +   geom_raster(data = global_atc_df, aes(x = x, y = y), fill = \"azure4\") +   geom_raster(data = regional_native_df, aes(x = x, y = y), fill = \"azure1\") +   geom_point(data = slf_points_native, aes(x = x, y = y), color = \"darkorange\", size = 1) +   labs(     title = \"'Rn' model SLF presences\",     x = \"longitude\",     y = \"latitude\"   ) +   scale_x_continuous(expand = c(0, 0)) +   scale_y_continuous(expand = c(0, 0)) +   theme_classic() +   theme(panel.background = element_rect(fill = \"lightblue2\",                                         colour = \"lightblue2\")         ) +   coord_equal(xlim = c(72.666527, 140.999860), ylim = c(-9.666806, 53.249861)) ggsave(   regional_native_slf_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"regional_native_train_slf_presences_v3.jpg\"),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/060_setup_regional_MaxEnt_models.html","id":"choose-validation-points","dir":"Articles","previous_headings":"","what":"5. Choose validation points","title":"Setup for regional-scale MaxEnt models","text":"training test points geographically separated, creates issue proper ratios kept training test points use entire dataset training one model test another model. , randomly sample subset model’s training region test points another model. Now ready run 3 regional models!","code":"# this model is trained on N American presences and tested on invaded asian presences  set.seed(8)  # randomly select subset of rows for testing slf_points_invaded_test_rows <-  sample(nrow(slf_points_invaded_asian), size = 68, replace = FALSE) # no replacement # filter slf_points_invaded_test <- slf_points_invaded_asian[slf_points_invaded_test_rows, ]  # write to csv write_csv(   x = slf_points_invaded_test,   file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_invaded_test_slf_presences_v7.csv\") ) # this model is trained on invaded asian presences and tested on invaded N American presences  set.seed(9)  # randomly select subset of rows for testing slf_points_invaded_asian_test_rows <-  sample(nrow(slf_points_invaded), size = 40, replace = FALSE) # no replacement # filter slf_points_invaded_asian_test <- slf_points_invaded[slf_points_invaded_asian_test_rows, ]  # write to csv write_csv(   x = slf_points_invaded_asian_test,   file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_invaded_asian_test_slf_presences_v2.csv\") ) # this model is trained on Asian native presences and tested on invaded N. American presences  set.seed(10)  # randomly select subset of rows for testing slf_points_native_test_rows <-  sample(nrow(slf_points_invaded), size = 54, replace = FALSE) # no replacement # filter slf_points_native_test <- slf_points_invaded[slf_points_native_test_rows, ]  # write to csv write_csv(   x = slf_points_native_test,   file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_native_test_slf_presences_v3.csv\") )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/060_setup_regional_MaxEnt_models.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Setup for regional-scale MaxEnt models","text":"Calvin, D. D., Rost, J., Keller, J., Crawford, S., Walsh, B., Bosold, M., & Urban, J. (2023). Seasonal activity spotted lanternfly (Hemiptera: Fulgoridae), Southeast Pennsylvania. Environmental Entomology, 52(6), 1108–1125. https://doi.org/10.1093/ee/nvad093 Du, Z., Wu, Y., Chen, Z., Cao, L., Ishikawa, T., Kamitani, S., Sota, T., Song, F., Tian, L., Cai, W., & Li, H. (2021). Global phylogeography invasion history spotted lanternfly revealed mitochondrial phylogenomics. Evolutionary Applications. https://doi.org/10.1111/eva.13170 Gallien, L., Douzet, R., Pratte, S., Zimmermann, N. E., & Thuiller, W. (2012). Invasive species distribution models – violating equilibrium assumption can create new insights. Global Ecology Biogeography, 21(11), 1126–1136. https://doi.org/10.1111/j.1466-8238.2012.00768.x Lewkiewicz, S. M., De Bona, S., Helmus, M. R., & Seibold, B. (2022). Temperature sensitivity pest reproductive numbers age-structured PDE models, focus invasive spotted lanternfly. Journal Mathematical Biology, 85(3), 29. https://doi.org/10.1007/s00285-022-01800-9 Santana Jr, P. ., Kumar, L., Da Silva, R. S., Pereira, J. L., & Picanço, M. C. (2019). Assessing impact climate change worldwide distribution Dalbulus maidis (DeLong) using MaxEnt. Pest Management Science, 75(10), 2706–2715. https://doi.org/10.1002/ps.5379 East Asia. 2024, March 6. Wikipedia. South Asia. 2024, March 27. Wikipedia. Southeast Asia. 2024, March 27. Wikipedia. Xin, B., Zhang, Y., Wang, X., Cao, L., Hoelmer, K. ., Broadley, H. J., & Gould, J. R. (2020). Exploratory survey spotted lanternfly (Hemiptera: Fulgoridae) natural enemies China. Environmental Entomology, 50(1), 36–45. https://doi.org/10.1093/ee/nvaa137","code":""},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/060_setup_regional_MaxEnt_models.html","id":"patchwork-together-figures-for-publication","dir":"Articles","previous_headings":"Appendix","what":"Patchwork together figures for publication","title":"Setup for regional-scale MaxEnt models","text":"","code":"# path to directory   mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent\")   # raster for mapping global_atc_df <- terra::rast(   x = file.path(mypath, \"historical_climate_rasters\", \"chelsa2.1_30arcsec\", \"v1_maxent_10km\", \"atc_2015_global.asc\")   ) %>%   terra::as.data.frame(., xy = TRUE)"},{"path":"https://ieco-lab.github.io/slfSpread/articles/060_setup_regional_MaxEnt_models.html","id":"ri-namerica-model","dir":"Articles","previous_headings":"Appendix > Patchwork together figures for publication","what":"Ri.NAmerica model","title":"Setup for regional-scale MaxEnt models","text":"chunks splice together plots summary plots.","code":"# validation dataset slf_points_invaded_test <- read.csv(   file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_invaded_test_slf_presences_v7.csv\")   )   # raster for the validation plot invaded_asian <- terra::rast(   x = file.path(mypath, \"historical_climate_rasters\", \"chelsa2.1_30arcsec\", \"v1_maxent_10km\", \"atc_2015_regional_invaded_asian_KG.asc\")   ) # also convert to df invaded_asian_df <- terra::as.data.frame(invaded_asian, xy = TRUE) regional_invaded_test_plot <- ggplot() +   geom_raster(data = global_atc_df, aes(x = x, y = y), fill = \"azure4\") +   geom_raster(data = invaded_asian_df, aes(x = x, y = y), fill = \"azure1\") +   geom_point(data = slf_points_invaded_test, aes(x = x, y = y), color = \"darkorange\", size = 1) +   labs(     title = \"'Ri.NAmerica' model validation (test) presences\",     x = \"longitude\",     y = \"latitude\"   ) +   scale_x_continuous(expand = c(0, 0)) +   scale_y_continuous(expand = c(0, 0)) +   theme_classic() +   theme(panel.background = element_rect(fill = \"lightblue2\",                                         colour = \"lightblue2\")         ) +   coord_equal(xlim = c(122, 153.98561), ylim = c(24.21210, 47)) # change axis labels x_scale_labels <- c(-140, -120, -100, -80, -60) y_scale_labels <- c(20, 30, 40, 50, 60)  # background selection area regional_invaded_withSLF_plot <- regional_invaded_withSLF_plot +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(     tag = \"C\",     fill = \"zone\"     ) +   scale_x_continuous(labels = x_scale_labels, breaks = x_scale_labels, expand = c(0, 0)) +   scale_y_continuous(labels = y_scale_labels, breaks = y_scale_labels, expand = c(0, 0)) +   theme(     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.1),     plot.tag = element_text(face = \"bold\", size = 25)   )   # background points regional_invaded_background_plot <- regional_invaded_background_plot +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"B\") +   scale_x_continuous(labels = x_scale_labels, breaks = x_scale_labels, expand = c(0, 0)) +   scale_y_continuous(labels = y_scale_labels, breaks = y_scale_labels, expand = c(0, 0)) +   theme(     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.1),     plot.tag = element_text(face = \"bold\", size = 25)   )   # training presences regional_invaded_slf_plot  <- regional_invaded_slf_plot +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"A\") +   scale_x_continuous(labels = x_scale_labels, breaks = x_scale_labels, expand = c(0, 0)) +   scale_y_continuous(labels = y_scale_labels, breaks = y_scale_labels, expand = c(0, 0)) +   theme(     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.1),     plot.tag = element_text(face = \"bold\", size = 25)   )   x_scale_labels <- c(80, 100, 120, 140) y_scale_labels <- c(0, 10, 20, 30, 40, 50)   # test/validation presences regional_invaded_test_plot <- regional_invaded_test_plot +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"D\") +   scale_x_continuous(labels = x_scale_labels, breaks = x_scale_labels, expand = c(0, 0)) +   scale_y_continuous(labels = y_scale_labels, breaks = y_scale_labels, expand = c(0, 0)) +   theme(     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.1),     plot.tag = element_text(face = \"bold\", size = 25)   )   regional_invaded_patchwork <- (   (regional_invaded_slf_plot + regional_invaded_background_plot) /    (regional_invaded_withSLF_plot + regional_invaded_test_plot)    ) +   plot_annotation(     title = \"'Ri.NAmerica' model elements\",     subtitle = \"(A) training presences (B) background points (C) background selection area (D) test presences\"     )     # work around because collect axes not working # regional_invaded_patchwork <- patchwork::patchworkGrob(regional_invaded_patchwork) %>% #  gridExtra::grid.arrange(left = \"latitude\", bottom = \"longitude\") ggsave(   regional_invaded_patchwork,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"regional_invaded_model_v7_summary.jpg\"),   height = 10,    width = 14,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/060_setup_regional_MaxEnt_models.html","id":"ri-asia-model","dir":"Articles","previous_headings":"Appendix > Patchwork together figures for publication","what":"Ri.Asia Model","title":"Setup for regional-scale MaxEnt models","text":"","code":"# validation dataset slf_points_invaded_asian_test <- read.csv(   file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_invaded_asian_test_slf_presences_v2.csv\")   )  # load in raster for validation plot regional_invaded <- terra::rast(   x = file.path(mypath, \"historical_climate_rasters\", \"chelsa2.1_30arcsec\", \"v1_maxent_10km\", \"atc_2015_regional_invaded_KG.asc\")   ) # also convert to df regional_invaded_df <- terra::as.data.frame(regional_invaded, xy = TRUE) regional_invaded_asian_test_plot <- ggplot() +   geom_raster(data = global_atc_df, aes(x = x, y = y), fill = \"azure4\") +   geom_raster(data = regional_invaded_df, aes(x = x, y = y), fill = \"azure1\") +   geom_point(data = slf_points_invaded_asian_test, aes(x = x, y = y), color = \"darkorange\", size = 1) +   labs(     title = \"'Ri.Asia' model test presences\",     x = \"longitude\",     y = \"latitude\"   ) +   scale_x_continuous(expand = c(0, 0)) +   scale_y_continuous(expand = c(0, 0)) +   theme_classic() +   theme(panel.background = element_rect(fill = \"lightblue2\",                                         colour = \"lightblue2\")         ) +   coord_equal(xlim = c(-140.976563, -51.064453), ylim = c(15.182421, 60.586967)) x_scale_labels <- c(130, 140, 150) y_scale_labels <- c(25, 30, 35, 40, 45)  # background selection area regional_invaded_asian_withSLF_plot <- regional_invaded_asian_withSLF_plot +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(     tag = \"C\",     fill = \"zone\"     ) +   scale_x_continuous(labels = x_scale_labels, breaks = x_scale_labels, expand = c(0, 0)) +   scale_y_continuous(labels = y_scale_labels, breaks = y_scale_labels, expand = c(0, 0)) +   theme(     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.1),     plot.tag = element_text(face = \"bold\", size = 25)   )   # background points regional_invaded_asian_points_plot <- regional_invaded_asian_points_plot +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"B\") +   scale_x_continuous(labels = x_scale_labels, breaks = x_scale_labels, expand = c(0, 0)) +   scale_y_continuous(labels = y_scale_labels, breaks = y_scale_labels, expand = c(0, 0)) +   theme(     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.1),     plot.tag = element_text(face = \"bold\", size = 25)   )   # training presences regional_invaded_asian_slf_plot  <- regional_invaded_asian_slf_plot +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"A\") +   scale_x_continuous(labels = x_scale_labels, breaks = x_scale_labels, expand = c(0, 0)) +   scale_y_continuous(labels = y_scale_labels, breaks = y_scale_labels, expand = c(0, 0)) +   theme(     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.1),     plot.tag = element_text(face = \"bold\", size = 25)   )   x_scale_labels <- c(-140, -120, -100, -80, -60) y_scale_labels <- c(20, 30, 40, 50, 60)  # test presences regional_invaded_asian_test_plot <- regional_invaded_asian_test_plot +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"D\") +   scale_x_continuous(labels = x_scale_labels, breaks = x_scale_labels, expand = c(0, 0)) +   scale_y_continuous(labels = y_scale_labels, breaks = y_scale_labels, expand = c(0, 0)) +   theme(     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.1),     plot.tag = element_text(face = \"bold\", size = 25)   )    regional_invaded_asian_patchwork <- (   (regional_invaded_asian_slf_plot + regional_invaded_asian_points_plot) /    (regional_invaded_asian_withSLF_plot + regional_invaded_asian_test_plot)    ) +   plot_annotation(     title = \"'Ri.Asia' model elements\",     subtitle = \"(A) training presences (B) background points (C) background selection area (D) test presences\"     ) ggsave(   regional_invaded_asian_patchwork,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"regional_invaded_asian_model_v2_summary.jpg\"),   height = 10,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/060_setup_regional_MaxEnt_models.html","id":"rn-model","dir":"Articles","previous_headings":"Appendix > Patchwork together figures for publication","what":"Rn model","title":"Setup for regional-scale MaxEnt models","text":"Patchwork","code":"# validation dataset slf_points_native_test <- read.csv(   file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_native_test_slf_presences_v3.csv\")   )   # load in raster for validation plot regional_invaded <- terra::rast(   x = file.path(mypath, \"historical_climate_rasters\", \"chelsa2.1_30arcsec\", \"v1_maxent_10km\", \"atc_2015_regional_invaded_KG.asc\")   ) # also convert to df regional_invaded_df <- terra::as.data.frame(regional_invaded, xy = TRUE) regional_native_test_plot <- ggplot() +   geom_raster(data = global_atc_df, aes(x = x, y = y), fill = \"azure4\") +   geom_raster(data = regional_invaded_df, aes(x = x, y = y), fill = \"azure1\") +   geom_point(data = slf_points_native_test, aes(x = x, y = y), color = \"darkorange\", size = 1) +   labs(     title = \"'Rn' model test presences\",     x = \"longitude\",     y = \"latitude\"   ) +   scale_x_continuous(expand = c(0, 0)) +   scale_y_continuous(expand = c(0, 0)) +   theme_classic() +   theme(panel.background = element_rect(fill = \"lightblue2\",                                         colour = \"lightblue2\")         ) +   coord_equal(xlim = c(-140.976563, -51.064453), ylim = c(15.182421, 60.586967)) x_scale_labels <- c(80, 100, 120, 140) y_scale_labels <- c(0, 10, 20, 30, 40, 50)  # background selection area regional_native_withSLF_plot <- regional_native_withSLF_plot +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank(),     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.1),     plot.tag = element_text(face = \"bold\", size = 25)     ) +   labs(     tag = \"C\",     fill = \"zone\"     ) +   scale_x_continuous(labels = seq(from = 70, to = 140, by = 10), breaks = seq(from = 70, to = 140, by = 10), expand = c(0, 0)) +   scale_y_continuous(labels = c(-10, 0, 10, 20, 30, 40, 50), breaks = c(-10, 0, 10, 20, 30, 40, 50), expand = c(0, 0))    # background points regional_native_points_plot <- regional_native_points_plot +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank(),     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.1),     plot.tag = element_text(face = \"bold\", size = 25)     ) +   labs(tag = \"B\") +   scale_x_continuous(labels = x_scale_labels, breaks = x_scale_labels, expand = c(0, 0)) +   scale_y_continuous(labels = y_scale_labels, breaks = y_scale_labels, expand = c(0, 0))      # training presences regional_native_slf_plot  <- regional_native_slf_plot +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank(),     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.1),     plot.tag = element_text(face = \"bold\", size = 25)     ) +   labs(tag = \"A\") +   scale_x_continuous(labels = x_scale_labels, breaks = x_scale_labels, expand = c(0, 0)) +   scale_y_continuous(labels = y_scale_labels, breaks = y_scale_labels, expand = c(0, 0))    # redefine x_scale_labels <- c(-140, -120, -100, -80, -60) y_scale_labels <- c(20, 30, 40, 50, 60)  # testing presences regional_native_test_plot <- regional_native_test_plot +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"D\") +   scale_x_continuous(labels = x_scale_labels, breaks = x_scale_labels, expand = c(0, 0)) +   scale_y_continuous(labels = y_scale_labels, breaks = y_scale_labels, expand = c(0, 0)) +   theme(     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.1),     plot.tag = element_text(face = \"bold\", size = 25)   )   regional_native_patchwork <- (   (regional_native_slf_plot | regional_native_points_plot) /    (regional_native_withSLF_plot | regional_native_test_plot)    ) +   plot_annotation(     title = \"'Rn' model elements\",     subtitle = \"(A) training presences (B) background points (C) background selection area (D) test presences\"     ) +   plot_layout(widths = unit(20, \"cm\"))   # work around because collect axes not working # regional_native_patchwork <- patchwork::patchworkGrob(regional_native_patchwork) %>%  # gridExtra::grid.arrange(left = \"latitude\", bottom = \"longitude\") ggsave(   regional_native_patchwork,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"regional_native_model_v3_summary.jpg\"),   height = 10,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/070_run_regional_invaded_MaxEnt_model.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Run 'Ri.NAmerica' model trained on SLF invaded region in North America","text":"last vignette, cropped covariate layer extent regional model training area chose background points layers characterize covariates. vignette, train first regional-scale model based invaded North American range. another step toward goal analyzing realized niche Lycorma delicatula multiple spatial scales. output combined regional models compared directly global scale model determine impact climate change suitability SLF important viticultural regions. Just reiterate, hypothesize creating models multiple spatial scales, can confidence suitability predictions made specific SLF populations important viticultural regions, can predict risk specific populations spreading now climate change. also hypothesize regional-scale models, ensembled single prediction, make refined predictions global-scale model .","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/070_run_regional_invaded_MaxEnt_model.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Run 'Ri.NAmerica' model trained on SLF invaded region in North America","text":"CURRENT MODEL VERSION: v7 Note: setting global options document certain code chunks rendered final .html file. set eval = FALSE none code re-run (preventing files overwritten knitting) simply overwrite chunks plots. SDMtune run MaxEnt java via rJava package. need ensure machine proper version java installed (x32 x64) operating system. chunk sets java memory allocation (Xmx). increase memory allocation 512m (default) 2GB memory.","code":"# general tools library(tidyverse)  #data manipulation library(here) #making directory pathways easier on different instances here::here() # here() starts at the root folder of this package. ## [1] \"C:/Users/tun83449/Documents/GitHub/slfSpread\" library(devtools)  # SDMtune and dependencies library(SDMtune) # main package used to run SDMs library(dismo) # package underneath SDMtune library(rJava) # for running MaxEnt library(plotROC) # plots ROCs  # spatial data handling library(raster)  library(terra)   library(viridis) checkMaxentInstallation(verbose = TRUE) # xmx sets java memory allocation options(java.parameters = \"-Xmx2048m\")  # xss sets java stack size # options(java.parameters = c(\"-Xss2560k\", \"-Xmx2048m\"))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/070_run_regional_invaded_MaxEnt_model.html","id":"format-data-for-model","dir":"Articles","previous_headings":"","what":"1. Format Data for Model","title":"Run 'Ri.NAmerica' model trained on SLF invaded region in North America","text":"load datasets need MaxEnt models. labeled beginning object name parameter used SDMtune::train() function (x, p ). begin loading covariate data loading points datasets. env_covariates dataset labeled invaded contains raster environmental covariates used train model- covariates masked using K-G climate zones last vignette.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/070_run_regional_invaded_MaxEnt_model.html","id":"input-data--env-covariates","dir":"Articles","previous_headings":"1. Format Data for Model","what":"1.1 Input Data- env covariates","title":"Run 'Ri.NAmerica' model trained on SLF invaded region in North America","text":"CMIP6 versions covariates used projection purposes. create rasters environmental covariates, stack gather summary statistics. also shorten names exclude possible operators layer names (example, using dash symbol found interfere SDMtune making predictions tables downstream).","code":"# path to directory mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/historical_climate_rasters/chelsa2.1_30arcsec\")   # the env covariate scale used to train the model x_invaded_env_covariates_list <- list.files(path = file.path(mypath, \"v1_maxent_10km\"), pattern = \"\\\\_regional_invaded_KG.asc$\", full.names = TRUE)  %>%   # dont include Access to cities   grep(pattern = \"atc_2015\", value = TRUE, invert = TRUE)  # the scale used to make xy predictions x_global_hist_env_covariates_list <- list.files(path = file.path(mypath, \"v1_maxent_10km\"), pattern = \"\\\\.asc$\", full.names = TRUE) %>%     grep(\"bio2_1981-2010_global.asc|bio11_1981-2010_global.asc|bio12_1981-2010_global.asc|bio15_1981-2010_global.asc\", ., value = TRUE) # path to directory   mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/future_climate_rasters/chelsa2.1_30arcsec\")   # the env covariates for performing xy predictions for global slf and IVR points  # SSP126 x_global_126_env_covariates_list <- list.files(path = file.path(mypath, \"2041-2070_ssp126_GFDL\", \"v1_maxent_10km\"), pattern = \"\\\\_global.asc$\", full.names = TRUE) %>%   # dont include Access to cities   grep(pattern = \"atc_2015\", value = TRUE, invert = TRUE)  # SSP370 x_global_370_env_covariates_list <- list.files(path = file.path(mypath, \"2041-2070_ssp370_GFDL\", \"v1_maxent_10km\"), pattern = \"\\\\_global.asc$\", full.names = TRUE) %>%   # dont include Access to cities   grep(pattern = \"atc_2015\", value = TRUE, invert = TRUE)  # SSP585 x_global_585_env_covariates_list <- list.files(path = file.path(mypath, \"2041-2070_ssp585_GFDL\", \"v1_maxent_10km\"), pattern = \"\\\\_global.asc$\", full.names = TRUE) %>%   # dont include Access to cities   grep(pattern = \"atc_2015\", value = TRUE, invert = TRUE) # layer name object. Check order of layers first env_layer_names <- c(\"bio11\", \"bio12\", \"bio15\", \"bio2\") # easternUSA rasters # stack env covariates x_invaded_env_covariates <- terra::rast(x = x_invaded_env_covariates_list)  # attributes nlyr(x_invaded_env_covariates) names(x_invaded_env_covariates) minmax(x_invaded_env_covariates) # ext(x_invaded_env_covariates) # crs(x_invaded_env_covariates)  # I will change the name of the variables because they are throwing errors in SDMtune names(x_invaded_env_covariates) <- env_layer_names    # global rasters # stack env covariates x_global_hist_env_covariates <- terra::rast(x = x_global_hist_env_covariates_list)  # attributes nlyr(x_global_hist_env_covariates) names(x_global_hist_env_covariates) minmax(x_global_hist_env_covariates) # ext(x_global_hist_env_covariates) # crs(x_global_hist_env_covariates)  # I will change the name of the variables because they are throwing errors in SDMtune names(x_global_hist_env_covariates) <- env_layer_names # confirmed- SDMtune doesnt like dashes in column names (it is read as a mathematical operation) # SSP126 x_global_126_env_covariates <- terra::rast(x = x_global_126_env_covariates_list)  # attributes nlyr(x_global_126_env_covariates) names(x_global_126_env_covariates) minmax(x_global_126_env_covariates) # ext(x_global_126_env_covariates) # crs(x_global_126_env_covariates)  names(x_global_126_env_covariates) <- env_layer_names   # SSP370 x_global_370_env_covariates <- terra::rast(x = x_global_370_env_covariates_list)  # attributes nlyr(x_global_370_env_covariates) names(x_global_370_env_covariates) minmax(x_global_370_env_covariates) # ext(x_global_370_env_covariates) # crs(x_global_370_env_covariates)  names(x_global_370_env_covariates) <- env_layer_names   # SSP585 x_global_585_env_covariates <- terra::rast(x = x_global_585_env_covariates_list)  # attributes nlyr(x_global_585_env_covariates) names(x_global_585_env_covariates) minmax(x_global_585_env_covariates) # ext(x_global_585_env_covariates) # crs(x_global_585_env_covariates)  names(x_global_585_env_covariates) <- env_layer_names rm(x_invaded_env_covariates_list) rm(x_global_hist_env_covariates_list) rm(x_global_126_env_covariates_list) rm(x_global_370_env_covariates_list) rm(x_global_585_env_covariates_list)"},{"path":"https://ieco-lab.github.io/slfSpread/articles/070_run_regional_invaded_MaxEnt_model.html","id":"input-data--presences-absences-training-and-testing","dir":"Articles","previous_headings":"1. Format Data for Model","what":"1.2 Input data- presences / absences (training and testing)","title":"Run 'Ri.NAmerica' model trained on SLF invaded region in North America","text":"need also load SLF presence background points datasets created vignette 060. need combine covariates, presence background point datasets two different datasets feed MaxEnt: one training another testing model. dataset need contain point-wise values predictor covariates presence background point coordinates. SDMtune takes SWD (sample data) S4 object purposes, containing presences background points associated covariate data fed model. First, create training dataset. need perform extra edits slf presences. presences need filtered training testing datasets. filter presences invaded range North America use points train invaded model, presences invaded range Asia used validate / test model.","code":"# slf presences p_slf_points <- read.csv(file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"slf_all_coords_final_2024-08-05.csv\")) %>%   dplyr::select(-species)  # entire eastern USA background point set a_regional_invaded_background_points <- read.csv(file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_invaded_background_points_v7.csv\"))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/070_run_regional_invaded_MaxEnt_model.html","id":"model-training-object","dir":"Articles","previous_headings":"1. Format Data for Model > 1.2 Input data- presences / absences (training and testing)","what":"Model training object","title":"Run 'Ri.NAmerica' model trained on SLF invaded region in North America","text":"Now create “samples data” object SDMtune requires. usually look many records dropped save , SDMtune gives undefined warning many samples discarded. case, lost 3 presence records, acceptable. also save output used later.","code":"p_slf_invaded_train <- read.csv(file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_invaded_train_slf_presences_v7.csv\")) regional_invaded_train <- SDMtune::prepareSWD(   species = \"Lycorma delicatula\",   env = x_invaded_env_covariates,   p = p_slf_invaded_train,    a = a_regional_invaded_background_points,   verbose = TRUE # print helpful messages   )  regional_invaded_train@coords # coordinates regional_invaded_train@pa # presence / absence (background counted as absence) regional_invaded_train@data # extracted data from    # OLD method #regional_trainTest <-  SDMtune::trainValTest( #  x = regional_invaded_SWD, #  test = 0.2, #  only_presence = TRUE, #  seed = 6 #) SDMtune::swd2csv(swd = regional_invaded_train, file_name = c(   file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_invaded_train_slf_presences_with_data_v7.csv\"),   file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_invaded_background_points_with_data_v7.csv\")   ))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/070_run_regional_invaded_MaxEnt_model.html","id":"model-testing-object","dir":"Articles","previous_headings":"1. Format Data for Model > 1.2 Input data- presences / absences (training and testing)","what":"Model testing object","title":"Run 'Ri.NAmerica' model trained on SLF invaded region in North America","text":"testing / validation SWD object created fashion, except using subset presences invaded range Asia. presences selected using shapefile Japan/SK extent mask. chose test using invaded region native region Sobek-Swant et al found invaded MaxEnt models performed poorly projected native range EAB. Additionally, initial versions model performed poorly tested native range (Sobek-Swant et al, 2012).","code":"p_slf_invaded_test <- read.csv(file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_invaded_test_slf_presences_v7.csv\")) regional_invaded_test <- SDMtune::prepareSWD(   species = \"Lycorma delicatula\",   env = x_global_hist_env_covariates,    p = p_slf_invaded_test,    a = a_regional_invaded_background_points,   verbose = TRUE # print helpful messages   )  regional_invaded_test@coords # coordinates regional_invaded_test@pa # presence / absence (background counted as absence) regional_invaded_test@data # extracted data from SDMtune::swd2csv(swd = regional_invaded_test, file_name = c(   file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_invaded_test_slf_presences_with_data_v7.csv\"),   file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"NULL.csv\")   ))  # remove second copy of background data file.remove(file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"NULL.csv\"))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/070_run_regional_invaded_MaxEnt_model.html","id":"train-invaded-regional-model","dir":"Articles","previous_headings":"","what":"2. Train Invaded Regional Model","title":"Run 'Ri.NAmerica' model trained on SLF invaded region in North America","text":"First, train MaxEnt model. regional-scale models cross-validated. Cross-validation randomly selects percentage presence data training testing, without regard spatial location. process makes sense global model, fed presence data. Due spatial scale regional models, makes sense spatially separate training testing data given opportunity. use following list hyperparameters train initial model, selected via tuning global model. feature classes (fc) used (l = linear, q = quadratic, p = product, h = hinge, t = threshold) regularization multiplier (reg) set 1.5 (regularized default 1) iterations = 5000. max number iterations optimization algorithm perform stopping training. Increasing number default 500 allows algorithm make refined predictions.","code":"regional_invaded_model <- SDMtune::train(   method = \"Maxent\",   data = regional_invaded_train,   fc = \"lqpht\", # feature classes set to ALL   reg = 1.5,   iter = 5000, # number of iterations   progress = TRUE )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/070_run_regional_invaded_MaxEnt_model.html","id":"summary-statistics","dir":"Articles","previous_headings":"2. Train Invaded Regional Model","what":"Summary Statistics","title":"Run 'Ri.NAmerica' model trained on SLF invaded region in North America","text":"function produces summary statistics model. complete annotated workflow used create function, see 051_compute_MaxEnt_summary_statistics_workflow.Rmd.","code":"# output directory mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/models/slf_regional_invaded_v7\")  slfSpread::compute_MaxEnt_summary_statistics(   model.obj = regional_invaded_model,    model.name = \"regional_invaded\",    mypath = mypath,    create.dir = TRUE, # create subdirectory   env.covar.obj = x_invaded_env_covariates, # env covariates raster stacked   train.obj = regional_invaded_train, # training data used to create model   test.obj = regional_invaded_test, # data you wish to use to test the model   plot.type = c(\"cloglog\", \"logistic\"), # types of univariate and marginal response curves to be created   jk.test.type = c(\"train\", \"test\") # types of jackknife curves to be created   )"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/070_run_regional_invaded_MaxEnt_model.html","id":"create-distribution-map-for-area-of-interest","dir":"Articles","previous_headings":"3. Create Outputs for Analysis","what":"3.1 Create distribution map for area of interest","title":"Run 'Ri.NAmerica' model trained on SLF invaded region in North America","text":"Lastly, use SDMtune::predict() function predict suitability range interest. threshold map MTP, MTSS 10_percentile thresholds. retrieve specific value MTSS threshold model use define considered unsuitable raster. , reclassify mean raster anything threshold now “unsuitable”. use mean cloglog threshold iterations. create binary version mean raster, unsuitable regions, MTSS training threshold, 0, threshold 1. , can reclassify averaged raster MaxEnt predictions. load averaged prediction model reclassify raster using temporary raster layer create. raster values model predicts climate unsuitable, can plotted overtop averaged raster mask unsuitable areas also create suitability maps ssp scenarios projected 2041-2070 climate data. trained Ri.NAmerica model, now move train two regional-scale models.","code":"mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/models/slf_regional_invaded_v7\") regional_invaded_model <- read_rds(file = file.path(mypath, \"regional_invaded_model.rds\")) slfSpread::create_MaxEnt_suitability_maps(   model.obj = regional_invaded_model,   model.name = \"regional_invaded\",    mypath = mypath,    create.dir = FALSE,    env.covar.obj = x_global_hist_env_covariates,    describe.proj = \"globe_1981-2010\", # name of area or time period describe.proj to   clamp.pred = TRUE,   thresh = c(\"MTP\", \"MTSS\"),   map.thresh = TRUE, # whether thresholded versions of these maps should be created   map.thresh.extra = \"MTP\",   summary.file = file.path(mypath, \"regional_invaded_summary.csv\") ) slfSpread::create_MaxEnt_suitability_maps(   model.obj = regional_invaded_model,   model.name = \"regional_invaded\",    mypath = mypath,    create.dir = FALSE,    env.covar.obj = x_global_126_env_covariates,    describe.proj = \"globe_2041-2070_GFDL_ssp126\", # name of area or time period projected to   clamp.pred = TRUE,   thresh = c(\"MTP\", \"MTSS\"),   map.thresh = TRUE, # whether thresholded versions of these maps should be created   map.thresh.extra = \"MTP\",   summary.file = file.path(mypath, \"regional_invaded_summary.csv\") ) slfSpread::create_MaxEnt_suitability_maps(   model.obj = regional_invaded_model,   model.name = \"regional_invaded\",    mypath = mypath,    create.dir = FALSE,    env.covar.obj = x_global_370_env_covariates,    describe.proj = \"globe_2041-2070_GFDL_ssp370\", # name of area or time period projected to   clamp.pred = TRUE,   thresh = c(\"MTP\", \"MTSS\"),   map.thresh = TRUE, # whether thresholded versions of these maps should be created   map.thresh.extra = \"MTP\",   summary.file = file.path(mypath, \"regional_invaded_summary.csv\") ) slfSpread::create_MaxEnt_suitability_maps(   model.obj = regional_invaded_model,   model.name = \"regional_invaded\",    mypath = mypath,    create.dir = FALSE,    env.covar.obj = x_global_585_env_covariates,    describe.proj = \"globe_2041-2070_GFDL_ssp585\", # name of area or time period projected to   clamp.pred = TRUE,   thresh = c(\"MTP\", \"MTSS\"),   map.thresh = TRUE, # whether thresholded versions of these maps should be created   map.thresh.extra = \"MTP\",   summary.file = file.path(mypath, \"regional_invaded_summary.csv\") )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/070_run_regional_invaded_MaxEnt_model.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Run 'Ri.NAmerica' model trained on SLF invaded region in North America","text":"Elith, J., Phillips, S. J., Hastie, T., Dudík, M., Chee, Y. E., & Yates, C. J. (2011). statistical explanation MaxEnt ecologists: Statistical explanation MaxEnt. Diversity Distributions, 17(1), 43–57. https://doi.org/10.1111/j.1472-4642.2010.00725.x Feng, X. (2022). Shandongfx/nimbios_enm [HTML]. https://github.com/shandongfx/nimbios_enm (Original work published 2018). Gallien, L., Douzet, R., Pratte, S., Zimmermann, N. E., & Thuiller, W. (2012). Invasive species distribution models – violating equilibrium assumption can create new insights. Global Ecology Biogeography, 21(11), 1126–1136. https://doi.org/10.1111/j.1466-8238.2012.00768.x Maryam Bordkhani. (n.d.). Threshold rule [Online post]. Radosavljevic, ., & Anderson, R. P. (2014). Making better Maxent models species distributions: Complexity, overfitting evaluation. Journal Biogeography, 41(4), 629–643. https://doi.org/10.1111/jbi.12227 Sobek-Swant, S., Kluza, D. ., Cuddington, K., & Lyons, D. B. (2012). Potential distribution emerald ash borer: can learn ecological niche models using Maxent GARP? Forest Ecology Management, 281, 23–31. https://doi.org/10.1016/j.foreco.2012.06.017 Phillips, S. J., Anderson, R. P., & Schapire, R. E. (2006). Maximum entropy modeling species geographic distributions. Ecological Modelling, 190(3), 231–259. https://doi.org/10.1016/j.ecolmodel.2005.03.026 Steven Phillips. (2017). Brief Tutorial Maxent. http://biodiversityinformatics.amnh.org/open_source/maxent/. Steven J. Phillips, Miroslav Dudík, & Robert E. Schapire. (2023). Maxent software modeling species niches distributions (Version 3.4.3 (Java)) [Computer software]. http://biodiversityinformatics.amnh.org/open_source/maxent/. Srivastava, V., Roe, . D., Keena, M. ., Hamelin, R. C., & Griess, V. C. (2021). Oh places ’ll go: Improving species distribution modelling invasive forest pests uncertain world. Biological Invasions, 23(1), 297–349. https://doi.org/10.1007/s10530-020-02372-9 VanDerWal, J., Shoo, L. P., Graham, C., & Williams, S. E. (2009). Selecting pseudo-absence data presence-distribution modeling: far stray know? Ecological Modelling, 220(4), 589–594. https://doi.org/10.1016/j.ecolmodel.2008.11.010 Vignali, S., Barras, . G., Arlettaz, R., & Braunisch, V. (2020). SDMtune: R package tune evaluate species distribution models. Ecology Evolution, 10(20), 11488–11506. https://doi.org/10.1002/ece3.6786","code":""},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/070_run_regional_invaded_MaxEnt_model.html","id":"predict-suitability-for-known-slf-presences","dir":"Articles","previous_headings":"Appendix","what":"3.2 Predict suitability for known SLF presences","title":"Run 'Ri.NAmerica' model trained on SLF invaded region in North America","text":"repeat process CMIP6 data.","code":"mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/models/slf_regional_invaded_v7\")  # slf presence data slf_presences <- read.csv(file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"slf_all_coords_final_2024-08-05.csv\")) %>%   dplyr::select(-species) slfSpread::predict_xy_suitability(   xy.obj = slf_presences,   xy.type = \"Lycorma delicatula\",   env.covar.obj = x_global_hist_env_covariates,   model.obj = regional_invaded_model,   mypath = mypath,   predict.type = c(\"cloglog\", \"logistic\"),   output.name = \"regional_invaded_slf_all_coords_1981-2010\" ) slfSpread::predict_xy_suitability(   xy.obj = slf_presences,   xy.type = \"Lycorma delicatula\",   env.covar.obj = x_global_126_env_covariates,   model.obj = regional_invaded_model,   mypath = mypath,   predict.type = c(\"cloglog\", \"logistic\"),   output.name = \"regional_invaded_slf_all_coords_2041-2070_GFDL_ssp126\" ) slfSpread::predict_xy_suitability(   xy.obj = slf_presences,   xy.type = \"Lycorma delicatula\",   env.covar.obj = x_global_370_env_covariates,   model.obj = regional_invaded_model,   mypath = mypath,   predict.type = c(\"cloglog\", \"logistic\"),   output.name = \"regional_invaded_slf_all_coords_2041-2070_GFDL_ssp370\" ) slfSpread::predict_xy_suitability(   xy.obj = slf_presences,   xy.type = \"Lycorma delicatula\",   env.covar.obj = x_global_585_env_covariates,   model.obj = regional_invaded_model,   mypath = mypath,   predict.type = c(\"cloglog\", \"logistic\"),   output.name = \"regional_invaded_slf_all_coords_2041-2070_GFDL_ssp585\" )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/070_run_regional_invaded_MaxEnt_model.html","id":"predict-suibability-for-ivr-regions","dir":"Articles","previous_headings":"Appendix","what":"3.3 Predict suibability for IVR regions","title":"Run 'Ri.NAmerica' model trained on SLF invaded region in North America","text":"perform action , locations important wineries around world. SSP scenarios","code":"mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/models/slf_regional_invaded_v7\")  # load in all IVR points load(file = file.path(here::here(), \"data\", \"wineries.rda\"))   IVR_regions <- wineries %>%   dplyr::select(x, y) slfSpread::predict_xy_suitability(   xy.obj = IVR_regions,   xy.type = \"IVR regions\",   env.covar.obj = x_global_hist_env_covariates,   model.obj = regional_invaded_model,   mypath = mypath,   predict.type = c(\"cloglog\", \"logistic\"),   output.name = \"regional_invaded_wineries_1981-2010\",   buffer.pred = TRUE ) slfSpread::predict_xy_suitability(   xy.obj = IVR_regions,   xy.type = \"IVR regions\",   env.covar.obj = x_global_126_env_covariates,   model.obj = regional_invaded_model,   mypath = mypath,   predict.type = c(\"cloglog\", \"logistic\"),   output.name = \"regional_invaded_wineries_2041-2070_GFDL_ssp126\",   buffer.pred = TRUE ) slfSpread::predict_xy_suitability(   xy.obj = IVR_regions,   xy.type = \"IVR regions\",   env.covar.obj = x_global_370_env_covariates,   model.obj = regional_invaded_model,   mypath = mypath,   predict.type = c(\"cloglog\", \"logistic\"),   output.name = \"regional_invaded_wineries_2041-2070_GFDL_ssp370\",   buffer.pred = TRUE ) slfSpread::predict_xy_suitability(   xy.obj = IVR_regions,   xy.type = \"IVR regions\",   env.covar.obj = x_global_585_env_covariates,   model.obj = regional_invaded_model,   mypath = mypath,   predict.type = c(\"cloglog\", \"logistic\"),   output.name = \"regional_invaded_wineries_2041-2070_GFDL_ssp585\",   buffer.pred = TRUE )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/080_run_regional_invaded_asian_MaxEnt_model.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Run 'Ri.Asia' model trained on SLF invaded range in Japan and South Korea","text":"vignette trains second regional-scale model, Ri.Asia model, based invaded range east Asia. vignette follows structure vignette 070. next vignette, train final regional-scale model based native range SLF east Asia.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/080_run_regional_invaded_asian_MaxEnt_model.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Run 'Ri.Asia' model trained on SLF invaded range in Japan and South Korea","text":"CURRENT MODEL VERSION: v2 Note: setting global options document certain code chunks rendered final .html file. set eval = FALSE none code re-run (preventing files overwritten knitting) simply overwrite chunks plots. SDMtune run MaxEnt java via rJava package. need ensure machine proper version java installed (x32 x64) operating system. chunk sets java memory allocation (Xmx). increase memory allocation 512m (default) 2GB memory.","code":"# general tools library(tidyverse)  #data manipulation library(here) #making directory pathways easier on different instances here::here() # here::here() starts at the root folder of this package. ## [1] \"C:/Users/tun83449/Documents/GitHub/slfSpread\" library(devtools)  # SDMtune and dependencies library(SDMtune) # main package used to run SDMs library(dismo) # package underneath SDMtune library(rJava) # for running MaxEnt library(plotROC) # plots ROCs  # spatial data handling library(raster)  library(terra)   library(viridis) checkMaxentInstallation(verbose = TRUE) # xmx sets java memory allocation options(java.parameters = \"-Xmx2048m\")  # xss sets java stack size # options(java.parameters = c(\"-Xss2560k\", \"-Xmx2048m\"))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/080_run_regional_invaded_asian_MaxEnt_model.html","id":"format-data-for-model","dir":"Articles","previous_headings":"","what":"1. Format Data for Model","title":"Run 'Ri.Asia' model trained on SLF invaded range in Japan and South Korea","text":"load datasets need MaxEnt models. labeled beginning object name parameter used SDMtune::train() function (x, p ). begin loading covariate data loading points datasets. env_covariates dataset labeled invaded_asian contains raster environmental covariates used train model- covariates masked using K-G climate zones last vignette.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/080_run_regional_invaded_asian_MaxEnt_model.html","id":"input-data--env-covariates","dir":"Articles","previous_headings":"1. Format Data for Model","what":"1.1 Input Data- env covariates","title":"Run 'Ri.Asia' model trained on SLF invaded range in Japan and South Korea","text":"CMIP6 versions covariates used projection purposes. create rasters environmental covariates, stack gather summary statistics. also shorten names exclude possible operators layer names (example, using dash symbol found interfere SDMtune making predictions tables downstream).","code":"# path to directory mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/historical_climate_rasters/chelsa2.1_30arcsec\")   # the env covariate scale used to train the model x_invaded_asian_env_covariates_list <- list.files(path = file.path(mypath, \"v1_maxent_10km\"), pattern = \"\\\\_regional_invaded_asian_KG.asc$\", full.names = TRUE)  %>%   # dont include Access to cities   grep(pattern = \"atc_2015\", value = TRUE, invert = TRUE)  # the scale used to make xy predictions x_global_hist_env_covariates_list <- list.files(path = file.path(mypath, \"v1_maxent_10km\"), pattern = \"\\\\.asc$\", full.names = TRUE) %>%     grep(\"bio2_1981-2010_global.asc|bio11_1981-2010_global.asc|bio12_1981-2010_global.asc|bio15_1981-2010_global.asc\", ., value = TRUE) # path to directory   mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/future_climate_rasters/chelsa2.1_30arcsec\")  # the env covariates for performing xy predictions for global slf and IVR points  # SSP126 x_global_126_env_covariates_list <- list.files(path = file.path(mypath, \"2041-2070_ssp126_GFDL\", \"v1_maxent_10km\"), pattern = \"\\\\_global.asc$\", full.names = TRUE) %>%   # dont include Access to cities   grep(pattern = \"atc_2015\", value = TRUE, invert = TRUE)  # SSP370 x_global_370_env_covariates_list <- list.files(path = file.path(mypath, \"2041-2070_ssp370_GFDL\", \"v1_maxent_10km\"), pattern = \"\\\\_global.asc$\", full.names = TRUE) %>%   # dont include Access to cities   grep(pattern = \"atc_2015\", value = TRUE, invert = TRUE)  # SSP585 x_global_585_env_covariates_list <- list.files(path = file.path(mypath, \"2041-2070_ssp585_GFDL\", \"v1_maxent_10km\"), pattern = \"\\\\_global.asc$\", full.names = TRUE) %>%   # dont include Access to cities   grep(pattern = \"atc_2015\", value = TRUE, invert = TRUE) # layer name object. Check order of layers first env_layer_names <- c(\"bio11\", \"bio12\", \"bio15\", \"bio2\") # easternUSA rasters # stack env covariates x_invaded_asian_env_covariates <- terra::rast(x = x_invaded_asian_env_covariates_list)  # attributes nlyr(x_invaded_asian_env_covariates) names(x_invaded_asian_env_covariates) minmax(x_invaded_asian_env_covariates) # ext(x_invaded_asian_env_covariates) # crs(x_invaded_asian_env_covariates)  # I will change the name of the variables because they are throwing errors in SDMtune names(x_invaded_asian_env_covariates) <- env_layer_names    # global rasters # stack env covariates x_global_hist_env_covariates <- terra::rast(x = x_global_hist_env_covariates_list)  # attributes nlyr(x_global_hist_env_covariates) names(x_global_hist_env_covariates) minmax(x_global_hist_env_covariates) # ext(x_global_hist_env_covariates) # crs(x_global_hist_env_covariates)  # I will change the name of the variables because they are throwing errors in SDMtune names(x_global_hist_env_covariates) <- env_layer_names # confirmed- SDMtune doesnt like dashes in column names (it is read as a mathematical operation) # SSP126 x_global_126_env_covariates <- terra::rast(x = x_global_126_env_covariates_list)  # attributes nlyr(x_global_126_env_covariates) names(x_global_126_env_covariates) minmax(x_global_126_env_covariates) # ext(x_global_126_env_covariates) # crs(x_global_126_env_covariates)  names(x_global_126_env_covariates) <- env_layer_names   # SSP370 x_global_370_env_covariates <- terra::rast(x = x_global_370_env_covariates_list)  # attributes nlyr(x_global_370_env_covariates) names(x_global_370_env_covariates) minmax(x_global_370_env_covariates) # ext(x_global_370_env_covariates) # crs(x_global_370_env_covariates)  names(x_global_370_env_covariates) <- env_layer_names   # SSP585 x_global_585_env_covariates <- terra::rast(x = x_global_585_env_covariates_list)  # attributes nlyr(x_global_585_env_covariates) names(x_global_585_env_covariates) minmax(x_global_585_env_covariates) # ext(x_global_585_env_covariates) # crs(x_global_585_env_covariates)  names(x_global_585_env_covariates) <- env_layer_names rm(x_invaded_asian_env_covariates_list) rm(x_global_hist_env_covariates_list) rm(x_global_126_env_covariates_list) rm(x_global_370_env_covariates_list) rm(x_global_585_env_covariates_list)"},{"path":"https://ieco-lab.github.io/slfSpread/articles/080_run_regional_invaded_asian_MaxEnt_model.html","id":"input-data--presences-absences-training-and-testing","dir":"Articles","previous_headings":"1. Format Data for Model","what":"1.2 Input data- presences / absences (training and testing)","title":"Run 'Ri.Asia' model trained on SLF invaded range in Japan and South Korea","text":"need also load SLF presence background points datasets created vignette 060. showed process selecting presences last vignette, time just load presences dataset created vignette 060 (regional model setup).","code":"# slf presences p_slf_points <- read.csv(file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"slf_all_coords_final_2024-08-05.csv\")) %>%   dplyr::select(-species)  # training presences p_slf_points_invaded_asian_train <- read.csv(   file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_invaded_asian_train_slf_presences_v2.csv\")   ) # test presences p_slf_points_invaded_asian_test <- read.csv(   file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_invaded_asian_test_slf_presences_v2.csv\")   )  # entire eastern USA background point set a_regional_invaded_asian_background_points <- read.csv(   file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_invaded_asian_background_points_v2.csv\")   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/080_run_regional_invaded_asian_MaxEnt_model.html","id":"model-training-object","dir":"Articles","previous_headings":"1. Format Data for Model > 1.2 Input data- presences / absences (training and testing)","what":"Model training object","title":"Run 'Ri.Asia' model trained on SLF invaded range in Japan and South Korea","text":"Now create “samples data” object SDMtune requires. usually look many records dropped save , SDMtune gives undefined warning many samples discarded. case, lost 3 presence records, acceptable. also save output used later.","code":"regional_invaded_asian_train <- SDMtune::prepareSWD(   species = \"Lycorma delicatula\",   env = x_global_hist_env_covariates,   p = p_slf_points_invaded_asian_train,    a = a_regional_invaded_asian_background_points,   verbose = TRUE # print helpful messages   )  regional_invaded_asian_train@coords # coordinates regional_invaded_asian_train@pa # presence / absence (background counted as absence) regional_invaded_asian_train@data # extracted data from SDMtune::swd2csv(swd = regional_invaded_asian_train, file_name = c(   file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_invaded_asian_train_slf_presences_with_data_v2.csv\"),   file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_invaded_asian_background_points_with_data_v2.csv\")   ))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/080_run_regional_invaded_asian_MaxEnt_model.html","id":"model-testing-object","dir":"Articles","previous_headings":"1. Format Data for Model > 1.2 Input data- presences / absences (training and testing)","what":"Model testing object","title":"Run 'Ri.Asia' model trained on SLF invaded range in Japan and South Korea","text":"testing / validation SWD object created fashion, except using presences invaded range North America.","code":"regional_invaded_asian_test <- SDMtune::prepareSWD(   species = \"Lycorma delicatula\",   env = x_global_hist_env_covariates,    p = p_slf_points_invaded_asian_test,    a = a_regional_invaded_asian_background_points,   verbose = TRUE # print helpful messages   )  regional_invaded_asian_test@coords # coordinates regional_invaded_asian_test@pa # presence / absence (background counted as absence) regional_invaded_asian_test@data # extracted data from SDMtune::swd2csv(swd = regional_invaded_asian_test, file_name = c(   file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_invaded_asian_test_slf_presences_with_data_v2.csv\"),   file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"NULL.csv\")   ))  # remove second copy of background data points file.remove(file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"NULL.csv\"))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/080_run_regional_invaded_asian_MaxEnt_model.html","id":"train-invaded-regional-model","dir":"Articles","previous_headings":"","what":"2. Train Invaded Regional Model","title":"Run 'Ri.Asia' model trained on SLF invaded range in Japan and South Korea","text":"First, train maxEnt model. regional scale model cross-validated. Cross-validation randomly selects percentage presence data training testing, without regard spatial location. process makes sense global model, fed presence data. Due spatial scale regional models, makes sense spatially separate training testing data given opportunity. use following list hyperparameters train initial model, selected via tuning global model. feature classes (fc) used (l = linear, q = quadratic, p = product, h = hinge, t = threshold) regularization multiplier (reg) set 1.5 (regularized default 1) iterations = 5000. max number iterations optimization algorithm perform stopping training. Increasing number default 500 allows algorithm make refined predictions.","code":"regional_invaded_asian_model <- SDMtune::train(   method = \"Maxent\",   data = regional_invaded_asian_train,   fc = \"lqpht\", # feature classes set to ALL   reg = 1.5,   iter = 5000, # number of iterations   progress = TRUE )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/080_run_regional_invaded_asian_MaxEnt_model.html","id":"summary-statistics","dir":"Articles","previous_headings":"2. Train Invaded Regional Model","what":"Summary Statistics","title":"Run 'Ri.Asia' model trained on SLF invaded range in Japan and South Korea","text":"function produces summary statistics model. complete annotated workflow used create function, see 051_compute_MaxEnt_summary_statistics_workflow.Rmd.","code":"# output directory mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/models/slf_regional_invaded_asian_v2\")  slfSpread::compute_MaxEnt_summary_statistics(   model.obj = regional_invaded_asian_model,    model.name = \"regional_invaded_asian\",    mypath = mypath,    create.dir = TRUE, # create subdirectory   env.covar.obj = x_invaded_asian_env_covariates, # env covariates raster stacked   train.obj = regional_invaded_asian_train, # training data used to create model   test.obj = regional_invaded_asian_test, # data you wish to use to test the model   plot.type = c(\"cloglog\", \"logistic\"), # types of univariate and marginal response curves to be created   jk.test.type = c(\"train\", \"test\") # types of jackknife curves to be created    )"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/080_run_regional_invaded_asian_MaxEnt_model.html","id":"create-distribution-map-for-area-of-interest","dir":"Articles","previous_headings":"3. Create Outputs for Analysis","what":"3.1 Create distribution map for area of interest","title":"Run 'Ri.Asia' model trained on SLF invaded range in Japan and South Korea","text":"Lastly, use SDMtune::predict() function predict suitability range interest. threshold map MTP, MTSS 10_percentile thresholds. workflow function wrapped function create_MaxEnt_suitability_maps(). retrieve specific value MTSS threshold model use define considered unsuitable raster. , reclassify mean raster anything threshold now “unsuitable”. use mean cloglog threshold iterations. create binary version mean raster, unsuitable regions, MTSS training threshold, 0, threshold 1. , can reclassify averaged raster MaxEnt predictions. load averaged prediction model reclassify raster using temporary raster layer create. raster values model predicts climate unsuitable, can plotted overtop averaged raster mask unsuitable areas also create suitability maps projected 2041-2070 climate data. Ri.Asia model trained, now move train final regional-scale model based native range east Asia.","code":"mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/models/slf_regional_invaded_asian_v2\") regional_invaded_asian_model <- read_rds(file = file.path(mypath, \"regional_invaded_asian_model.rds\")) slfSpread::create_MaxEnt_suitability_maps(   model.obj = regional_invaded_asian_model,   model.name = \"regional_invaded_asian\",    mypath = mypath,    create.dir = FALSE,    env.covar.obj = x_global_hist_env_covariates,    describe.proj = \"globe_1981-2010\", # name of area or time period describe.proj to   clamp.pred = TRUE,   map.thresh = TRUE, # whether thresholded versions of these maps should be created   map.thresh.extra = \"MTP\",   thresh = c(\"MTP\", \"10_percentile\", \"MTSS\"),   summary.file = file.path(mypath, \"regional_invaded_asian_summary.csv\") ) slfSpread::create_MaxEnt_suitability_maps(   model.obj = regional_invaded_asian_model,   model.name = \"regional_invaded_asian\",    mypath = mypath,    create.dir = FALSE,    env.covar.obj = x_global_126_env_covariates,    describe.proj = \"globe_2041-2070_GFDL_ssp126\", # name of area or time period projected to   clamp.pred = TRUE,   thresh = c(\"MTP\", \"10_percentile\", \"MTSS\"),   map.thresh = TRUE, # whether thresholded versions of these maps should be created   map.thresh.extra = \"MTP\",   summary.file = file.path(mypath, \"regional_invaded_asian_summary.csv\") ) slfSpread::create_MaxEnt_suitability_maps(   model.obj = regional_invaded_asian_model,   model.name = \"regional_invaded_asian\",    mypath = mypath,    create.dir = FALSE,    env.covar.obj = x_global_370_env_covariates,    describe.proj = \"globe_2041-2070_GFDL_ssp370\", # name of area or time period projected to   clamp.pred = TRUE,   thresh = c(\"MTP\", \"10_percentile\", \"MTSS\"),   map.thresh = TRUE, # whether thresholded versions of these maps should be created   map.thresh.extra = \"MTP\",   summary.file = file.path(mypath, \"regional_invaded_asian_summary.csv\") ) slfSpread::create_MaxEnt_suitability_maps(   model.obj = regional_invaded_asian_model,   model.name = \"regional_invaded_asian\",    mypath = mypath,    create.dir = FALSE,    env.covar.obj = x_global_585_env_covariates,    describe.proj = \"globe_2041-2070_GFDL_ssp585\", # name of area or time period projected to   clamp.pred = TRUE,   thresh = c(\"MTP\", \"10_percentile\", \"MTSS\"),   map.thresh = TRUE, # whether thresholded versions of these maps should be created   map.thresh.extra = \"MTP\",   summary.file = file.path(mypath, \"regional_invaded_asian_summary.csv\") )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/080_run_regional_invaded_asian_MaxEnt_model.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Run 'Ri.Asia' model trained on SLF invaded range in Japan and South Korea","text":"Elith, J., Phillips, S. J., Hastie, T., Dudík, M., Chee, Y. E., & Yates, C. J. (2011). statistical explanation MaxEnt ecologists: Statistical explanation MaxEnt. Diversity Distributions, 17(1), 43–57. https://doi.org/10.1111/j.1472-4642.2010.00725.x Feng, X. (2022). Shandongfx/nimbios_enm [HTML]. https://github.com/shandongfx/nimbios_enm (Original work published 2018). Gallien, L., Douzet, R., Pratte, S., Zimmermann, N. E., & Thuiller, W. (2012). Invasive species distribution models – violating equilibrium assumption can create new insights. Global Ecology Biogeography, 21(11), 1126–1136. https://doi.org/10.1111/j.1466-8238.2012.00768.x Maryam Bordkhani. (n.d.). Threshold rule [Online post]. Radosavljevic, ., & Anderson, R. P. (2014). Making better Maxent models species distributions: Complexity, overfitting evaluation. Journal Biogeography, 41(4), 629–643. https://doi.org/10.1111/jbi.12227 Sobek-Swant, S., Kluza, D. ., Cuddington, K., & Lyons, D. B. (2012). Potential distribution emerald ash borer: can learn ecological niche models using Maxent GARP? Forest Ecology Management, 281, 23–31. https://doi.org/10.1016/j.foreco.2012.06.017 Phillips, S. J., Anderson, R. P., & Schapire, R. E. (2006). Maximum entropy modeling species geographic distributions. Ecological Modelling, 190(3), 231–259. https://doi.org/10.1016/j.ecolmodel.2005.03.026 Steven Phillips. (2017). Brief Tutorial Maxent. http://biodiversityinformatics.amnh.org/open_source/maxent/. Steven J. Phillips, Miroslav Dudík, & Robert E. Schapire. (2023). Maxent software modeling species niches distributions (Version 3.4.3 (Java)) [Computer software]. http://biodiversityinformatics.amnh.org/open_source/maxent/. Srivastava, V., Roe, . D., Keena, M. ., Hamelin, R. C., & Griess, V. C. (2021). Oh places ’ll go: Improving species distribution modelling invasive forest pests uncertain world. Biological Invasions, 23(1), 297–349. https://doi.org/10.1007/s10530-020-02372-9 VanDerWal, J., Shoo, L. P., Graham, C., & Williams, S. E. (2009). Selecting pseudo-absence data presence-distribution modeling: far stray know? Ecological Modelling, 220(4), 589–594. https://doi.org/10.1016/j.ecolmodel.2008.11.010 Vignali, S., Barras, . G., Arlettaz, R., & Braunisch, V. (2020). SDMtune: R package tune evaluate species distribution models. Ecology Evolution, 10(20), 11488–11506. https://doi.org/10.1002/ece3.6786","code":""},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/080_run_regional_invaded_asian_MaxEnt_model.html","id":"predict-suitability-for-all-slf-presences","dir":"Articles","previous_headings":"Appendix","what":"3.2 Predict suitability for all SLF presences","title":"Run 'Ri.Asia' model trained on SLF invaded range in Japan and South Korea","text":"get projected suitability values, calculated cloglog scale (0 1) SLF presence points. suitability values added back original data frame saved. First, use SDMtune::prepareSWD() extract raster values layer used build model. save output. data analysis, create scatter plot suitability values global vs regional models. repeat process CMIP6 data.","code":"mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/models/slf_regional_invaded_asian_v2\")  # slf presence data slf_presences <- read.csv(file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"slf_all_coords_final_2024-08-05.csv\")) %>%   dplyr::select(-species) slfSpread::predict_xy_suitability(   xy.obj = slf_presences,   xy.type = \"Lycorma delicatula\",   env.covar.obj = x_global_hist_env_covariates,   model.obj = regional_invaded_asian_model,   mypath = mypath,   predict.type = c(\"cloglog\", \"logistic\"),   output.name = \"regional_invaded_asian_slf_all_coords_1981-2010\" ) slfSpread::predict_xy_suitability(   xy.obj = slf_presences,   xy.type = \"Lycorma delicatula\",   env.covar.obj = x_global_126_env_covariates,   model.obj = regional_invaded_asian_model,   mypath = mypath,   predict.type = c(\"cloglog\", \"logistic\"),   output.name = \"regional_invaded_asian_slf_all_coords_2041-2070_GFDL_ssp126\" ) slfSpread::predict_xy_suitability(   xy.obj = slf_presences,   xy.type = \"Lycorma delicatula\",   env.covar.obj = x_global_370_env_covariates,   model.obj = regional_invaded_asian_model,   mypath = mypath,   predict.type = c(\"cloglog\", \"logistic\"),   output.name = \"regional_invaded)regional_native_model_asian_slf_all_coords_2041-2070_GFDL_ssp370\" ) slfSpread::predict_xy_suitability(   xy.obj = slf_presences,   xy.type = \"Lycorma delicatula\",   env.covar.obj = x_global_585_env_covariates,   model.obj = regional_invaded_asian_model,   mypath = mypath,   predict.type = c(\"cloglog\", \"logistic\"),   output.name = \"regional_invaded_asian_slf_all_coords_2041-2070_GFDL_ssp585\" )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/080_run_regional_invaded_asian_MaxEnt_model.html","id":"predict-suibability-for-ivr-regions","dir":"Articles","previous_headings":"Appendix","what":"3.3 Predict suibability for IVR regions","title":"Run 'Ri.Asia' model trained on SLF invaded range in Japan and South Korea","text":"perform action , locations important wineries around world. SSP scenarios","code":"mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/models/slf_regional_invaded_asian_v2\")  # load in all IVR points load(file = file.path(here::here(), \"data\", \"wineries.rda\"))   IVR_regions <- wineries %>%   dplyr::select(x, y) slfSpread::predict_xy_suitability(   xy.obj = IVR_regions,   xy.type = \"IVR regions\",   env.covar.obj = x_global_hist_env_covariates,   model.obj = regional_invaded_asian_model,   mypath = mypath,   predict.type = c(\"cloglog\", \"logistic\"),   output.name = \"regional_invaded_asian_wineries_1981-2010\",   buffer.pred = TRUE ) slfSpread::predict_xy_suitability(   xy.obj = IVR_regions,   xy.type = \"IVR regions\",   env.covar.obj = x_global_126_env_covariates,   model.obj = regional_invaded_asian_model,   mypath = mypath,   predict.type = c(\"cloglog\", \"logistic\"),   output.name = \"regional_invaded_asian_wineries_2041-2070_GFDL_ssp126\",   buffer.pred = TRUE ) slfSpread::predict_xy_suitability(   xy.obj = IVR_regions,   xy.type = \"IVR regions\",   env.covar.obj = x_global_370_env_covariates,   model.obj = regional_invaded_asian_model,   mypath = mypath,   predict.type = c(\"cloglog\", \"logistic\"),   output.name = \"regional_invaded_asian_wineries_2041-2070_GFDL_ssp370\",   buffer.pred = TRUE ) slfSpread::predict_xy_suitability(   xy.obj = IVR_regions,   xy.type = \"IVR regions\",   env.covar.obj = x_global_585_env_covariates,   model.obj = regional_invaded_asian_model,   mypath = mypath,   predict.type = c(\"cloglog\", \"logistic\"),   output.name = \"regional_invaded_wineries_2041-2070_GFDL_ssp585\",   buffer.pred = TRUE )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/090_run_regional_native_MaxEnt_model.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Run 'Rn' model trained on SLF native range in east Asia","text":"vignette trains last regional-scale model, Rn model, based native range SLF east Asia. vignette follows structure last two vignettes trains last regional-scale model.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/090_run_regional_native_MaxEnt_model.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Run 'Rn' model trained on SLF native range in east Asia","text":"CURRENT MODEL VERSION: v3 Note: setting global options document certain code chunks rendered final .html file. set eval = FALSE none code re-run (preventing files overwritten knitting) simply overwrite chunks plots. SDMtune run MaxEnt java via rJava package. need ensure machine proper version java installed (x32 x64) operating system. chunk sets java memory allocation (Xmx). increase memory allocation 512m (default) 2GB memory.","code":"# general tools library(tidyverse)  #data manipulation library(here) #making directory pathways easier on different instances here::here() # here::here() starts at the root folder of this package. ## [1] \"C:/Users/tun83449/Documents/GitHub/slfSpread\" library(devtools)  # SDMtune and dependencies library(SDMtune) # main package used to run SDMs library(dismo) # package underneath SDMtune library(rJava) # for running MaxEnt library(plotROC) # plots ROCs  # spatial data handling library(raster)  library(terra)   library(viridis) checkMaxentInstallation(verbose = TRUE) # xmx sets java memory allocation options(java.parameters = \"-Xmx2048m\")  # xss sets java stack size # options(java.parameters = c(\"-Xss2560k\", \"-Xmx2048m\"))"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/090_run_regional_native_MaxEnt_model.html","id":"input-data--env-covariates","dir":"Articles","previous_headings":"1. Format Data for native regional Model","what":"Input Data- env covariates","title":"Run 'Rn' model trained on SLF native range in east Asia","text":"load datasets need MaxEnt models. labeled beginning object name parameter used maxent() function (x, p ). begin loading covariate data loading points datasets. env_covariates dataset labeled native contains raster environmental covariates used train model- covariates masked using K-G climate zones last vignette. CMIP6 versions covariates used projection purposes. create rasters environmental covariates, stack gather summary statistics. also shorten names exclude possible operators layer names (example, using dash symbol found interfere SDMtune making predictions tables downstream).","code":"# path to directory mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/historical_climate_rasters/chelsa2.1_30arcsec\")   # the env covariate scale used to train the model x_native_env_covariates_list <- list.files(path = file.path(mypath, \"v1_maxent_10km\"), pattern = \"\\\\_regional_native_KG.asc$\", full.names = TRUE) %>%   # dont include Access to cities   grep(pattern = \"atc_2015\", value = TRUE, invert = TRUE)  # the scale used to make xy predictions x_global_hist_env_covariates_list <- list.files(path = file.path(mypath, \"v1_maxent_10km\"), pattern = \"\\\\.asc$\", full.names = TRUE) %>%     grep(\"bio2_1981-2010_global.asc|bio11_1981-2010_global.asc|bio12_1981-2010_global.asc|bio15_1981-2010_global.asc\", ., value = TRUE) # path to directory   mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/future_climate_rasters/chelsa2.1_30arcsec\")  # the env covariates for performing xy predictions for global slf and IVR points  # SSP126 x_global_126_env_covariates_list <- list.files(path = file.path(mypath, \"2041-2070_ssp126_GFDL\", \"v1_maxent_10km\"), pattern = \"\\\\_global.asc$\", full.names = TRUE) %>%   # dont include Access to cities   grep(pattern = \"atc_2015\", value = TRUE, invert = TRUE)  # SSP370 x_global_370_env_covariates_list <- list.files(path = file.path(mypath, \"2041-2070_ssp370_GFDL\", \"v1_maxent_10km\"), pattern = \"\\\\_global.asc$\", full.names = TRUE) %>%   # dont include Access to cities   grep(pattern = \"atc_2015\", value = TRUE, invert = TRUE)  # SSP585 x_global_585_env_covariates_list <- list.files(path = file.path(mypath, \"2041-2070_ssp585_GFDL\", \"v1_maxent_10km\"), pattern = \"\\\\_global.asc$\", full.names = TRUE) %>%   # dont include Access to cities   grep(pattern = \"atc_2015\", value = TRUE, invert = TRUE) # layer name object. Check order of layers first env_layer_names <- c(\"bio11\", \"bio12\", \"bio15\", \"bio2\") # native range rasters # stack env covariates x_native_env_covariates <- terra::rast(x = x_native_env_covariates_list)  # attributes nlyr(x_native_env_covariates) names(x_native_env_covariates) minmax(x_native_env_covariates) # ext(x_native_env_covariates) # crs(x_native_env_covariates)  # I will change the name of the variables because they are throwing errors in SDMtune names(x_native_env_covariates) <- env_layer_names    # global rasters # stack env covariates x_global_hist_env_covariates <- terra::rast(x = x_global_hist_env_covariates_list)  # attributes nlyr(x_global_hist_env_covariates) names(x_global_hist_env_covariates) minmax(x_global_hist_env_covariates) # ext(x_global_hist_env_covariates) # crs(x_global_hist_env_covariates)  # I will change the name of the variables because they are throwing errors in SDMtune names(x_global_hist_env_covariates) <- env_layer_names # confirmed- SDMtune doesnt like dashes in column names (it is read as a mathematical operation) # SSP126 x_global_126_env_covariates <- terra::rast(x = x_global_126_env_covariates_list)  # attributes nlyr(x_global_126_env_covariates) names(x_global_126_env_covariates) minmax(x_global_126_env_covariates) # ext(x_global_126_env_covariates) # crs(x_global_126_env_covariates)  names(x_global_126_env_covariates) <- env_layer_names   # SSP370 x_global_370_env_covariates <- terra::rast(x = x_global_370_env_covariates_list)  # attributes nlyr(x_global_370_env_covariates) names(x_global_370_env_covariates) minmax(x_global_370_env_covariates) # ext(x_global_370_env_covariates) # crs(x_global_370_env_covariates)  names(x_global_370_env_covariates) <- env_layer_names   # SSP585 x_global_585_env_covariates <- terra::rast(x = x_global_585_env_covariates_list)  # attributes nlyr(x_global_585_env_covariates) names(x_global_585_env_covariates) minmax(x_global_585_env_covariates) # ext(x_global_585_env_covariates) # crs(x_global_585_env_covariates)  names(x_global_585_env_covariates) <- env_layer_names rm(x_native_env_covariates_list) rm(x_global_hist_env_covariates_list) rm(x_global_126_env_covariates_list) rm(x_global_370_env_covariates_list) rm(x_global_585_env_covariates_list)"},{"path":"https://ieco-lab.github.io/slfSpread/articles/090_run_regional_native_MaxEnt_model.html","id":"input-data--presences-absences-training-and-testing","dir":"Articles","previous_headings":"1. Format Data for native regional Model","what":"1.2 Input data- presences / absences (training and testing)","title":"Run 'Rn' model trained on SLF native range in east Asia","text":"need also load SLF presence dataset created vignette 030 background points dataset created vignette 040.","code":"# slf presences p_slf_points <- read.csv(file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"slf_all_coords_final_2024-08-05.csv\")) %>%   dplyr::select(-species)  # training presences p_slf_points_native_train <- read.csv(   file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_native_train_slf_presences_v3.csv\")   ) # test presences p_slf_points_native_test <- read.csv(   file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_native_test_slf_presences_v3.csv\")   )  # entire eastern USA background point set a_regional_native_background_points <- read.csv(   file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_native_background_points_v3.csv\")   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/090_run_regional_native_MaxEnt_model.html","id":"model-training-object","dir":"Articles","previous_headings":"1. Format Data for native regional Model > 1.2 Input data- presences / absences (training and testing)","what":"Model Training object","title":"Run 'Rn' model trained on SLF native range in east Asia","text":"Now create “samples data” object SDMtune requires.","code":"regional_native_train <- SDMtune::prepareSWD(   species = \"Lycorma delicatula\",   env = x_native_env_covariates,   p = p_slf_points_native_train,    a = a_regional_native_background_points,   verbose = TRUE # print helpful messages   )  regional_native_train@coords # coordinates regional_native_train@pa # presence / absence (background counted as absence) regional_native_train@data # extracted data from SDMtune::swd2csv(swd = regional_native_train, file_name = c(   file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_native_train_slf_presences_with_data_v3.csv\"),   file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_native_background_points_with_data_v3.csv\")   ))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/090_run_regional_native_MaxEnt_model.html","id":"model-testing-object","dir":"Articles","previous_headings":"1. Format Data for native regional Model > 1.2 Input data- presences / absences (training and testing)","what":"Model testing object","title":"Run 'Rn' model trained on SLF native range in east Asia","text":"model tested using presences N America.","code":"regional_native_test <- SDMtune::prepareSWD(   species = \"Lycorma delicatula\",   env = x_global_hist_env_covariates, # need the global covariates for China and N America   p = p_slf_points_native_test,    a = a_regional_native_background_points,   verbose = TRUE # print helpful messages   )  regional_native_test@coords # coordinates regional_native_test@pa # presence / absence (background counted as absence) regional_native_test@data # extracted data from SDMtune::swd2csv(swd = regional_native_test, file_name = c(   file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_native_test_slf_presences_with_data_v3.csv\"),   file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"NULL.csv\")   ))  # remove second copy of background data points file.remove(file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"NULL.csv\"))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/090_run_regional_native_MaxEnt_model.html","id":"train-native-regional-model","dir":"Articles","previous_headings":"","what":"2. Train native Regional Model","title":"Run 'Rn' model trained on SLF native range in east Asia","text":"First, train maxEnt model. regional scale model cross-validated. Cross-validation randomly selects percentage presence data training testing, without regard spatial location. process makes sense global model, fed presence data. Due spatial scale regional models, makes sense spatially separate training testing data given opportunity. use following list hyperparameters train initial model, selected via tuning global model. feature classes (fc) used (l = linear, q = quadratic, p = product, h = hinge, t = threshold) regularization multiplier (reg) set 1.5 (regularized default 1) iterations = 5000. max number iterations optimization algorithm perform stopping training. Increasing number default 500 allows algorithm make refined predictions.","code":"regional_native_model <- SDMtune::train(   method = \"Maxent\",   data = regional_native_train,   fc = \"lqpht\", # feature classes set to ALL   reg = 1.5,   iter = 5000, # number of iterations   progress = TRUE )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/090_run_regional_native_MaxEnt_model.html","id":"summary-statistics","dir":"Articles","previous_headings":"2. Train native Regional Model","what":"Summary Statistics","title":"Run 'Rn' model trained on SLF native range in east Asia","text":"function produces summary statistics model. complete annotated workflow used create function, see 051_compute_MaxEnt_summary_statistics_workflow.Rmd.","code":"# output directory mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/models/slf_regional_native_v3\")  slfSpread::compute_MaxEnt_summary_statistics(   model.obj = regional_native_model,    model.name = \"regional_native\",    mypath = mypath,    create.dir = TRUE, # create subdirectory   env.covar.obj = x_native_env_covariates, # env covariates raster stacked   train.obj = regional_native_train, # training data used to create model   test.obj = regional_native_test, # data you wish to use to test the model   plot.type = c(\"cloglog\", \"logistic\"), # types of univariate and marginal response curves to be created   jk.test.type = c(\"train\", \"test\") # types of jackknife curves to be created   )"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/090_run_regional_native_MaxEnt_model.html","id":"create-distribution-map-for-area-of-interest","dir":"Articles","previous_headings":"3. Create Outputs for Analysis","what":"3.1 Create distribution map for area of interest","title":"Run 'Rn' model trained on SLF native range in east Asia","text":"Lastly, use SDMtune::predict() function predict suitability range interest. threshold map MTP, MTSS 10_percentile thresholds. workflow function wrapped function create_MaxEnt_suitability_maps(). retrieve specific value MTSS threshold model use define considered unsuitable raster. , reclassify mean raster anything threshold now “unsuitable”. use mean cloglog threshold iterations. create binary version mean raster, unsuitable regions, MTSS training threshold, 0, threshold 1. , can reclassify averaged raster MaxEnt predictions. load averaged prediction model reclassify raster using temporary raster layer create. raster values model predicts climate unsuitable, can plotted overtop averaged raster mask unsuitable areas also create suitability maps projected 2041-2070 climate data. Now models trained, can move make check level extrapolation (exdet) important covariate (MIC) model’s predictions. important step applying models climate change invasive species, due non-equilibrium nature applications.","code":"mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/models/slf_regional_native_v3\") regional_native_model <- read_rds(file = file.path(mypath, \"regional_native_model.rds\")) slfSpread::create_MaxEnt_suitability_maps(   model.obj = regional_native_model,   model.name = \"regional_native\",    mypath = mypath,    create.dir = FALSE,    env.covar.obj = x_global_hist_env_covariates,    describe.proj = \"globe_1981-2010\", # name of area or time period describe.proj to   clamp.pred = TRUE,   map.thresh = TRUE, # whether thresholded versions of these maps should be created   map.thresh.extra = \"MTP\",   thresh = c(\"MTP\", \"10_percentile\", \"MTSS\"),   summary.file = file.path(mypath, \"regional_native_summary.csv\") ) slfSpread::create_MaxEnt_suitability_maps(   model.obj = regional_native_model,   model.name = \"regional_native\",    mypath = mypath,    create.dir = FALSE,    env.covar.obj = x_global_126_env_covariates,    describe.proj = \"globe_2041-2070_GFDL_ssp126\", # name of area or time period projected to   clamp.pred = TRUE,   thresh = c(\"MTP\", \"10_percentile\", \"MTSS\"),   map.thresh = TRUE, # whether thresholded versions of these maps should be created   map.thresh.extra = \"MTP\",   summary.file = file.path(mypath, \"regional_native_summary.csv\") ) slfSpread::create_MaxEnt_suitability_maps(   model.obj = regional_native_model,   model.name = \"regional_native\",    mypath = mypath,    create.dir = FALSE,    env.covar.obj = x_global_370_env_covariates,    describe.proj = \"globe_2041-2070_GFDL_ssp370\", # name of area or time period projected to   clamp.pred = TRUE,   thresh = c(\"MTP\", \"10_percentile\", \"MTSS\"),   map.thresh = TRUE, # whether thresholded versions of these maps should be created   map.thresh.extra = \"MTP\",   summary.file = file.path(mypath, \"regional_native_summary.csv\") ) slfSpread::create_MaxEnt_suitability_maps(   model.obj = regional_native_model,   model.name = \"regional_native\",    mypath = mypath,    create.dir = FALSE,    env.covar.obj = x_global_585_env_covariates,    describe.proj = \"globe_2041-2070_GFDL_ssp585\", # name of area or time period projected to   clamp.pred = TRUE,   thresh = c(\"MTP\", \"10_percentile\", \"MTSS\"),   map.thresh = TRUE, # whether thresholded versions of these maps should be created   map.thresh.extra = \"MTP\",   summary.file = file.path(mypath, \"regional_native_summary.csv\") )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/090_run_regional_native_MaxEnt_model.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Run 'Rn' model trained on SLF native range in east Asia","text":"Elith, J., Phillips, S. J., Hastie, T., Dudík, M., Chee, Y. E., & Yates, C. J. (2011). statistical explanation MaxEnt ecologists: Statistical explanation MaxEnt. Diversity Distributions, 17(1), 43–57. https://doi.org/10.1111/j.1472-4642.2010.00725.x Feng, X. (2022). Shandongfx/nimbios_enm [HTML]. https://github.com/shandongfx/nimbios_enm (Original work published 2018). Gallien, L., Douzet, R., Pratte, S., Zimmermann, N. E., & Thuiller, W. (2012). Invasive species distribution models – violating equilibrium assumption can create new insights. Global Ecology Biogeography, 21(11), 1126–1136. https://doi.org/10.1111/j.1466-8238.2012.00768.x Maryam Bordkhani. (n.d.). Threshold rule [Online post]. Radosavljevic, ., & Anderson, R. P. (2014). Making better Maxent models species distributions: Complexity, overfitting evaluation. Journal Biogeography, 41(4), 629–643. https://doi.org/10.1111/jbi.12227 Sobek-Swant, S., Kluza, D. ., Cuddington, K., & Lyons, D. B. (2012). Potential distribution emerald ash borer: can learn ecological niche models using Maxent GARP? Forest Ecology Management, 281, 23–31. https://doi.org/10.1016/j.foreco.2012.06.017 Phillips, S. J., Anderson, R. P., & Schapire, R. E. (2006). Maximum entropy modeling species geographic distributions. Ecological Modelling, 190(3), 231–259. https://doi.org/10.1016/j.ecolmodel.2005.03.026 Steven Phillips. (2017). Brief Tutorial Maxent. http://biodiversityinformatics.amnh.org/open_source/maxent/. Steven J. Phillips, Miroslav Dudík, & Robert E. Schapire. (2023). Maxent software modeling species niches distributions (Version 3.4.3 (Java)) [Computer software]. http://biodiversityinformatics.amnh.org/open_source/maxent/. Srivastava, V., Roe, . D., Keena, M. ., Hamelin, R. C., & Griess, V. C. (2021). Oh places ’ll go: Improving species distribution modelling invasive forest pests uncertain world. Biological Invasions, 23(1), 297–349. https://doi.org/10.1007/s10530-020-02372-9 VanDerWal, J., Shoo, L. P., Graham, C., & Williams, S. E. (2009). Selecting pseudo-absence data presence-distribution modeling: far stray know? Ecological Modelling, 220(4), 589–594. https://doi.org/10.1016/j.ecolmodel.2008.11.010 Vignali, S., Barras, . G., Arlettaz, R., & Braunisch, V. (2020). SDMtune: R package tune evaluate species distribution models. Ecology Evolution, 10(20), 11488–11506. https://doi.org/10.1002/ece3.6786","code":""},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/090_run_regional_native_MaxEnt_model.html","id":"predict-suitability-for-all-slf-presences","dir":"Articles","previous_headings":"Appendix","what":"3.2 Predict suitability for all SLF presences","title":"Run 'Rn' model trained on SLF native range in east Asia","text":"repeat process CMIP6 data.","code":"mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/models/slf_regional_native_v3\")  # slf presence data slf_presences <- read.csv(file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"slf_all_coords_final_2024-08-05.csv\")) %>%   dplyr::select(-species) slfSpread::predict_xy_suitability(   xy.obj = slf_presences,   xy.type = \"Lycorma delicatula\",   env.covar.obj = x_global_hist_env_covariates,   model.obj = regional_native_model,   mypath = mypath,   predict.type = c(\"cloglog\", \"logistic\"),   output.name = \"regional_native_slf_all_coords_1981-2010\" ) slfSpread::predict_xy_suitability(   xy.obj = slf_presences,   xy.type = \"Lycorma delicatula\",   env.covar.obj = x_global_126_env_covariates,   model.obj = regional_native_model,   mypath = mypath,   predict.type = c(\"cloglog\", \"logistic\"),   output.name = \"regional_native_slf_all_coords_2041-2070_GFDL_ssp126\" ) slfSpread::predict_xy_suitability(   xy.obj = slf_presences,   xy.type = \"Lycorma delicatula\",   env.covar.obj = x_global_370_env_covariates,   model.obj = regional_native_model,   mypath = mypath,   predict.type = c(\"cloglog\", \"logistic\"),   output.name = \"regional_native_slf_all_coords_2041-2070_GFDL_ssp370\" ) slfSpread::predict_xy_suitability(   xy.obj = slf_presences,   xy.type = \"Lycorma delicatula\",   env.covar.obj = x_global_585_env_covariates,   model.obj = regional_native_model,   mypath = mypath,   predict.type = c(\"cloglog\", \"logistic\"),   output.name = \"regional_native_slf_all_coords_2041-2070_GFDL_ssp585\" )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/090_run_regional_native_MaxEnt_model.html","id":"predict-suibability-for-ivr-regions","dir":"Articles","previous_headings":"Appendix","what":"3.3 Predict suibability for IVR regions","title":"Run 'Rn' model trained on SLF native range in east Asia","text":"perform action , locations important wineries around world. SSP scenarios","code":"mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/models/slf_regional_native_v3\") # load in all IVR points load(file = file.path(here::here(), \"data\", \"wineries.rda\"))   IVR_regions <- wineries %>%   dplyr::select(x, y) slfSpread::predict_xy_suitability(   xy.obj = IVR_regions,   xy.type = \"IVR regions\",   env.covar.obj = x_global_hist_env_covariates,   model.obj = regional_native_model,   mypath = mypath,   predict.type = c(\"cloglog\", \"logistic\"),   output.name = \"regional_native_wineries_1981-2010\",   buffer.pred = TRUE ) slfSpread::predict_xy_suitability(   xy.obj = IVR_regions,   xy.type = \"IVR regions\",   env.covar.obj = x_global_126_env_covariates,   model.obj = regional_native_model,   mypath = mypath,   predict.type = c(\"cloglog\", \"logistic\"),   output.name = \"regional_native_wineries_2041-2070_GFDL_ssp126\",   buffer.pred = TRUE ) slfSpread::predict_xy_suitability(   xy.obj = IVR_regions,   xy.type = \"IVR regions\",   env.covar.obj = x_global_370_env_covariates,   model.obj = regional_native_model,   mypath = mypath,   predict.type = c(\"cloglog\", \"logistic\"),   output.name = \"regional_native_wineries_2041-2070_GFDL_ssp370\",   buffer.pred = TRUE ) slfSpread::predict_xy_suitability(   xy.obj = IVR_regions,   xy.type = \"IVR regions\",   env.covar.obj = x_global_585_env_covariates,   model.obj = regional_native_model,   mypath = mypath,   predict.type = c(\"cloglog\", \"logistic\"),   output.name = \"regional_native_wineries_2041-2070_GFDL_ssp585\",   buffer.pred = TRUE )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"Note: setting global options document certain code chunks rendered final .html file. set eval = FALSE none code re-run (preventing files overwritten knitting) simply overwrite chunks plots. styling object exdet plots. First, outline helper function format figure numbers 2 decimal places. next helper function make mapping exdet results consistent, scale rather complex. function includes helper. Finally, style MIC maps.","code":"library(tidyverse)  library(here)  # here() is set at the root folder of this package  # spatial data handling library(terra) library(raster) # remotes::install_github(\"densitymodelling/dsmextra\") library(dsmextra) # ExDet and MIC  # aes library(viridis) library(ggnewscale) library(patchwork) map_style_exdet <- list(   theme_classic(),   theme(legend.position = \"bottom\",         panel.background = element_rect(fill = \"azure3\",                                         colour = \"azure3\")   ),   scale_x_continuous(expand = c(0, 0)),   scale_y_continuous(expand = c(0, 0)),   labs(     x = \"longitude\",     y = \"latitude\"   ),   coord_equal() )  # color scheme taken from: https://colorbrewer2.org/?type=diverging&scheme=RdBu&n=11 format_decimal <- function(x) as.numeric(sprintf(\"%.*f\", 2, x)) # raster should be the raster resulting from the exdet analysis # raster.df should be the dataframe version of this raster.  map_exdet <- function(raster, raster.df) {      ggplot() +     # default plot style     map_style_exdet +     # plot regular raster of values first     geom_raster(data = raster.df, aes(x = x, y = y, fill = ExDet)) +     # fill scale     scale_fill_gradientn(       name = \"ExDet Score\",       # the color scale used- must be 1 color per break point, with at least 1 extra color between (1, 3, 5 and 7 are the break point colors- see breaks)       colors = c(\"#67001f\", \"#f4a582\", \"white\", \"white\", \"white\", \"#92c5de\", \"#053061\"),       # the scale values themselves       values = scales::rescale(x = c(         min(values(raster), na.rm = TRUE),          0, 1,          max(values(raster), na.rm = TRUE)         )),       # the breaks indicating a change in color       breaks = c(         format_decimal(min(values(raster), na.rm = TRUE)),          0, 1,          format_decimal(max(values(raster), na.rm = TRUE))         ),       # the limits of the color scale       limits = c(         format_decimal(min(values(raster), na.rm = TRUE)),          format_decimal(max(values(raster), na.rm = TRUE))         ),       guide = guide_colorbar(frame.colour = \"black\", ticks.colour = \"black\", barwidth = 20, order = 1)       )     } map_style_MIC <- list(   theme_classic(),   theme(legend.position = \"bottom\",         panel.background = element_rect(fill = \"azure3\",                                         colour = \"azure3\")   ),   scale_x_continuous(expand = c(0, 0)),   scale_y_continuous(expand = c(0, 0)),   labs(     x = \"longitude\",     y = \"latitude\"   ),   coord_equal() )  # color scheme taken from: https://colorbrewer2.org/?type=diverging&scheme=RdBu&n=11"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"import-datasets","dir":"Articles","previous_headings":"Setup","what":"Import datasets","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"First, import tidy global bioclim layers 1981-2010 2041-2070. unify variable naming import rasters. also need background point sets used train regional model. copies need include values raster particular locations. need import rasters area background points chosen can displayed ExDet MIC plot","code":"# path to directory mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/historical_climate_rasters/chelsa2.1_30arcsec\")  # the env covariates used to train the model global x_global_hist_env_covariates_list <- list.files(path = file.path(mypath, \"v1_maxent_10km\"), pattern = \"\\\\.asc$\", full.names = TRUE) %>%     grep(\"bio2_1981-2010_global.asc|bio11_1981-2010_global.asc|bio12_1981-2010_global.asc|bio15_1981-2010_global.asc\", ., value = TRUE) # path to directory   mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/future_climate_rasters/chelsa2.1_30arcsec\")  # the env covariates for performing xy predictions for global slf and IVR points  # SSP126 x_global_126_env_covariates_list <- list.files(path = file.path(mypath, \"2041-2070_ssp126_GFDL\", \"v1_maxent_10km\"), pattern = \"\\\\_global.asc$\", full.names = TRUE) %>%   # dont include Access to cities   grep(pattern = \"atc_2015\", value = TRUE, invert = TRUE)  # SSP370 x_global_370_env_covariates_list <- list.files(path = file.path(mypath, \"2041-2070_ssp370_GFDL\", \"v1_maxent_10km\"), pattern = \"\\\\_global.asc$\", full.names = TRUE) %>%   # dont include Access to cities   grep(pattern = \"atc_2015\", value = TRUE, invert = TRUE)  # SSP585 x_global_585_env_covariates_list <- list.files(path = file.path(mypath, \"2041-2070_ssp585_GFDL\", \"v1_maxent_10km\"), pattern = \"\\\\_global.asc$\", full.names = TRUE) %>%   # dont include Access to cities   grep(pattern = \"atc_2015\", value = TRUE, invert = TRUE) # layer name object. Check order of layers first env_layer_names <- c(\"bio11\", \"bio12\", \"bio15\", \"bio2\") # stack env covariates x_global_hist_env_covariates <- terra::rast(x = x_global_hist_env_covariates_list)  # attributes nlyr(x_global_hist_env_covariates) ## [1] 4 names(x_global_hist_env_covariates) ## [1] \"CHELSA_bio11_1981-2010_V.2.1\" \"CHELSA_bio12_1981-2010_V.2.1\" ## [3] \"CHELSA_bio15_1981-2010_V.2.1\" \"CHELSA_bio2_1981-2010_V.2.1\" minmax(x_global_hist_env_covariates) ##     CHELSA_bio11_1981-2010_V.2.1 CHELSA_bio12_1981-2010_V.2.1 ## min                      -42.537                        0.488 ## max                       31.312                     6553.500 ##     CHELSA_bio15_1981-2010_V.2.1 CHELSA_bio2_1981-2010_V.2.1 ## min                        3.688                   0.5333334 ## max                      226.760                  18.8409996 # ext(x_global_hist_env_covariates) # crs(x_global_hist_env_covariates)   # I will change the name of the variables because they are throwing errors in SDMtune names(x_global_hist_env_covariates) <- env_layer_names # confirmed- SDMtune doesnt like dashes in column names (it is read as a mathematical operation) # SSP126 x_global_126_env_covariates <- terra::rast(x = x_global_126_env_covariates_list)  # attributes nlyr(x_global_126_env_covariates) ## [1] 4 names(x_global_126_env_covariates) ## [1] \"CHELSA_bio11_2041-2070_gfdl-esm4_ssp126_V.2.1\" ## [2] \"CHELSA_bio12_2041-2070_gfdl-esm4_ssp126_V.2.1\" ## [3] \"CHELSA_bio15_2041-2070_gfdl-esm4_ssp126_V.2.1\" ## [4] \"CHELSA_bio2_2041-2070_gfdl-esm4_ssp126_V.2.1\" minmax(x_global_126_env_covariates) ##     CHELSA_bio11_2041-2070_gfdl-esm4_ssp126_V.2.1 ## min                                       -40.201 ## max                                        32.250 ##     CHELSA_bio12_2041-2070_gfdl-esm4_ssp126_V.2.1 ## min                                         0.488 ## max                                      6553.500 ##     CHELSA_bio15_2041-2070_gfdl-esm4_ssp126_V.2.1 ## min                                         6.531 ## max                                       254.064 ##     CHELSA_bio2_2041-2070_gfdl-esm4_ssp126_V.2.1 ## min                                        0.700 ## max                                       19.837 # ext(x_global_126_env_covariates) # crs(x_global_126_env_covariates)  names(x_global_126_env_covariates) <- env_layer_names   # SSP370 x_global_370_env_covariates <- terra::rast(x = x_global_370_env_covariates_list)  # attributes nlyr(x_global_370_env_covariates) ## [1] 4 names(x_global_370_env_covariates) ## [1] \"CHELSA_bio11_2041-2070_gfdl-esm4_ssp370_V.2.1\" ## [2] \"CHELSA_bio12_2041-2070_gfdl-esm4_ssp370_V.2.1\" ## [3] \"CHELSA_bio15_2041-2070_gfdl-esm4_ssp370_V.2.1\" ## [4] \"CHELSA_bio2_2041-2070_gfdl-esm4_ssp370_V.2.1\" minmax(x_global_370_env_covariates) ##     CHELSA_bio11_2041-2070_gfdl-esm4_ssp370_V.2.1 ## min                                       -38.846 ## max                                        32.583 ##     CHELSA_bio12_2041-2070_gfdl-esm4_ssp370_V.2.1 ## min                                         0.488 ## max                                      6553.500 ##     CHELSA_bio15_2041-2070_gfdl-esm4_ssp370_V.2.1 ## min                                         6.215 ## max                                       264.151 ##     CHELSA_bio2_2041-2070_gfdl-esm4_ssp370_V.2.1 ## min                                        0.100 ## max                                       19.922 # ext(x_global_370_env_covariates) # crs(x_global_370_env_covariates)  names(x_global_370_env_covariates) <- env_layer_names   # SSP585 x_global_585_env_covariates <- terra::rast(x = x_global_585_env_covariates_list)  # attributes nlyr(x_global_585_env_covariates) ## [1] 4 names(x_global_585_env_covariates) ## [1] \"CHELSA_bio11_2041-2070_gfdl-esm4_ssp585_V.2.1\" ## [2] \"CHELSA_bio12_2041-2070_gfdl-esm4_ssp585_V.2.1\" ## [3] \"CHELSA_bio15_2041-2070_gfdl-esm4_ssp585_V.2.1\" ## [4] \"CHELSA_bio2_2041-2070_gfdl-esm4_ssp585_V.2.1\" minmax(x_global_585_env_covariates) ##     CHELSA_bio11_2041-2070_gfdl-esm4_ssp585_V.2.1 ## min                                       -39.022 ## max                                        32.822 ##     CHELSA_bio12_2041-2070_gfdl-esm4_ssp585_V.2.1 ## min                                         0.488 ## max                                      6553.500 ##     CHELSA_bio15_2041-2070_gfdl-esm4_ssp585_V.2.1 ## min                                         6.048 ## max                                       243.688 ##     CHELSA_bio2_2041-2070_gfdl-esm4_ssp585_V.2.1 ## min                                        0.550 ## max                                       20.113 # ext(x_global_585_env_covariates) # crs(x_global_585_env_covariates)  names(x_global_585_env_covariates) <- env_layer_names rm(x_global_hist_env_covariates_list) rm(x_global_126_env_covariates_list) rm(x_global_370_env_covariates_list) rm(x_global_585_env_covariates_list) # regional_native regional_native_background <- read_csv(   file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_native_background_points_with_data_v3.csv\")   ) %>%   as.data.frame() ## Rows: 10000 Columns: 7 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr (1): Species ## dbl (6): X, Y, bio11, bio12, bio15, bio2 ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. # regional_invaded regional_invaded_background <- read_csv(   file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_invaded_background_points_with_data_v7.csv\")   ) %>%   as.data.frame() ## Rows: 10000 Columns: 7 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr (1): Species ## dbl (6): X, Y, bio11, bio12, bio15, bio2 ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. # regional_invaded_asian regional_invaded_asian_background <- read_csv(   file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"regional_invaded_asian_background_points_with_data_v2.csv\")   ) %>%   as.data.frame() ## Rows: 10000 Columns: 7 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr (1): Species ## dbl (6): X, Y, bio11, bio12, bio15, bio2 ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. # I will also perform this operation for the global model  # global global_background <- read_csv(   file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"global_background_points_with_data_v3.csv\")   ) %>%   as.data.frame() ## Rows: 20000 Columns: 7 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr (1): Species ## dbl (6): X, Y, bio11, bio12, bio15, bio2 ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. # path to directory mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/historical_climate_rasters/chelsa2.1_30arcsec\")   # native regional_native_background_area <- terra::rast(x = file.path(mypath, \"v1_maxent_10km\", \"bio11_1981-2010_regional_native_KG.asc\")) # invaded regional_invaded_background_area <- terra::rast(x = file.path(mypath, \"v1_maxent_10km\", \"bio11_1981-2010_regional_invaded_KG.asc\")) # invaded_asian regional_invaded_asian_background_area <- terra::rast(x = file.path(mypath, \"v1_maxent_10km\", \"bio11_1981-2010_regional_invaded_asian_KG.asc\"))   # convert to df regional_native_background_area_df <- terra::as.data.frame(regional_native_background_area, xy = TRUE) regional_invaded_background_area_df <- terra::as.data.frame(regional_invaded_background_area, xy = TRUE) regional_invaded_asian_background_area_df <- terra::as.data.frame(regional_invaded_asian_background_area, xy = TRUE)"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"extract-variables-for-climate-data","dir":"Articles","previous_headings":"","what":"1. Extract variables for climate data","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"First, load background points dataset used train model used train ExDet analysis. extracted climate dataset 1981-2010 points, projected time period 2041-2070 3 ssp scenarios. extract values background points model SSP scenario. compute_extrapolation() function takes data columns (descriptors), isolate background point set loaded . Now convert global-scale climate rasters df. used projection, compare exdet MIC analyses . background point sets used train analyses, global rasters used projection.","code":"# regional_native model # extract values from 2060 projected raster regional_native_background_126 <- regional_native_background %>%   dplyr::select(\"X\", \"Y\") %>%   # extract new values   terra::extract(x_global_126_env_covariates, y = ., method = \"simple\", ID = FALSE)     # regional_invaded model regional_invaded_background_126 <- regional_invaded_background %>%   dplyr::select(\"X\", \"Y\") %>%   # extract new values   terra::extract(x_global_126_env_covariates, y = ., method = \"simple\", ID = FALSE)      # regional_invaded_asian model regional_invaded_asian_background_126 <- regional_invaded_asian_background %>%   dplyr::select(\"X\", \"Y\") %>%   # extract new values   terra::extract(x_global_126_env_covariates, y = ., method = \"simple\", ID = FALSE)    # global global_background_126 <- global_background %>%   dplyr::select(\"X\", \"Y\") %>%   # extract new values   terra::extract(x_global_126_env_covariates, y = ., method = \"simple\", ID = FALSE) # regional_native model # extract values from 2060 projected raster regional_native_background_370 <- regional_native_background %>%   dplyr::select(\"X\", \"Y\") %>%   # extract new values   terra::extract(x_global_370_env_covariates, y = ., method = \"simple\", ID = FALSE)     # regional_invaded model regional_invaded_background_370 <- regional_invaded_background %>%   dplyr::select(\"X\", \"Y\") %>%   # extract new values   terra::extract(x_global_370_env_covariates, y = ., method = \"simple\", ID = FALSE)      # regional_invaded_asian model regional_invaded_asian_background_370 <- regional_invaded_asian_background %>%   dplyr::select(\"X\", \"Y\") %>%   # extract new values   terra::extract(x_global_370_env_covariates, y = ., method = \"simple\", ID = FALSE)    # global global_background_370 <- global_background %>%   dplyr::select(\"X\", \"Y\") %>%   # extract new values   terra::extract(x_global_370_env_covariates, y = ., method = \"simple\", ID = FALSE) # regional_native model # extract values from 2060 projected raster regional_native_background_585 <- regional_native_background %>%   dplyr::select(\"X\", \"Y\") %>%   # extract new values   terra::extract(x_global_585_env_covariates, y = ., method = \"simple\", ID = FALSE)     # regional_invaded model regional_invaded_background_585 <- regional_invaded_background %>%   dplyr::select(\"X\", \"Y\") %>%   # extract new values   terra::extract(x_global_585_env_covariates, y = ., method = \"simple\", ID = FALSE)      # regional_invaded_asian model regional_invaded_asian_background_585 <- regional_invaded_asian_background %>%   dplyr::select(\"X\", \"Y\") %>%   # extract new values   terra::extract(x_global_585_env_covariates, y = ., method = \"simple\", ID = FALSE)    # global global_background_585 <- global_background %>%   dplyr::select(\"X\", \"Y\") %>%   # extract new values   terra::extract(x_global_585_env_covariates, y = ., method = \"simple\", ID = FALSE) # native regional_native_background <- dplyr::select(regional_native_background, 4:7) # invaded regional_invaded_background <- dplyr::select(regional_invaded_background, 4:7) # regional_invaded_asian regional_invaded_asian_background <- dplyr::select(regional_invaded_asian_background, 4:7) # global global_background <- dplyr::select(global_background, 4:7) # historical global_projection_hist_df <- terra::as.data.frame(x_global_hist_env_covariates, xy = TRUE)  # CMIP6 global_projection_126_df <- terra::as.data.frame(x_global_126_env_covariates, xy = TRUE) global_projection_370_df <- terra::as.data.frame(x_global_370_env_covariates, xy = TRUE) global_projection_585_df <- terra::as.data.frame(x_global_585_env_covariates, xy = TRUE)"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"run-exdet-mic-function","dir":"Articles","previous_headings":"","what":"2. Run ExDet / MIC Function","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"First, run function calculates ExDet MIC indices. use background points datasets train analysis project entire global raster. done historical climate change time periods. function outputs rasters data frames can used plotting. save length vignette, display sections creating ExDet MIC plots based historical data, sections essentially copy-pasted.","code":"# output directory mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent\")"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"historical-climate","dir":"Articles","previous_headings":"2. Run ExDet / MIC Function","what":"2.1 Historical Climate","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"also global model","code":"exdet_MIC_regional_native_hist <- dsmextra::compute_extrapolation(   samples = regional_native_background, # training set of background points   covariate.names = env_layer_names, # names of covariates   prediction.grid = global_projection_hist_df, # projection area for extrapolation test   coordinate.system = \"EPSG:4326\", # CRS   verbose = TRUE ) ## Computing ... ## Done! exdet_MIC_regional_invaded_hist <- dsmextra::compute_extrapolation(   samples = regional_invaded_background, # training set of background points   covariate.names = env_layer_names, # names of covariates   prediction.grid = global_projection_hist_df, # projection area for extrapolation test   coordinate.system = \"EPSG:4326\", # CRS   verbose = TRUE ) ## Computing ... ## Done! exdet_MIC_regional_invaded_asian_hist <- dsmextra::compute_extrapolation(   samples = regional_invaded_asian_background, # training set of background points   covariate.names = env_layer_names, # names of covariates   prediction.grid = global_projection_hist_df, # projection area for extrapolation test   coordinate.system = \"EPSG:4326\", # CRS   verbose = TRUE ) ## Computing ... ## Done! exdet_MIC_global_hist <- dsmextra::compute_extrapolation(   samples = global_background, # training set of background points   covariate.names = env_layer_names, # names of covariates   prediction.grid = global_projection_hist_df, # projection area for extrapolation test   coordinate.system = \"EPSG:4326\", # CRS   verbose = TRUE ) ## Computing ... ## Done!"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"ssp126","dir":"Articles","previous_headings":"2. Run ExDet / MIC Function > 2.2 CMIP6 2041-2070 projected climate scenarios","what":"SSP126","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"also global model","code":"exdet_MIC_regional_native_126 <- dsmextra::compute_extrapolation(   samples = regional_native_background_126, # training set of background points   covariate.names = env_layer_names, # names of covariates   prediction.grid = global_projection_126_df, # projection area for extrapolation test   coordinate.system = \"EPSG:4326\", # CRS   verbose = TRUE ) ## Computing ... ## Done! exdet_MIC_regional_invaded_126 <- dsmextra::compute_extrapolation(   samples = regional_invaded_background_126, # training set of background points   covariate.names = env_layer_names, # names of covariates   prediction.grid = global_projection_126_df, # projection area for extrapolation test   coordinate.system = \"EPSG:4326\", # CRS   verbose = TRUE ) ## Computing ... ## Done! exdet_MIC_regional_invaded_asian_126 <- dsmextra::compute_extrapolation(   samples = regional_invaded_asian_background_126, # training set of background points   covariate.names = env_layer_names, # names of covariates   prediction.grid = global_projection_126_df, # projection area for extrapolation test   coordinate.system = \"EPSG:4326\", # CRS   verbose = TRUE ) ## Computing ... ## Done! exdet_MIC_global_126 <- dsmextra::compute_extrapolation(   samples = global_background_126, # training set of background points   covariate.names = env_layer_names, # names of covariates   prediction.grid = global_projection_126_df, # projection area for extrapolation test   coordinate.system = \"EPSG:4326\", # CRS   verbose = TRUE ) ## Computing ... ## Done!"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"ssp370","dir":"Articles","previous_headings":"2. Run ExDet / MIC Function > 2.2 CMIP6 2041-2070 projected climate scenarios","what":"SSP370","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"also global model","code":"exdet_MIC_regional_native_370 <- dsmextra::compute_extrapolation(   samples = regional_native_background_370, # training set of background points   covariate.names = env_layer_names, # names of covariates   prediction.grid = global_projection_370_df, # projection area for extrapolation test   coordinate.system = \"EPSG:4326\", # CRS   verbose = TRUE ) ## Computing ... ## Done! exdet_MIC_regional_invaded_370 <- dsmextra::compute_extrapolation(   samples = regional_invaded_background_370, # training set of background points   covariate.names = env_layer_names, # names of covariates   prediction.grid = global_projection_370_df, # projection area for extrapolation test   coordinate.system = \"EPSG:4326\", # CRS   verbose = TRUE ) ## Computing ... ## Done! exdet_MIC_regional_invaded_asian_370 <- dsmextra::compute_extrapolation(   samples = regional_invaded_asian_background_370, # training set of background points   covariate.names = env_layer_names, # names of covariates   prediction.grid = global_projection_370_df, # projection area for extrapolation test   coordinate.system = \"EPSG:4326\", # CRS   verbose = TRUE ) ## Computing ... ## Done! exdet_MIC_global_370 <- dsmextra::compute_extrapolation(   samples = global_background_370, # training set of background points   covariate.names = env_layer_names, # names of covariates   prediction.grid = global_projection_370_df, # projection area for extrapolation test   coordinate.system = \"EPSG:4326\", # CRS   verbose = TRUE ) ## Computing ... ## Done!"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"ssp585","dir":"Articles","previous_headings":"2. Run ExDet / MIC Function > 2.2 CMIP6 2041-2070 projected climate scenarios","what":"SSP585","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"also global model","code":"exdet_MIC_regional_native_585 <- dsmextra::compute_extrapolation(   samples = regional_native_background_585, # training set of background points   covariate.names = env_layer_names, # names of covariates   prediction.grid = global_projection_585_df, # projection area for extrapolation test   coordinate.system = \"EPSG:4326\", # CRS   verbose = TRUE ) ## Computing ... ## Done! exdet_MIC_regional_invaded_585 <- dsmextra::compute_extrapolation(   samples = regional_invaded_background_585, # training set of background points   covariate.names = env_layer_names, # names of covariates   prediction.grid = global_projection_585_df, # projection area for extrapolation test   coordinate.system = \"EPSG:4326\", # CRS   verbose = TRUE ) ## Computing ... ## Done! exdet_MIC_regional_invaded_asian_585 <- dsmextra::compute_extrapolation(   samples = regional_invaded_asian_background_585, # training set of background points   covariate.names = env_layer_names, # names of covariates   prediction.grid = global_projection_585_df, # projection area for extrapolation test   coordinate.system = \"EPSG:4326\", # CRS   verbose = TRUE ) ## Computing ... ## Done! exdet_MIC_global_585 <- dsmextra::compute_extrapolation(   samples = global_background_585, # training set of background points   covariate.names = env_layer_names, # names of covariates   prediction.grid = global_projection_585_df, # projection area for extrapolation test   coordinate.system = \"EPSG:4326\", # CRS   verbose = TRUE ) ## Computing ... ## Done!"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"regional_native--saveplot-exdetmic-rasters","dir":"Articles","previous_headings":"","what":"3. regional_native- Save/plot ExDet/MIC rasters","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"Now need pull rasters functions save working directory folder. , create plots raster save well.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"regional_native-hist","dir":"Articles","previous_headings":"3. regional_native- Save/plot ExDet/MIC rasters","what":"3.1 regional_native hist","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"First, save summary files analysis model folder.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"save-outputs","dir":"Articles","previous_headings":"3. regional_native- Save/plot ExDet/MIC rasters > 3.1 regional_native hist","what":"Save outputs","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"Next, save output rasters.","code":"# summary of data write_csv(   x = exdet_MIC_regional_native_hist[[\"data\"]][[\"all\"]],   file = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"exdet_mic_analysis_results.csv\")   )  # exdet write_csv(   x = as.data.frame(exdet_MIC_regional_native_hist[[\"summary\"]][[\"extrapolation\"]]),   file = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"exdet_analysis_summary.csv\")   )  # mic univariate write_csv(   x = as.data.frame(exdet_MIC_regional_native_hist[[\"summary\"]][[\"mic\"]][[1]]),   file = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"mic_analysis_univariate_summary.csv\")   )  # mic univariate write_csv(   x = as.data.frame(exdet_MIC_regional_native_hist[[\"summary\"]][[\"mic\"]][[2]]),   file = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"mic_analysis_combinatorial_summary.csv\")   ) # exdet raster::writeRaster(   x = exdet_MIC_regional_native_hist[[\"rasters\"]][[\"ExDet\"]][[\"all\"]],    filename = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"ExDet_slf_regional_native_v3_background_projGlobe_1981-2010.tif\"),   filetype = \"GTiff\",   overwrite = FALSE   )  raster::writeRaster(   x = exdet_MIC_regional_native_hist[[\"rasters\"]][[\"mic\"]][[\"all\"]],    filename = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"MIC_slf_regional_native_v3_background_projGlobe_1981-2010.tif\"),   filetype = \"GTiff\",   overwrite = FALSE   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"plot-exdet","dir":"Articles","previous_headings":"3. regional_native- Save/plot ExDet/MIC rasters > 3.1 regional_native hist","what":"Plot ExDet","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"Finally, create plots ExDet MIC analyses.","code":"# isolate exdet raster exdet_regional_native_hist <- exdet_MIC_regional_native_hist[[\"rasters\"]][[\"ExDet\"]][[\"all\"]]  exdet_regional_native_hist_plot <- map_exdet(   raster = exdet_regional_native_hist,    raster.df = exdet_MIC_regional_native_hist[[\"data\"]][[\"all\"]]   )   # add new scale for bg area exdet_regional_native_hist_plot <- exdet_regional_native_hist_plot +   # new scale   ggnewscale::new_scale_fill() +   # add layer for bg point area   geom_raster(data = regional_native_background_area_df, aes(x = x, y = y, fill = \"Background\")) +   # scale 2   scale_fill_manual(name = \"\", values = c(\"Background\" = \"azure4\"), guide = guide_legend(order = 2)) +   theme(legend.key = element_rect(color = \"black\")) +   # labs   labs(     title = \"ExDet analysis | bio2, bio11, bio12 and bio15 | 1981-2010\",     subtitle = \"Global climate divergence from 'Rn' model training set\",     fill = \"ExDet Analysis\"     ) ggsave(   exdet_regional_native_hist_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"ExDet_slf_regional_native_v3_background_projGlobe_1981-2010.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"plot-mic","dir":"Articles","previous_headings":"3. regional_native- Save/plot ExDet/MIC rasters > 3.1 regional_native hist","what":"Plot MIC","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"repeat workflow models CMIP6 version climate data, display workflow models ssp scenarios. next vignette, utilize ExDet analysis ensemble techniques regional-scale models. ensembling technique give unified prediction compare global-scale model make predictions.","code":"# plot mean raster first mic_regional_native_hist_plot <- ggplot() +   # default plot style   map_style_MIC +   # plot regular raster of values first   geom_raster(data = exdet_MIC_regional_native_hist[[\"data\"]][[\"all\"]], aes(x = x, y = y, fill = as.factor(mic))) +   # fill scale 1   viridis::scale_fill_viridis(name = \"MIC\", discrete = TRUE, labels = c(\"analogous\", \"bio11\", \"bio12\", \"bio15\", \"bio2\"), guide = guide_legend(order = 1)) +   # new scale   ggnewscale::new_scale_fill() +   # add layer for bg point area   geom_raster(data = regional_native_background_area_df, aes(x = x, y = y, fill = \"Background\")) +   # scale 2   scale_fill_manual(name = \"\", values = c(\"Background\" = \"azure4\"), guide = guide_legend(order = 2)) +   theme(legend.key = element_rect(color = \"black\")) +   # aes   labs(     title = \"Most Influential Covariate (MIC) analysis | 1981-2010\",     subtitle = \"Covariate causing most extrapolation from 'Rn (native)' model training set\"     ) ggsave(   mic_regional_native_hist_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"MIC_slf_regional_native_v3_background_projGlobe_1981-2010.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"save-outputs-1","dir":"Articles","previous_headings":"3. regional_native- Save/plot ExDet/MIC rasters > 3.2 regional_native SSP126","what":"Save outputs","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# summary of data write_csv(   x = exdet_MIC_regional_native_126[[\"data\"]][[\"all\"]],   file = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"exdet_mic_analysis_results_2041-2070_ssp126_GFDL.csv\")   )  # exdet write_csv(   x = as.data.frame(exdet_MIC_regional_native_126[[\"summary\"]][[\"extrapolation\"]]),   file = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"exdet_analysis_summary_2041-2070_ssp126_GFDL.csv\")   )  # mic univariate write_csv(   x = as.data.frame(exdet_MIC_regional_native_126[[\"summary\"]][[\"mic\"]][[1]]),   file = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"mic_analysis_univariate_summary_2041-2070_ssp126_GFDL.csv\")   )  # mic univariate write_csv(   x = as.data.frame(exdet_MIC_regional_native_126[[\"summary\"]][[\"mic\"]][[2]]),   file = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"mic_analysis_combinatorial_summary_2041-2070_ssp126_GFDL.csv\")   ) # exdet raster::writeRaster(   x = exdet_MIC_regional_native_126[[\"rasters\"]][[\"ExDet\"]][[\"all\"]],    filename = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"ExDet_slf_regional_native_v3_background_projGlobe_2041-2070_ssp126_GFDL.tif\"),   filetype = \"GTiff\",   overwrite = FALSE   )  raster::writeRaster(   x = exdet_MIC_regional_native_126[[\"rasters\"]][[\"mic\"]][[\"all\"]],    filename = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"MIC_slf_regional_native_v3_background_projGlobe_2041-2070_ssp126_GFDL.tif\"),   filetype = \"GTiff\",   overwrite = FALSE   )  # also isolate exdet raster exdet_regional_native_126 <- exdet_MIC_regional_native_126[[\"rasters\"]][[\"ExDet\"]][[\"all\"]]"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"plot-exdet-1","dir":"Articles","previous_headings":"3. regional_native- Save/plot ExDet/MIC rasters > 3.2 regional_native SSP126","what":"Plot ExDet","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# plot mean raster first exdet_regional_native_126_plot <- map_exdet(   raster = exdet_regional_native_126,   raster.df = exdet_MIC_regional_native_126[[\"data\"]][[\"all\"]] )  # add new scale for bg area exdet_regional_native_126_plot <- exdet_regional_native_126_plot +    # new scale   ggnewscale::new_scale_fill() +   # add layer for bg point area   geom_raster(data = regional_native_background_area_df, aes(x = x, y = y, fill = \"Background\")) +   # scale 2   scale_fill_manual(name = \"\", values = c(\"Background\" = \"azure4\"), guide = guide_legend(order = 2)) +   theme(legend.key = element_rect(color = \"black\")) +   labs(     title = \"ExDet analysis | bio2, bio11, bio12, bio15 | 2041-2070 | ssp126 GFDL-ESM4\",     subtitle = \"Global climate divergence from 'Rn (native)' model training set\",     fill = \"ExDet Analysis\"     ) ggsave(   exdet_regional_native_126_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"ExDet_slf_regional_native_v3_background_projGlobe_2041-2070_ssp126_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"plot-mic-1","dir":"Articles","previous_headings":"3. regional_native- Save/plot ExDet/MIC rasters > 3.2 regional_native SSP126","what":"Plot MIC","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# plot mean raster first mic_regional_native_126_plot <- ggplot() +   # default plot style   map_style_MIC +   # plot regular raster of values first   geom_raster(data = exdet_MIC_regional_native_126[[\"data\"]][[\"all\"]], aes(x = x, y = y, fill = as.factor(mic))) +   # fill scale 1   viridis::scale_fill_viridis(name = \"MIC\", discrete = TRUE, labels = c(\"analogous\", \"bio11\", \"bio12\", \"bio15\", \"bio2\"), guide = guide_legend(order = 1)) +   # new scale   ggnewscale::new_scale_fill() +   # add layer for bg point area   geom_raster(data = regional_native_background_area_df, aes(x = x, y = y, fill = \"Background\")) +   # scale 2   scale_fill_manual(name = \"\", values = c(\"Background\" = \"azure4\"), guide = guide_legend(order = 2)) +   theme(legend.key = element_rect(color = \"black\")) +   # aes   labs(     title = \"Most Influential Covariate (MIC) analysis | 2041-2070 | ssp126 GFDL-ESM4\",     subtitle = \"Covariate causing most extrapolation from 'Rn (native)' model training set\"     ) ggsave(   mic_regional_native_126_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"MIC_slf_regional_native_v3_background_projGlobe_2041-2070_ssp126_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"save-outputs-2","dir":"Articles","previous_headings":"3. regional_native- Save/plot ExDet/MIC rasters > 3.3 regional_native SSP370","what":"Save outputs","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# summary of data write_csv(   x = exdet_MIC_regional_native_370[[\"data\"]][[\"all\"]],   file = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"exdet_mic_analysis_results_2041-2070_ssp370_GFDL.csv\")   )  # exdet write_csv(   x = as.data.frame(exdet_MIC_regional_native_370[[\"summary\"]][[\"extrapolation\"]]),   file = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"exdet_analysis_summary_2041-2070_ssp370_GFDL.csv\")   )  # mic univariate write_csv(   x = as.data.frame(exdet_MIC_regional_native_370[[\"summary\"]][[\"mic\"]][[1]]),   file = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"mic_analysis_univariate_summary_2041-2070_ssp370_GFDL.csv\")   )  # mic univariate write_csv(   x = as.data.frame(exdet_MIC_regional_native_370[[\"summary\"]][[\"mic\"]][[2]]),   file = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"mic_analysis_combinatorial_summary_2041-2070_ssp370_GFDL.csv\")   ) # exdet raster::writeRaster(   x = exdet_MIC_regional_native_370[[\"rasters\"]][[\"ExDet\"]][[\"all\"]],    filename = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"ExDet_slf_regional_native_v3_background_projGlobe_2041-2070_ssp370_GFDL.tif\"),   filetype = \"GTiff\",   overwrite = FALSE   )  raster::writeRaster(   x = exdet_MIC_regional_native_370[[\"rasters\"]][[\"mic\"]][[\"all\"]],    filename = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"MIC_slf_regional_native_v3_background_projGlobe_2041-2070_ssp370_GFDL.tif\"),   filetype = \"GTiff\",   overwrite = FALSE   )  # also isolate exdet raster exdet_regional_native_370 <- exdet_MIC_regional_native_370[[\"rasters\"]][[\"ExDet\"]][[\"all\"]]"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"plot-exdet-2","dir":"Articles","previous_headings":"3. regional_native- Save/plot ExDet/MIC rasters > 3.3 regional_native SSP370","what":"Plot ExDet","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# plot mean raster first exdet_regional_native_370_plot <- map_exdet(   raster = exdet_regional_native_370,   raster.df = exdet_MIC_regional_native_370[[\"data\"]][[\"all\"]] )   # new fill scale for bg area exdet_regional_native_370_plot <- exdet_regional_native_370_plot +     # new scale   ggnewscale::new_scale_fill() +   # add layer for bg point area   geom_raster(data = regional_native_background_area_df, aes(x = x, y = y, fill = \"Background\")) +   # scale 2   scale_fill_manual(name = \"\", values = c(\"Background\" = \"azure4\"), guide = guide_legend(order = 2)) +   theme(legend.key = element_rect(color = \"black\")) +   labs(     title = \"ExDet analysis | bio2, bio11, bio12, bio15 | 2041-2070 | ssp370 GFDL-ESM4\",     subtitle = \"Global climate divergence from 'Rn (native)' model training set\",     fill = \"ExDet Analysis\"     ) ggsave(   exdet_regional_native_370_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"ExDet_slf_regional_native_v3_background_projGlobe_2041-2070_ssp370_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"plot-mic-2","dir":"Articles","previous_headings":"3. regional_native- Save/plot ExDet/MIC rasters > 3.3 regional_native SSP370","what":"Plot MIC","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# plot mean raster first mic_regional_native_370_plot <- ggplot() +   # default plot style   map_style_MIC +   # plot regular raster of values first   geom_raster(data = exdet_MIC_regional_native_370[[\"data\"]][[\"all\"]], aes(x = x, y = y, fill = as.factor(mic))) +   # fill scale 1   viridis::scale_fill_viridis(name = \"MIC\", discrete = TRUE, labels = c(\"analogous\", \"bio11\", \"bio12\", \"bio15\", \"bio2\"), guide = guide_legend(order = 1)) +   # new scale   ggnewscale::new_scale_fill() +   # add layer for bg point area   geom_raster(data = regional_native_background_area_df, aes(x = x, y = y, fill = \"Background\")) +   # scale 2   scale_fill_manual(name = \"\", values = c(\"Background\" = \"azure4\"), guide = guide_legend(order = 2)) +   theme(legend.key = element_rect(color = \"black\")) +   # aes   labs(     title = \"Most Influential Covariate (MIC) analysis | 2041-2070 | ssp370 GFDL-ESM4\",     subtitle = \"Covariate causing most extrapolation from 'Rn (native)' model training set\"     ) ggsave(   mic_regional_native_370_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"MIC_slf_regional_native_v3_background_projGlobe_2041-2070_ssp370_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"save-outputs-3","dir":"Articles","previous_headings":"3. regional_native- Save/plot ExDet/MIC rasters > 3.4 regional_native SSP585","what":"Save outputs","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# summary of data write_csv(   x = exdet_MIC_regional_native_585[[\"data\"]][[\"all\"]],   file = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"exdet_mic_analysis_results_2041-2070_ssp585_GFDL.csv\")   )  # exdet write_csv(   x = as.data.frame(exdet_MIC_regional_native_585[[\"summary\"]][[\"extrapolation\"]]),   file = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"exdet_analysis_summary_2041-2070_ssp585_GFDL.csv\")   )  # mic univariate write_csv(   x = as.data.frame(exdet_MIC_regional_native_585[[\"summary\"]][[\"mic\"]][[1]]),   file = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"mic_analysis_univariate_summary_2041-2070_ssp585_GFDL.csv\")   )  # mic univariate write_csv(   x = as.data.frame(exdet_MIC_regional_native_585[[\"summary\"]][[\"mic\"]][[2]]),   file = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"mic_analysis_combinatorial_summary_2041-2070_ssp585_GFDL.csv\")   ) # exdet raster::writeRaster(   x = exdet_MIC_regional_native_585[[\"rasters\"]][[\"ExDet\"]][[\"all\"]],    filename = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"ExDet_slf_regional_native_v3_background_projGlobe_2041-2070_ssp585_GFDL.tif\"),   filetype = \"GTiff\",   overwrite = FALSE   )  raster::writeRaster(   x = exdet_MIC_regional_native_585[[\"rasters\"]][[\"mic\"]][[\"all\"]],    filename = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"MIC_slf_regional_native_v3_background_projGlobe_2041-2070_ssp585_GFDL.tif\"),   filetype = \"GTiff\",   overwrite = FALSE   )  # also isolate exdet raster exdet_regional_native_585 <- exdet_MIC_regional_native_585[[\"rasters\"]][[\"ExDet\"]][[\"all\"]]"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"plot-exdet-3","dir":"Articles","previous_headings":"3. regional_native- Save/plot ExDet/MIC rasters > 3.4 regional_native SSP585","what":"Plot ExDet","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# plot mean raster first exdet_regional_native_585_plot <- map_exdet(   raster = exdet_regional_native_585,   raster.df = exdet_MIC_regional_native_585[[\"data\"]][[\"all\"]] )  # background area df scale exdet_regional_native_585_plot <- exdet_regional_native_585_plot +    # new scale   ggnewscale::new_scale_fill() +   # add layer for bg point area   geom_raster(data = regional_native_background_area_df, aes(x = x, y = y, fill = \"Background\")) +   # scale 2   scale_fill_manual(name = \"\", values = c(\"Background\" = \"azure4\"), guide = guide_legend(order = 2)) +   theme(legend.key = element_rect(color = \"black\")) +   labs(     title = \"ExDet analysis | bio2, bio11, bio12, bio15 | 2041-2070 | ssp585 GFDL-ESM4\",     subtitle = \"Global climate divergence from 'Rn' model training set\",     fill = \"ExDet Analysis\"     ) ggsave(   exdet_regional_native_585_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"ExDet_slf_regional_native_v3_background_projGlobe_2041-2070_ssp585_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"plot-mic-3","dir":"Articles","previous_headings":"3. regional_native- Save/plot ExDet/MIC rasters > 3.4 regional_native SSP585","what":"Plot MIC","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# plot mean raster first mic_regional_native_585_plot <- ggplot() +   # default plot style   map_style_MIC +   # plot regular raster of values first   geom_raster(data = exdet_MIC_regional_native_585[[\"data\"]][[\"all\"]], aes(x = x, y = y, fill = as.factor(mic))) +   # fill scale 1   viridis::scale_fill_viridis(name = \"MIC\", discrete = TRUE, labels = c(\"analogous\", \"bio11\", \"bio12\", \"bio15\", \"bio2\"), guide = guide_legend(order = 1)) +   # new scale   ggnewscale::new_scale_fill() +   # add layer for bg point area   geom_raster(data = regional_native_background_area_df, aes(x = x, y = y, fill = \"Background\")) +   # scale 2   scale_fill_manual(name = \"\", values = c(\"Background\" = \"azure4\"), guide = guide_legend(order = 2)) +   theme(legend.key = element_rect(color = \"black\")) +   # aes   labs(     title = \"Most Influential Covariate (MIC) analysis | 2041-2070 | ssp585 GFDL-ESM4\",     subtitle = \"Covariate causing most extrapolation from 'Rn (native)' model training set\"     ) ggsave(   mic_regional_native_585_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"MIC_slf_regional_native_v3_background_projGlobe_2041-2070_ssp585_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":[]},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"save-outputs-4","dir":"Articles","previous_headings":"4.regional_invaded- Save/plot ExDet/MIC rasters > 4.1 regional_invaded hist","what":"Save outputs","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# summary of data write_csv(   x = exdet_MIC_regional_invaded_hist[[\"data\"]][[\"all\"]],   file = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"regional_invaded_exdet_mic_analysis_results.csv\")   )  # exdet write_csv(   x = as.data.frame(exdet_MIC_regional_invaded_hist[[\"summary\"]][[\"extrapolation\"]]),   file = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"regional_invaded_exdet_analysis_summary.csv\")   )  # mic univariate write_csv(   x = as.data.frame(exdet_MIC_regional_invaded_hist[[\"summary\"]][[\"mic\"]][[1]]),   file = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"regional_invaded_mic_analysis_univariate_summary.csv\")   )  # mic univariate write_csv(   x = as.data.frame(exdet_MIC_regional_invaded_hist[[\"summary\"]][[\"mic\"]][[2]]),   file = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"regional_invaded_mic_analysis_combinatorial_summary.csv\")   ) # exdet raster::writeRaster(   x = exdet_MIC_regional_invaded_hist[[\"rasters\"]][[\"ExDet\"]][[\"all\"]],    filename = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"ExDet_slf_regional_invaded_v7_background_projGlobe_1981-2010.tif\"),   filetype = \"GTiff\",   overwrite = FALSE   )  raster::writeRaster(   x = exdet_MIC_regional_invaded_hist[[\"rasters\"]][[\"mic\"]][[\"all\"]],    filename = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"MIC_slf_regional_invaded_v7_background_projGlobe_1981-2010.tif\"),   filetype = \"GTiff\",   overwrite = FALSE   )  # also isolate exdet raster exdet_regional_invaded_hist <- exdet_MIC_regional_invaded_hist[[\"rasters\"]][[\"ExDet\"]][[\"all\"]]"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"plot-exdet-4","dir":"Articles","previous_headings":"4.regional_invaded- Save/plot ExDet/MIC rasters > 4.1 regional_invaded hist","what":"Plot ExDet","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# plot mean raster first exdet_regional_invaded_hist_plot <- map_exdet(   raster = exdet_regional_invaded_hist,   raster.df = exdet_MIC_regional_invaded_hist[[\"data\"]][[\"all\"]] )   exdet_regional_invaded_hist_plot <- exdet_regional_invaded_hist_plot +   # new scale   ggnewscale::new_scale_fill() +   # add layer for bg point area   geom_raster(data = regional_invaded_background_area_df, aes(x = x, y = y, fill = \"Background\")) +   # scale 2   scale_fill_manual(name = \"\", values = c(\"Background\" = \"azure4\"), guide = guide_legend(order = 2)) +   theme(legend.key = element_rect(color = \"black\")) +   labs(     title = \"ExDet analysis | bio2, bio11, bio12 and bio15 | 1981-2010\",     subtitle = \"Global climate divergence from 'Ri.NAmerica' model training set\",     fill = \"ExDet Analysis\"     ) ggsave(   exdet_regional_invaded_hist_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"ExDet_slf_regional_invaded_v7_background_projGlobe_1981-2010.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"plot-mic-4","dir":"Articles","previous_headings":"4.regional_invaded- Save/plot ExDet/MIC rasters > 4.1 regional_invaded hist","what":"Plot MIC","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# plot mean raster first mic_regional_invaded_hist_plot <- ggplot() +   # default plot style   map_style_MIC +   # plot regular raster of values first   geom_raster(data = exdet_MIC_regional_invaded_hist[[\"data\"]][[\"all\"]], aes(x = x, y = y, fill = as.factor(mic))) +   # fill scale 1   viridis::scale_fill_viridis(name = \"MIC\", discrete = TRUE, labels = c(\"analogous\", \"bio11\", \"bio12\", \"bio15\", \"bio2\"), guide = guide_legend(order = 1)) +   # new scale   ggnewscale::new_scale_fill() +   # add layer for bg point area   geom_raster(data = regional_invaded_background_area_df, aes(x = x, y = y, fill = \"Background\")) +   # scale 2   scale_fill_manual(name = \"\", values = c(\"Background\" = \"azure4\"), guide = guide_legend(order = 2)) +   theme(legend.key = element_rect(color = \"black\")) +   labs(     title = \"Most Influential Covariate (MIC) analysis | 1981-2010\",     subtitle = \"Covariate causing most extrapolation from 'Ri.NAmerica' model model training set\"     ) ggsave(   mic_regional_invaded_hist_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"MIC_slf_regional_invaded_v7_background_projGlobe_1981-2010.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"save-outputs-5","dir":"Articles","previous_headings":"4.regional_invaded- Save/plot ExDet/MIC rasters > 4.2 regional_invaded SSP126","what":"Save outputs","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# summary of data write_csv(   x = exdet_MIC_regional_invaded_126[[\"data\"]][[\"all\"]],   file = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"regional_invaded_exdet_mic_analysis_results_2041-2070_ssp126_GFDL.csv\")   )  # exdet write_csv(   x = as.data.frame(exdet_MIC_regional_invaded_126[[\"summary\"]][[\"extrapolation\"]]),   file = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"regional_invaded_exdet_analysis_summary_2041-2070_ssp126_GFDL.csv\")   )  # mic univariate write_csv(   x = as.data.frame(exdet_MIC_regional_invaded_126[[\"summary\"]][[\"mic\"]][[1]]),   file = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"regional_invaded_mic_analysis_univariate_summary_2041-2070_ssp126_GFDL.csv\")   )  # mic univariate write_csv(   x = as.data.frame(exdet_MIC_regional_invaded_126[[\"summary\"]][[\"mic\"]][[2]]),   file = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"regional_invaded_mic_analysis_combinatorial_summary_2041-2070_ssp126_GFDL.csv\")   ) # exdet raster::writeRaster(   x = exdet_MIC_regional_invaded_126[[\"rasters\"]][[\"ExDet\"]][[\"all\"]],    filename = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"ExDet_slf_regional_invaded_v7_background_projGlobe_2041-2070_ssp126_GFDL.tif\"),   filetype = \"GTiff\",   overwrite = FALSE   )  raster::writeRaster(   x = exdet_MIC_regional_invaded_126[[\"rasters\"]][[\"mic\"]][[\"all\"]],    filename = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"MIC_slf_regional_invaded_v7_background_projGlobe_2041-2070_ssp126_GFDL.tif\"),   filetype = \"GTiff\",   overwrite = FALSE   )  # also isolate exdet raster exdet_regional_invaded_126 <- exdet_MIC_regional_invaded_126[[\"rasters\"]][[\"ExDet\"]][[\"all\"]]"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"plot-exdet-5","dir":"Articles","previous_headings":"4.regional_invaded- Save/plot ExDet/MIC rasters > 4.2 regional_invaded SSP126","what":"Plot ExDet","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# plot mean raster first exdet_MIC_regional_invaded_126_plot <- map_exdet(   raster = exdet_regional_invaded_126,   raster.df = exdet_MIC_regional_invaded_126[[\"data\"]][[\"all\"]] )  exdet_MIC_regional_invaded_126_plot <- exdet_MIC_regional_invaded_126_plot +   ggnewscale::new_scale_fill() +   # add layer for bg point area   geom_raster(data = regional_invaded_background_area_df, aes(x = x, y = y, fill = \"Background\")) +   # scale 2   scale_fill_manual(name = \"\", values = c(\"Background\" = \"azure4\"), guide = guide_legend(order = 2)) +   theme(legend.key = element_rect(color = \"black\")) +   labs(     title = \"ExDet analysis | bio2, bio11, bio12, bio15 | 2041-2070 | ssp126, GFDL-ESM4\",     subtitle = \"Global climate divergence from 'Ri.NAmerica' model training set\",     fill = \"ExDet Analysis\"     ) ggsave(   exdet_MIC_regional_invaded_126_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"ExDet_slf_regional_invaded_v7_background_projGlobe_2041-2070_ssp126_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"plot-mic-5","dir":"Articles","previous_headings":"4.regional_invaded- Save/plot ExDet/MIC rasters > 4.2 regional_invaded SSP126","what":"Plot MIC","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# plot mean raster first mic_regional_invaded_126_plot <- ggplot() +   # default plot style   map_style_MIC +   # plot regular raster of values first   geom_raster(data = exdet_MIC_regional_invaded_126[[\"data\"]][[\"all\"]], aes(x = x, y = y, fill = as.factor(mic))) +   # fill scale 1   viridis::scale_fill_viridis(name = \"MIC\", discrete = TRUE, labels = c(\"analogous\", \"bio11\", \"bio12\", \"bio15\", \"bio2\"), guide = guide_legend(order = 1)) +   # new scale   ggnewscale::new_scale_fill() +   # add layer for bg point area   geom_raster(data = regional_invaded_background_area_df, aes(x = x, y = y, fill = \"Background\")) +   # scale 2   scale_fill_manual(name = \"\", values = c(\"Background\" = \"azure4\"), guide = guide_legend(order = 2)) +   theme(legend.key = element_rect(color = \"black\")) +   labs(     title = \"Most Influential Covariate (MIC) analysis | 2041-2070 | ssp126 GFDL-ESM4\",     subtitle = \"Covariate causing most extrapolation from 'Ri.NAmerica' model training set\"     ) ggsave(   mic_regional_invaded_126_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"MIC_slf_regional_invaded_v7_background_projGlobe_2041-2070_ssp126_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"save-outputs-6","dir":"Articles","previous_headings":"4.regional_invaded- Save/plot ExDet/MIC rasters > 4.3 regional_invaded SSP370","what":"Save outputs","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# summary of data write_csv(   x = exdet_MIC_regional_invaded_370[[\"data\"]][[\"all\"]],   file = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"regional_invaded_exdet_mic_analysis_results_2041-2070_ssp370_GFDL.csv\")   )  # exdet write_csv(   x = as.data.frame(exdet_MIC_regional_invaded_370[[\"summary\"]][[\"extrapolation\"]]),   file = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"regional_invaded_exdet_analysis_summary_2041-2070_ssp370_GFDL.csv\")   )  # mic univariate write_csv(   x = as.data.frame(exdet_MIC_regional_invaded_370[[\"summary\"]][[\"mic\"]][[1]]),   file = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"regional_invaded_mic_analysis_univariate_summary_2041-2070_ssp370_GFDL.csv\")   )  # mic univariate write_csv(   x = as.data.frame(exdet_MIC_regional_invaded_370[[\"summary\"]][[\"mic\"]][[2]]),   file = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"regional_invaded_mic_analysis_combinatorial_summary_2041-2070_ssp370_GFDL.csv\")   ) # exdet raster::writeRaster(   x = exdet_MIC_regional_invaded_370[[\"rasters\"]][[\"ExDet\"]][[\"all\"]],    filename = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"ExDet_slf_regional_invaded_v7_background_projGlobe_2041-2070_ssp370_GFDL.tif\"),   filetype = \"GTiff\",   overwrite = FALSE   )  raster::writeRaster(   x = exdet_MIC_regional_invaded_370[[\"rasters\"]][[\"mic\"]][[\"all\"]],    filename = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"MIC_slf_regional_invaded_v7_background_projGlobe_2041-2070_ssp370_GFDL.tif\"),   filetype = \"GTiff\",   overwrite = FALSE   )  # also isolate exdet raster exdet_regional_invaded_370 <- exdet_MIC_regional_invaded_370[[\"rasters\"]][[\"ExDet\"]][[\"all\"]]"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"plot-exdet-6","dir":"Articles","previous_headings":"4.regional_invaded- Save/plot ExDet/MIC rasters > 4.3 regional_invaded SSP370","what":"Plot ExDet","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# plot mean raster first exdet_MIC_regional_invaded_370_plot <- map_exdet(   raster = exdet_regional_invaded_370,   raster.df = exdet_MIC_regional_invaded_370[[\"data\"]][[\"all\"]] )  exdet_MIC_regional_invaded_370_plot <- exdet_MIC_regional_invaded_370_plot +   # new scale   ggnewscale::new_scale_fill() +   # add layer for bg point area   geom_raster(data = regional_invaded_background_area_df, aes(x = x, y = y, fill = \"Background\")) +   # scale 2   scale_fill_manual(name = \"\", values = c(\"Background\" = \"azure4\"), guide = guide_legend(order = 2)) +   theme(legend.key = element_rect(color = \"black\")) +   labs(     title = \"ExDet analysis | bio2, bio11, bio12, bio15 | 2041-2070 | ssp370 GFDL-ESM4\",     subtitle = \"Global climate divergence from 'Ri.NAmerica' model training set\",     fill = \"ExDet Analysis\"     ) ggsave(   exdet_MIC_regional_invaded_370_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"ExDet_slf_regional_invaded_v7_background_projGlobe_2041-2070_ssp370_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"plot-mic-6","dir":"Articles","previous_headings":"4.regional_invaded- Save/plot ExDet/MIC rasters > 4.3 regional_invaded SSP370","what":"Plot MIC","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# plot mean raster first mic_regional_invaded_370_plot <- ggplot() +   # default plot style   map_style_MIC +   # plot regular raster of values first   geom_raster(data = exdet_MIC_regional_invaded_370[[\"data\"]][[\"all\"]], aes(x = x, y = y, fill = as.factor(mic))) +   # fill scale 1   viridis::scale_fill_viridis(name = \"MIC\", discrete = TRUE, labels = c(\"analogous\", \"bio11\", \"bio12\", \"bio15\", \"bio2\"), guide = guide_legend(order = 1)) +   # new scale   ggnewscale::new_scale_fill() +   # add layer for bg point area   geom_raster(data = regional_invaded_background_area_df, aes(x = x, y = y, fill = \"Background\")) +   # scale 2   scale_fill_manual(name = \"\", values = c(\"Background\" = \"azure4\"), guide = guide_legend(order = 2)) +   theme(legend.key = element_rect(color = \"black\")) +   labs(     title = \"Most Influential Covariate (MIC) analysis | 2041-2070 | ssp370 GFDL-ESM4\",     subtitle = \"Covariate causing most extrapolation from 'Ri.NAmerica' model training set\"     ) ggsave(   mic_regional_invaded_370_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"MIC_slf_regional_invaded_v7_background_projGlobe_2041-2070_ssp370_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"save-outputs-7","dir":"Articles","previous_headings":"4.regional_invaded- Save/plot ExDet/MIC rasters > 4.4 regional_invaded SSP585","what":"Save outputs","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# summary of data write_csv(   x = exdet_MIC_regional_invaded_585[[\"data\"]][[\"all\"]],   file = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"regional_invaded_exdet_mic_analysis_results_2041-2070_ssp585_GFDL.csv\")   )  # exdet write_csv(   x = as.data.frame(exdet_MIC_regional_invaded_585[[\"summary\"]][[\"extrapolation\"]]),   file = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"regional_invaded_exdet_analysis_summary_2041-2070_ssp585_GFDL.csv\")   )  # mic univariate write_csv(   x = as.data.frame(exdet_MIC_regional_invaded_585[[\"summary\"]][[\"mic\"]][[1]]),   file = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"regional_invaded_mic_analysis_univariate_summary_2041-2070_ssp585_GFDL.csv\")   )  # mic univariate write_csv(   x = as.data.frame(exdet_MIC_regional_invaded_585[[\"summary\"]][[\"mic\"]][[2]]),   file = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"regional_invaded_mic_analysis_combinatorial_summary_2041-2070_ssp585_GFDL.csv\")   ) # exdet raster::writeRaster(   x = exdet_MIC_regional_invaded_585[[\"rasters\"]][[\"ExDet\"]][[\"all\"]],    filename = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"ExDet_slf_regional_invaded_v7_background_projGlobe_2041-2070_ssp585_GFDL.tif\"),   filetype = \"GTiff\",   overwrite = FALSE   )  raster::writeRaster(   x = exdet_MIC_regional_invaded_585[[\"rasters\"]][[\"mic\"]][[\"all\"]],    filename = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"MIC_slf_regional_invaded_v7_background_projGlobe_2041-2070_ssp585_GFDL.tif\"),   filetype = \"GTiff\",   overwrite = FALSE   )  # also isolate exdet raster exdet_regional_invaded_585 <- exdet_MIC_regional_invaded_585[[\"rasters\"]][[\"ExDet\"]][[\"all\"]]"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"plot-exdet-7","dir":"Articles","previous_headings":"4.regional_invaded- Save/plot ExDet/MIC rasters > 4.4 regional_invaded SSP585","what":"Plot ExDet","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# plot mean raster first exdet_MIC_regional_invaded_585_plot <- map_exdet(   raster = exdet_regional_invaded_585,   raster.df = exdet_MIC_regional_invaded_585[[\"data\"]][[\"all\"]] )  exdet_MIC_regional_invaded_585_plot <- exdet_MIC_regional_invaded_585_plot +   # new scale   ggnewscale::new_scale_fill() +   # add layer for bg point area   geom_raster(data = regional_invaded_background_area_df, aes(x = x, y = y, fill = \"Background\")) +   # scale 2   scale_fill_manual(name = \"\", values = c(\"Background\" = \"azure4\"), guide = guide_legend(order = 2)) +   theme(legend.key = element_rect(color = \"black\")) +   labs(     title = \"ExDet analysis | bio2, bio11, bio12, bio15 | 2041-2070 | ssp585 GFDL-ESM4\",     subtitle = \"Global climate divergence from 'Ri.NAmerica' model training set\",     fill = \"ExDet Analysis\"     ) ggsave(   exdet_MIC_regional_invaded_585_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"ExDet_slf_regional_invaded_v7_background_projGlobe_2041-2070_ssp585_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"plot-mic-7","dir":"Articles","previous_headings":"4.regional_invaded- Save/plot ExDet/MIC rasters > 4.4 regional_invaded SSP585","what":"Plot MIC","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# plot mean raster first mic_regional_invaded_585_plot <- ggplot() +   # default plot style   map_style_MIC +   # plot regular raster of values first   geom_raster(data = exdet_MIC_regional_invaded_585[[\"data\"]][[\"all\"]], aes(x = x, y = y, fill = as.factor(mic))) +   # fill scale 1   viridis::scale_fill_viridis(name = \"MIC\", discrete = TRUE, labels = c(\"analogous\", \"bio11\", \"bio12\", \"bio15\", \"bio2\"), guide = guide_legend(order = 1)) +   # new scale   ggnewscale::new_scale_fill() +   # add layer for bg point area   geom_raster(data = regional_invaded_background_area_df, aes(x = x, y = y, fill = \"Background\")) +   # scale 2   scale_fill_manual(name = \"\", values = c(\"Background\" = \"azure4\"), guide = guide_legend(order = 2)) +   theme(legend.key = element_rect(color = \"black\")) +   labs(     title = \"Most Influential Covariate (MIC) analysis | 2041-2070 | ssp585 GFDL-ESM4\",     subtitle = \"Covariate causing most extrapolation from 'Ri.NAmerica' model training set\"     ) ggsave(   mic_regional_invaded_585_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"MIC_slf_regional_invaded_v7_background_projGlobe_2041-2070_ssp585_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":[]},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"save-outputs-8","dir":"Articles","previous_headings":"5. regional_invaded_asian- Save/plot ExDet/MIC rasters > 5.1 regional_invaded_asian hist","what":"Save outputs","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# summary of data write_csv(   x = exdet_MIC_regional_invaded_asian_hist[[\"data\"]][[\"all\"]],   file = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"regional_invaded_asian_exdet_mic_analysis_results.csv\")   )  # exdet write_csv(   x = as.data.frame(exdet_MIC_regional_invaded_asian_hist[[\"summary\"]][[\"extrapolation\"]]),   file = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"regional_invaded_asian_exdet_analysis_summary.csv\")   )  # mic univariate write_csv(   x = as.data.frame(exdet_MIC_regional_invaded_asian_hist[[\"summary\"]][[\"mic\"]][[1]]),   file = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"regional_invaded_asian_mic_analysis_univariate_summary.csv\")   )  # mic univariate write_csv(   x = as.data.frame(exdet_MIC_regional_invaded_asian_hist[[\"summary\"]][[\"mic\"]][[2]]),   file = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"regional_invaded_asian_mic_analysis_combinatorial_summary.csv\")   ) # exdet raster::writeRaster(   x = exdet_MIC_regional_invaded_asian_hist[[\"rasters\"]][[\"ExDet\"]][[\"all\"]],    filename = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"ExDet_slf_regional_invaded_asian_v2_background_projGlobe_1981-2010.tif\"),   filetype = \"GTiff\",   overwrite = FALSE   )  raster::writeRaster(   x = exdet_MIC_regional_invaded_asian_hist[[\"rasters\"]][[\"mic\"]][[\"all\"]],    filename = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"MIC_slf_regional_invaded_asian_v2_background_projGlobe_2981-2010.tif\"),   filetype = \"GTiff\",   overwrite = FALSE   )  # also isolate exdet raster exdet_regional_invaded_asian_hist <- exdet_MIC_regional_invaded_asian_hist[[\"rasters\"]][[\"ExDet\"]][[\"all\"]]"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"plot-exdet-8","dir":"Articles","previous_headings":"5. regional_invaded_asian- Save/plot ExDet/MIC rasters > 5.1 regional_invaded_asian hist","what":"Plot ExDet","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# plot mean raster first exdet_regional_invaded_asian_hist_plot <- map_exdet(   raster = exdet_regional_invaded_asian_hist,   raster.df = exdet_MIC_regional_invaded_asian_hist[[\"data\"]][[\"all\"]] )  exdet_regional_invaded_asian_hist_plot <- exdet_regional_invaded_asian_hist_plot +   # new scale   ggnewscale::new_scale_fill() +   # add layer for bg point area   geom_raster(data = regional_invaded_asian_background_area_df, aes(x = x, y = y, fill = \"Background\")) +   # scale 2   scale_fill_manual(name = \"\", values = c(\"Background\" = \"azure4\"), guide = guide_legend(order = 2)) +   theme(legend.key = element_rect(color = \"black\")) +   labs(     title = \"ExDet analysis | bio2, bio11, bio12 and bio15 | 1981-2010\",     subtitle = \"Global climate divergence from 'Ri.Asia' model training set\",     fill = \"ExDet Analysis\"     ) ggsave(   exdet_regional_invaded_asian_hist_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"ExDet_slf_regional_invaded_asian_v2_background_projGlobe_1981-2010.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"plot-mic-8","dir":"Articles","previous_headings":"5. regional_invaded_asian- Save/plot ExDet/MIC rasters > 5.1 regional_invaded_asian hist","what":"Plot MIC","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# plot mean raster first mic_regional_invaded_asian_hist_plot <- ggplot() +   # default plot style   map_style_MIC +   # plot regular raster of values first   geom_raster(data = exdet_MIC_regional_invaded_asian_hist[[\"data\"]][[\"all\"]], aes(x = x, y = y, fill = as.factor(mic))) +   # fill scale 1   viridis::scale_fill_viridis(name = \"MIC\", discrete = TRUE, labels = c(\"analogous\", \"bio11\", \"bio12\", \"bio15\", \"bio2\"), guide = guide_legend(order = 1)) +   # new scale   ggnewscale::new_scale_fill() +   # add layer for bg point area   geom_raster(data = regional_invaded_asian_background_area_df, aes(x = x, y = y, fill = \"Background\")) +   # scale 2   scale_fill_manual(name = \"\", values = c(\"Background\" = \"azure4\"), guide = guide_legend(order = 2)) +   theme(legend.key = element_rect(color = \"black\")) +   labs(     title = \"Most Influential Covariate (MIC) analysis | 1981-2010\",     subtitle = \"Covariate causing most extrapolation from 'Ri.ASia' model training set\",     fill = \"MIC\"     ) ggsave(   mic_regional_invaded_asian_hist_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"MIC_slf_regional_invaded_asian_v2_background_projGlobe_1981-2010.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"save-outputs-9","dir":"Articles","previous_headings":"5. regional_invaded_asian- Save/plot ExDet/MIC rasters > 5.2 regional_invaded_asian- SSP126","what":"Save outputs","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# summary of data write_csv(   x = exdet_MIC_regional_invaded_asian_126[[\"data\"]][[\"all\"]],   file = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"regional_invaded_asian_exdet_mic_analysis_results_2041-2070_ssp126_GFDL.csv\")   )  # exdet write_csv(   x = as.data.frame(exdet_MIC_regional_invaded_asian_126[[\"summary\"]][[\"extrapolation\"]]),   file = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"regional_invaded_asian_exdet_analysis_summary_2041-2070_ssp126_GFDL.csv\")   )  # mic univariate write_csv(   x = as.data.frame(exdet_MIC_regional_invaded_asian_126[[\"summary\"]][[\"mic\"]][[1]]),   file = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"regional_invaded_asian_mic_analysis_univariate_summary_2041-2070_ssp126_GFDL.csv\")   )  # mic univariate write_csv(   x = as.data.frame(exdet_MIC_regional_invaded_asian_126[[\"summary\"]][[\"mic\"]][[2]]),   file = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"regional_invaded_asian_mic_analysis_combinatorial_summary_2041-2070_ssp126_GFDL.csv\")   ) # exdet raster::writeRaster(   x = exdet_MIC_regional_invaded_asian_126[[\"rasters\"]][[\"ExDet\"]][[\"all\"]],    filename = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"ExDet_slf_regional_invaded_asian_v2_background_projGlobe_2041-2070_ssp126_GFDL.tif\"),   filetype = \"GTiff\",   overwrite = FALSE   )  raster::writeRaster(   x = exdet_MIC_regional_invaded_asian_126[[\"rasters\"]][[\"mic\"]][[\"all\"]],    filename = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"MIC_slf_regional_invaded_asian_v2_background_projGlobe_2041-2070_ssp126_GFDL.tif\"),   filetype = \"GTiff\",   overwrite = FALSE   )  # also isolate exdet raster exdet_regional_invaded_asian_126 <- exdet_MIC_regional_invaded_asian_126[[\"rasters\"]][[\"ExDet\"]][[\"all\"]]"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"plot-exdet-9","dir":"Articles","previous_headings":"5. regional_invaded_asian- Save/plot ExDet/MIC rasters > 5.2 regional_invaded_asian- SSP126","what":"Plot ExDet","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# plot mean raster first exdet_MIC_regional_invaded_asian_126_plot <- map_exdet(   raster = exdet_regional_invaded_asian_126,   raster.df =  exdet_MIC_regional_invaded_asian_126[[\"data\"]][[\"all\"]] )  exdet_MIC_regional_invaded_asian_126_plot <- exdet_MIC_regional_invaded_asian_126_plot +   # new scale   ggnewscale::new_scale_fill() +   # add layer for bg point area   geom_raster(data = regional_invaded_asian_background_area_df, aes(x = x, y = y, fill = \"Background\")) +   # scale 2   scale_fill_manual(name = \"\", values = c(\"Background\" = \"azure4\"), guide = guide_legend(order = 2)) +   theme(legend.key = element_rect(color = \"black\")) +   labs(     title = \"ExDet analysis | bio2, bio11, bio12, bio15 | 2041-2070 | ssp126 GFDL-ESM4\",     subtitle = \"Global climate divergence from 'Ri.Asia' model training set\",     fill = \"ExDet Analysis\"     ) ggsave(   exdet_MIC_regional_invaded_asian_126_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"ExDet_slf_regional_invaded_asian_v2_background_projGlobe_2041-2070_ssp126_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"plot-mic-9","dir":"Articles","previous_headings":"5. regional_invaded_asian- Save/plot ExDet/MIC rasters > 5.2 regional_invaded_asian- SSP126","what":"Plot MIC","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# plot mean raster first mic_regional_invaded_asian_126_plot <- ggplot() +   # default plot style   map_style_MIC +   # plot regular raster of values first   geom_raster(data = exdet_MIC_regional_invaded_asian_126[[\"data\"]][[\"all\"]], aes(x = x, y = y, fill = as.factor(mic))) +   # fill scale 1   viridis::scale_fill_viridis(name = \"MIC\", discrete = TRUE, labels = c(\"analogous\", \"bio11\", \"bio12\", \"bio15\", \"bio2\"), guide = guide_legend(order = 1)) +   # new scale   ggnewscale::new_scale_fill() +   # add layer for bg point area   geom_raster(data = regional_invaded_asian_background_area_df, aes(x = x, y = y, fill = \"Background\")) +   # scale 2   scale_fill_manual(name = \"\", values = c(\"Background\" = \"azure4\"), guide = guide_legend(order = 2)) +   labs(     title = \"Most Influential Covariate (MIC) analysis | 2041-2070 | ssp126 GFDL-ESM4\",     subtitle = \"Covariate causing most extrapolation from 'Ri.Asia' model training set\",     fill = \"MIC\"     ) ggsave(   mic_regional_invaded_asian_126_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"MIC_slf_regional_invaded_asian_v2_background_projGlobe_2041-2070_ssp126_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"save-outputs-10","dir":"Articles","previous_headings":"5. regional_invaded_asian- Save/plot ExDet/MIC rasters > 5.3 regional_invaded_asian- SSP370","what":"Save outputs","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# summary of data write_csv(   x = exdet_MIC_regional_invaded_asian_370[[\"data\"]][[\"all\"]],   file = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"regional_invaded_asian_exdet_mic_analysis_results_2041-2070_ssp370_GFDL.csv\")   )  # exdet write_csv(   x = as.data.frame(exdet_MIC_regional_invaded_asian_370[[\"summary\"]][[\"extrapolation\"]]),   file = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"regional_invaded_asian_exdet_analysis_summary_2041-2070_ssp370_GFDL.csv\")   )  # mic univariate write_csv(   x = as.data.frame(exdet_MIC_regional_invaded_asian_370[[\"summary\"]][[\"mic\"]][[1]]),   file = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"regional_invaded_asian_mic_analysis_univariate_summary_2041-2070_ssp370_GFDL.csv\")   )  # mic univariate write_csv(   x = as.data.frame(exdet_MIC_regional_invaded_asian_370[[\"summary\"]][[\"mic\"]][[2]]),   file = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"regional_invaded_asian_mic_analysis_combinatorial_summary_2041-2070_ssp370_GFDL.csv\")   ) # exdet raster::writeRaster(   x = exdet_MIC_regional_invaded_asian_370[[\"rasters\"]][[\"ExDet\"]][[\"all\"]],    filename = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"ExDet_slf_regional_invaded_asian_v2_background_projGlobe_2041-2070_ssp370_GFDL.tif\"),   filetype = \"GTiff\",   overwrite = FALSE   )  raster::writeRaster(   x = exdet_MIC_regional_invaded_asian_370[[\"rasters\"]][[\"mic\"]][[\"all\"]],    filename = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"MIC_slf_regional_invaded_asian_v2_background_projGlobe_2041-2070_ssp370_GFDL.tif\"),   filetype = \"GTiff\",   overwrite = FALSE   )  # also isolate exdet raster exdet_regional_invaded_asian_370 <- exdet_MIC_regional_invaded_asian_370[[\"rasters\"]][[\"ExDet\"]][[\"all\"]]"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"plot-exdet-10","dir":"Articles","previous_headings":"5. regional_invaded_asian- Save/plot ExDet/MIC rasters > 5.3 regional_invaded_asian- SSP370","what":"Plot ExDet","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# plot mean raster first exdet_MIC_regional_invaded_asian_370_plot <- map_exdet(   raster = exdet_regional_invaded_asian_370,   raster.df = exdet_MIC_regional_invaded_asian_370[[\"data\"]][[\"all\"]] )  exdet_MIC_regional_invaded_asian_370_plot <- exdet_MIC_regional_invaded_asian_370_plot +   # new scale   ggnewscale::new_scale_fill() +   # add layer for bg point area   geom_raster(data = regional_invaded_asian_background_area_df, aes(x = x, y = y, fill = \"Background\")) +   # scale 2   scale_fill_manual(name = \"\", values = c(\"Background\" = \"azure4\"), guide = guide_legend(order = 2)) +   theme(legend.key = element_rect(color = \"black\")) +   labs(     title = \"ExDet analysis | bio2, bio11, bio12, bio15 | 2041-2070 | ssp370 GFDL-ESM4\",     subtitle = \"Global climate divergence from 'Ri.Asia' model training set\",     fill = \"ExDet Analysis\"     ) ggsave(   exdet_MIC_regional_invaded_asian_370_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"ExDet_slf_regional_invaded_asian_v2_background_projGlobe_2041-2070_ssp370_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"plot-mic-10","dir":"Articles","previous_headings":"5. regional_invaded_asian- Save/plot ExDet/MIC rasters > 5.3 regional_invaded_asian- SSP370","what":"Plot MIC","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# plot mean raster first mic_regional_invaded_asian_370_plot <- ggplot() +   # default plot style   map_style_MIC +   # plot regular raster of values first   geom_raster(data = exdet_MIC_regional_invaded_asian_370[[\"data\"]][[\"all\"]], aes(x = x, y = y, fill = as.factor(mic))) +   # fill scale 1   viridis::scale_fill_viridis(name = \"MIC\", discrete = TRUE, labels = c(\"analogous\", \"bio11\", \"bio12\", \"bio15\", \"bio2\"), guide = guide_legend(order = 1)) +   # new scale   ggnewscale::new_scale_fill() +   # add layer for bg point area   geom_raster(data = regional_invaded_asian_background_area_df, aes(x = x, y = y, fill = \"Background\")) +   # scale 2   scale_fill_manual(name = \"\", values = c(\"Background\" = \"azure4\"), guide = guide_legend(order = 2)) +   labs(     title = \"Most Influential Covariate (MIC) analysis | 2041-2070 | ssp370 GFDL-ESM4\",     subtitle = \"Covariate causing most extrapolation from 'Ri.Asia'model training set\",     fill = \"MIC\"     ) ggsave(   mic_regional_invaded_asian_370_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"MIC_slf_regional_invaded_asian_v2_background_projGlobe_2041-2070_ssp370_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"save-outputs-11","dir":"Articles","previous_headings":"5. regional_invaded_asian- Save/plot ExDet/MIC rasters > 5.4 regional_invaded_asian- SSP585","what":"Save outputs","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# summary of data write_csv(   x = exdet_MIC_regional_invaded_asian_585[[\"data\"]][[\"all\"]],   file = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"regional_invaded_asian_exdet_mic_analysis_results_2041-2070_ssp585_GFDL.csv\")   )  # exdet write_csv(   x = as.data.frame(exdet_MIC_regional_invaded_asian_585[[\"summary\"]][[\"extrapolation\"]]),   file = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"regional_invaded_asian_exdet_analysis_summary_2041-2070_ssp585_GFDL.csv\")   )  # mic univariate write_csv(   x = as.data.frame(exdet_MIC_regional_invaded_asian_585[[\"summary\"]][[\"mic\"]][[1]]),   file = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"regional_invaded_asian_mic_analysis_univariate_summary_2041-2070_ssp585_GFDL.csv\")   )  # mic univariate write_csv(   x = as.data.frame(exdet_MIC_regional_invaded_asian_585[[\"summary\"]][[\"mic\"]][[2]]),   file = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"regional_invaded_asian_mic_analysis_combinatorial_summary_2041-2070_ssp585_GFDL.csv\")   ) # exdet raster::writeRaster(   x = exdet_MIC_regional_invaded_asian_585[[\"rasters\"]][[\"ExDet\"]][[\"all\"]],    filename = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"ExDet_slf_regional_invaded_asian_v2_background_projGlobe_2041-2070_ssp585_GFDL.tif\"),   filetype = \"GTiff\",   overwrite = FALSE   )  raster::writeRaster(   x = exdet_MIC_regional_invaded_asian_585[[\"rasters\"]][[\"mic\"]][[\"all\"]],    filename = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"MIC_slf_regional_invaded_asian_v2_background_projGlobe_2041-2070_ssp585_GFDL.tif\"),   filetype = \"GTiff\",   overwrite = FALSE   )  # also isolate exdet raster exdet_regional_invaded_asian_585 <- exdet_MIC_regional_invaded_asian_585[[\"rasters\"]][[\"ExDet\"]][[\"all\"]]"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"plot-exdet-11","dir":"Articles","previous_headings":"5. regional_invaded_asian- Save/plot ExDet/MIC rasters > 5.4 regional_invaded_asian- SSP585","what":"Plot ExDet","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# plot mean raster first exdet_MIC_regional_invaded_asian_585_plot <- map_exdet(   raster = exdet_regional_invaded_asian_585,   raster.df = exdet_MIC_regional_invaded_asian_585[[\"data\"]][[\"all\"]] )  exdet_MIC_regional_invaded_asian_585_plot <- exdet_MIC_regional_invaded_asian_585_plot +   # new scale   ggnewscale::new_scale_fill() +   # add layer for bg point area   geom_raster(data = regional_invaded_asian_background_area_df, aes(x = x, y = y, fill = \"Background\")) +   # scale 2   scale_fill_manual(name = \"\", values = c(\"Background\" = \"azure4\"), guide = guide_legend(order = 2)) +   theme(legend.key = element_rect(color = \"black\")) +   labs(     title = \"ExDet analysis | bio2, bio11, bio12, bio15 | 2041-2070 | ssp585 GFDL-ESM4\",     subtitle = \"Global climate divergence from 'Ri.Asia' model training set\",     fill = \"ExDet Analysis\"     ) ggsave(   exdet_MIC_regional_invaded_asian_585_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"ExDet_slf_regional_invaded_asian_v2_background_projGlobe_2041-2070_ssp585_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"plot-mic-11","dir":"Articles","previous_headings":"5. regional_invaded_asian- Save/plot ExDet/MIC rasters > 5.4 regional_invaded_asian- SSP585","what":"Plot MIC","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# plot mean raster first mic_regional_invaded_asian_585_plot <- ggplot() +   # default plot style   map_style_MIC +   # plot regular raster of values first   geom_raster(data = exdet_MIC_regional_invaded_asian_585[[\"data\"]][[\"all\"]], aes(x = x, y = y, fill = as.factor(mic))) +   # fill scale 1   viridis::scale_fill_viridis(name = \"MIC\", discrete = TRUE, labels = c(\"analogous\", \"bio11\", \"bio12\", \"bio15\", \"bio2\"), guide = guide_legend(order = 1)) +   # new scale   ggnewscale::new_scale_fill() +   # add layer for bg point area   geom_raster(data = regional_invaded_asian_background_area_df, aes(x = x, y = y, fill = \"Background\")) +   # scale 2   scale_fill_manual(name = \"\", values = c(\"Background\" = \"azure4\"), guide = guide_legend(order = 2)) +   labs(     title = \"Most Influential Covariate (MIC) analysis | 2041-2070 | ssp585 GFDL-ESM4\",     subtitle = \"Covariate causing most extrapolation from 'Ri.Asia' model training set\",     fill = \"MIC\"     ) ggsave(   mic_regional_invaded_asian_585_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"MIC_slf_regional_invaded_asian_v2_background_projGlobe_2041-2070_ssp585_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"global-hist","dir":"Articles","previous_headings":"6. global- Save/plot ExDet/MIC rasters","what":"6.1. global hist","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"First, save summary files analysis model folder.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"save-outputs-12","dir":"Articles","previous_headings":"6. global- Save/plot ExDet/MIC rasters > 6.1. global hist","what":"Save outputs","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"Next, save output rasters.","code":"# summary of data write_csv(   x = exdet_MIC_global_hist[[\"data\"]][[\"all\"]],   file = file.path(mypath, \"models\", \"slf_global_v3\", \"exdet_mic_analysis_results.csv\")   )  # exdet write_csv(   x = as.data.frame(exdet_MIC_global_hist[[\"summary\"]][[\"extrapolation\"]]),   file = file.path(mypath, \"models\", \"slf_global_v3\", \"exdet_analysis_summary.csv\")   )  # mic univariate write_csv(   x = as.data.frame(exdet_MIC_global_hist[[\"summary\"]][[\"mic\"]][[1]]),   file = file.path(mypath, \"models\", \"slf_global_v3\", \"mic_analysis_univariate_summary.csv\")   )  # mic univariate write_csv(   x = as.data.frame(exdet_MIC_global_hist[[\"summary\"]][[\"mic\"]][[2]]),   file = file.path(mypath, \"models\", \"slf_global_v3\", \"mic_analysis_combinatorial_summary.csv\")   ) # exdet raster::writeRaster(   x = exdet_MIC_global_hist[[\"rasters\"]][[\"ExDet\"]][[\"all\"]],    filename = file.path(mypath, \"models\", \"slf_global_v3\", \"ExDet_slf_global_v3_background_projGlobe_1981-2010.tif\"),   filetype = \"GTiff\",   overwrite = FALSE   )  raster::writeRaster(   x = exdet_MIC_global_hist[[\"rasters\"]][[\"mic\"]][[\"all\"]],    filename = file.path(mypath, \"models\", \"slf_global_v3\", \"MIC_slf_global_v3_background_projGlobe_1981-2010.tif\"),   filetype = \"GTiff\",   overwrite = FALSE   )  # also isolate exdet raster exdet_global_hist <- exdet_MIC_global_hist[[\"rasters\"]][[\"ExDet\"]][[\"all\"]]"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"plot-exdet-12","dir":"Articles","previous_headings":"6. global- Save/plot ExDet/MIC rasters > 6.1. global hist","what":"Plot ExDet","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"Finally, create plots ExDet MIC analyses.","code":"# plot mean raster first exdet_global_hist_plot <- map_exdet(   raster = exdet_global_hist,   raster.df = exdet_MIC_global_hist[[\"data\"]][[\"all\"]] ) +   # labels   labs(     title = \"ExDet analysis | bio2, bio11, bio12 and bio15 | 1981-2010\",     subtitle = \"Global climate divergence from 'global' model training set\",     fill = \"ExDet Analysis\"     ) ggsave(   exdet_global_hist_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"ExDet_slf_global_v3_background_projGlobe_1981-2010.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"plot-mic-12","dir":"Articles","previous_headings":"6. global- Save/plot ExDet/MIC rasters > 6.1. global hist","what":"Plot MIC","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# plot mean raster first mic_global_hist_plot <- ggplot() +   # default plot style   map_style_MIC +   # plot regular raster of values first   geom_raster(data = exdet_MIC_global_hist[[\"data\"]][[\"all\"]], aes(x = x, y = y, fill = as.factor(mic))) +   # fill scale 1   viridis::scale_fill_viridis(name = \"MIC\", discrete = TRUE, labels = c(\"analogous\", \"bio11\", \"bio12\", \"bio15\", \"bio2\"), guide = guide_legend(order = 1)) +   labs(     title = \"Most Influential Covariate (MIC) analysis | 1981-2010\",     subtitle = \"Covariate causing most extrapolation from 'global' model training set\",     fill = \"MIC\"     ) ggsave(   mic_global_hist_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"MIC_slf_global_v3_background_projGlobe_1981-2010.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"save-outputs-13","dir":"Articles","previous_headings":"6. global- Save/plot ExDet/MIC rasters > 6.2 global SSP126","what":"Save outputs","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# summary of data write_csv(   x = exdet_MIC_global_126[[\"data\"]][[\"all\"]],   file = file.path(mypath, \"models\", \"slf_global_v3\", \"exdet_mic_analysis_results_2041-2070_ssp126_GFDL.csv\")   )  # exdet write_csv(   x = as.data.frame(exdet_MIC_global_126[[\"summary\"]][[\"extrapolation\"]]),   file = file.path(mypath, \"models\", \"slf_global_v3\", \"exdet_analysis_summary_2041-2070_ssp126_GFDL.csv\")   )  # mic univariate write_csv(   x = as.data.frame(exdet_MIC_global_126[[\"summary\"]][[\"mic\"]][[1]]),   file = file.path(mypath, \"models\", \"slf_global_v3\", \"mic_analysis_univariate_summary_2041-2070_ssp126_GFDL.csv\")   )  # mic univariate write_csv(   x = as.data.frame(exdet_MIC_global_126[[\"summary\"]][[\"mic\"]][[2]]),   file = file.path(mypath, \"models\", \"slf_global_v3\", \"mic_analysis_combinatorial_summary_2041-2070_ssp126_GFDL.csv\")   ) # exdet raster::writeRaster(   x = exdet_MIC_global_126[[\"rasters\"]][[\"ExDet\"]][[\"all\"]],    filename = file.path(mypath, \"models\", \"slf_global_v3\", \"ExDet_slf_global_v3_background_projGlobe_2041-2070_ssp126_GFDL.tif\"),   filetype = \"GTiff\",   overwrite = FALSE   )  raster::writeRaster(   x = exdet_MIC_global_126[[\"rasters\"]][[\"mic\"]][[\"all\"]],    filename = file.path(mypath, \"models\", \"slf_global_v3\", \"MIC_slf_global_v3_background_projGlobe_2041-2070_ssp126_GFDL.tif\"),   filetype = \"GTiff\",   overwrite = FALSE   )  # also isolate exdet raster exdet_global_126 <- exdet_MIC_global_126[[\"rasters\"]][[\"ExDet\"]][[\"all\"]]"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"plot-exdet-13","dir":"Articles","previous_headings":"6. global- Save/plot ExDet/MIC rasters > 6.2 global SSP126","what":"Plot ExDet","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# plot mean raster first exdet_global_126_plot <- map_exdet(   raster = exdet_global_126,   raster.df = exdet_MIC_global_126[[\"data\"]][[\"all\"]] ) +   # labels   labs(     title = \"ExDet analysis | bio2, bio11, bio12, bio15 | 2041-2070 | ssp126 GFDL-ESM4\",     subtitle = \"Global climate divergence from 'global' model training set\",     fill = \"ExDet Analysis\"     ) ggsave(   exdet_global_126_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"ExDet_slf_global_v3_background_projGlobe_2041-2070_ssp126_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"plot-mic-13","dir":"Articles","previous_headings":"6. global- Save/plot ExDet/MIC rasters > 6.2 global SSP126","what":"Plot MIC","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# plot mean raster first mic_global_126_plot <- ggplot() +   # default plot style   map_style_MIC +   # plot regular raster of values first   geom_raster(data = exdet_MIC_global_126[[\"data\"]][[\"all\"]], aes(x = x, y = y, fill = as.factor(mic))) +   # fill scale 1   viridis::scale_fill_viridis(name = \"MIC\", discrete = TRUE, labels = c(\"analogous\", \"bio11\", \"bio12\", \"bio15\", \"bio2\"), guide = guide_legend(order = 1)) +   labs(     title = \"Most Influential Covariate (MIC) analysis | 2041-2070 | ssp126 GFDL-ESM4\",     subtitle = \"Covariate causing most extrapolation from 'global' model training set\",     fill = \"MIC\"     ) ggsave(   mic_global_126_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"MIC_slf_global_v3_background_projGlobe_2041-2070_ssp126_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"save-outputs-14","dir":"Articles","previous_headings":"6. global- Save/plot ExDet/MIC rasters > 6.3 global SSP370","what":"Save outputs","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# summary of data write_csv(   x = exdet_MIC_global_370[[\"data\"]][[\"all\"]],   file = file.path(mypath, \"models\", \"slf_global_v3\", \"exdet_mic_analysis_results_2041-2070_ssp370_GFDL.csv\")   )  # exdet write_csv(   x = as.data.frame(exdet_MIC_global_370[[\"summary\"]][[\"extrapolation\"]]),   file = file.path(mypath, \"models\", \"slf_global_v3\", \"exdet_analysis_summary_2041-2070_ssp370_GFDL.csv\")   )  # mic univariate write_csv(   x = as.data.frame(exdet_MIC_global_370[[\"summary\"]][[\"mic\"]][[1]]),   file = file.path(mypath, \"models\", \"slf_global_v3\", \"mic_analysis_univariate_summary_2041-2070_ssp370_GFDL.csv\")   )  # mic univariate write_csv(   x = as.data.frame(exdet_MIC_global_370[[\"summary\"]][[\"mic\"]][[2]]),   file = file.path(mypath, \"models\", \"slf_global_v3\", \"mic_analysis_combinatorial_summary_2041-2070_ssp370_GFDL.csv\")   ) # exdet raster::writeRaster(   x = exdet_MIC_global_370[[\"rasters\"]][[\"ExDet\"]][[\"all\"]],    filename = file.path(mypath, \"models\", \"slf_global_v3\", \"ExDet_slf_global_v3_background_projGlobe_2041-2070_ssp370_GFDL.tif\"),   filetype = \"GTiff\",   overwrite = FALSE   )  raster::writeRaster(   x = exdet_MIC_global_370[[\"rasters\"]][[\"mic\"]][[\"all\"]],    filename = file.path(mypath, \"models\", \"slf_global_v3\", \"MIC_slf_global_v3_background_projGlobe_2041-2070_ssp370_GFDL.tif\"),   filetype = \"GTiff\",   overwrite = FALSE   )  # also isolate exdet raster exdet_global_370 <- exdet_MIC_global_370[[\"rasters\"]][[\"ExDet\"]][[\"all\"]]"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"plot-exdet-14","dir":"Articles","previous_headings":"6. global- Save/plot ExDet/MIC rasters > 6.3 global SSP370","what":"Plot ExDet","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# plot mean raster first exdet_global_370_plot <- map_exdet(   raster = exdet_global_370,   raster.df = exdet_MIC_global_370[[\"data\"]][[\"all\"]] )   labs(     title = \"ExDet analysis | bio2, bio11, bio12, bio15 | 2041-2070 | ssp370 GFDL-ESM4\",     subtitle = \"Global climate divergence from 'global' model training set\",     fill = \"ExDet Analysis\"     ) ggsave(   exdet_global_370_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"ExDet_slf_global_v3_background_projGlobe_2041-2070_ssp370_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"plot-mic-14","dir":"Articles","previous_headings":"6. global- Save/plot ExDet/MIC rasters > 6.3 global SSP370","what":"Plot MIC","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# plot mean raster first mic_global_370_plot <- ggplot() +   # default plot style   map_style_MIC +   # plot regular raster of values first   geom_raster(data = exdet_MIC_global_370[[\"data\"]][[\"all\"]], aes(x = x, y = y, fill = as.factor(mic))) +   # fill scale 1   viridis::scale_fill_viridis(name = \"MIC\", discrete = TRUE, labels = c(\"analogous\", \"bio11\", \"bio12\", \"bio15\", \"bio2\"), guide = guide_legend(order = 1)) +   labs(     title = \"Most Influential Covariate (MIC) analysis | 2041-2070 | ssp370 GFDL-ESM4\",     subtitle = \"Covariate causing most extrapolation from 'global' model training set\",     fill = \"MIC\"     ) ggsave(   mic_global_370_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"MIC_slf_global_v3_background_projGlobe_2041-2070_ssp370_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"save-outputs-15","dir":"Articles","previous_headings":"6. global- Save/plot ExDet/MIC rasters > 6.4 global SSP585","what":"Save outputs","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# summary of data write_csv(   x = exdet_MIC_global_585[[\"data\"]][[\"all\"]],   file = file.path(mypath, \"models\", \"slf_global_v3\", \"exdet_mic_analysis_results_2041-2070_ssp585_GFDL.csv\")   )  # exdet write_csv(   x = as.data.frame(exdet_MIC_global_585[[\"summary\"]][[\"extrapolation\"]]),   file = file.path(mypath, \"models\", \"slf_global_v3\", \"exdet_analysis_summary_2041-2070_ssp585_GFDL.csv\")   )  # mic univariate write_csv(   x = as.data.frame(exdet_MIC_global_585[[\"summary\"]][[\"mic\"]][[1]]),   file = file.path(mypath, \"models\", \"slf_global_v3\", \"mic_analysis_univariate_summary_2041-2070_ssp585_GFDL.csv\")   )  # mic univariate write_csv(   x = as.data.frame(exdet_MIC_global_585[[\"summary\"]][[\"mic\"]][[2]]),   file = file.path(mypath, \"models\", \"slf_global_v3\", \"mic_analysis_combinatorial_summary_2041-2070_ssp585_GFDL.csv\")   ) # exdet raster::writeRaster(   x = exdet_MIC_global_585[[\"rasters\"]][[\"ExDet\"]][[\"all\"]],    filename = file.path(mypath, \"models\", \"slf_global_v3\", \"ExDet_slf_global_v3_background_projGlobe_2041-2070_ssp585_GFDL.tif\"),   filetype = \"GTiff\",   overwrite = FALSE   )  raster::writeRaster(   x = exdet_MIC_global_585[[\"rasters\"]][[\"mic\"]][[\"all\"]],    filename = file.path(mypath, \"models\", \"slf_global_v3\", \"MIC_slf_global_v3_background_projGlobe_2041-2070_ssp585_GFDL.tif\"),   filetype = \"GTiff\",   overwrite = FALSE   )  # also isolate exdet raster exdet_global_585 <- exdet_MIC_global_585[[\"rasters\"]][[\"ExDet\"]][[\"all\"]]"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"plot-exdet-15","dir":"Articles","previous_headings":"6. global- Save/plot ExDet/MIC rasters > 6.4 global SSP585","what":"Plot ExDet","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# plot mean raster first exdet_global_585_plot <- map_exdet(   raster = exdet_global_585,   raster.df = exdet_MIC_global_585[[\"data\"]][[\"all\"]] ) +   labs(     title = \"ExDet analysis | bio2, bio11, bio12, bio15 | 2041-2070 | ssp585 GFDL-ESM4\",     subtitle = \"Global climate divergence from 'global' model training set\",     fill = \"ExDet Analysis\"     ) ggsave(   exdet_global_585_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"ExDet_slf_global_v3_background_projGlobe_2041-2070_ssp585_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"plot-mic-15","dir":"Articles","previous_headings":"6. global- Save/plot ExDet/MIC rasters > 6.4 global SSP585","what":"Plot MIC","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"# plot mean raster first mic_global_585_plot <- ggplot() +   # default plot style   map_style_MIC +   # plot regular raster of values first   geom_raster(data = exdet_MIC_global_585[[\"data\"]][[\"all\"]], aes(x = x, y = y, fill = as.factor(mic))) +   # fill scale 1   viridis::scale_fill_viridis(name = \"MIC\", discrete = TRUE, labels = c(\"analogous\", \"bio11\", \"bio12\", \"bio15\", \"bio2\"), guide = guide_legend(order = 1)) +   labs(     title = \"Most Influential Covariate (MIC) analysis | 2041-2070 | ssp585 GFDL-ESM4\",     subtitle = \"Covariate causing most extrapolation from 'global' model training set\",     fill = \"MIC\"     ) ggsave(   mic_global_585_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"MIC_slf_global_v3_background_projGlobe_2041-2070_ssp585_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"Bouchet, P. J., Miller, D. L., Roberts, J. J., Mannocci, L., Harris, C. M., & Thomas, L. (2020). dsmextra: Extrapolation assessment tools density surface models. Methods Ecology Evolution, 11(11), 1464–1469. https://doi.org/10.1111/2041-210X.13469 Elith, J., Kearney, M., & Phillips, S. (2010). art modelling range-shifting species. Methods Ecology Evolution, 1(4), 330–342. https://doi.org/10.1111/j.2041-210X.2010.00036.x Mesgaran, M. B., Cousens, R. D., & Webber, B. L. (2014). dragons: tool quantifying novelty due covariate range correlation change projecting species distribution models. Diversity Distributions, 20(10), 1147–1159. https://doi.org/10.1111/ddi.12209","code":""},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/100_run_ExDet_MIC.html","id":"patchwork-plots--mic","dir":"Articles","previous_headings":"Appendix","what":"Patchwork plots- MIC","title":"Run an Extrapolation Detection (NT2) analysis and calculate MIC","text":"","code":"mic_regional_native_hist_plot <- mic_regional_native_hist_plot +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"A\") +   scale_x_continuous(expand = c(0, 0)) +   scale_y_continuous(expand = c(0, 0)) +   theme(     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.1),     plot.tag = element_text(face = \"bold\", size = 25)     )  # CMIP6 mic_regional_native_126_plot <- mic_regional_native_126_plot +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"B\") +   scale_x_continuous(expand = c(0, 0)) +   scale_y_continuous(expand = c(0, 0))  +   theme(     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.1),     plot.tag = element_text(face = \"bold\", size = 25)   )  mic_regional_native_370_plot <- mic_regional_native_370_plot +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"C\") +   scale_x_continuous(expand = c(0, 0)) +   scale_y_continuous(expand = c(0, 0))  +   theme(     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.1),     plot.tag = element_text(face = \"bold\", size = 25)   )  mic_regional_native_585_plot <- mic_regional_native_585_plot +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"D\") +   scale_x_continuous(expand = c(0, 0)) +   scale_y_continuous(expand = c(0, 0))  +   theme(     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.1),     plot.tag = element_text(face = \"bold\", size = 25)   )     mic_regional_native_patchwork <- (   mic_regional_native_hist_plot / mic_regional_native_126_plot /   mic_regional_native_370_plot / mic_regional_native_585_plot     ) +   plot_layout(axes = \"collect\", axis_titles = \"collect\", guides = \"collect\") +   plot_annotation(     title = \"Most Influential Covariate (MIC) for 'Rn (native)' model for (A) Present and 2055 climate change scenarios\\n(B) SSP126 (C) SSP370 (D) SSP585\",     subtitle = \"Covariate causing most extrapolation from model training set\"     ) &   theme(legend.position = \"bottom\") ggsave(   mic_regional_native_patchwork,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"MIC_slf_native_v3_background_projGlobe_patchwork.jpg\"),   height = 14,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   ) mic_regional_invaded_hist_plot <- mic_regional_invaded_hist_plot +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"A\") +   scale_x_continuous(expand = c(0, 0)) +   scale_y_continuous(expand = c(0, 0)) +   theme(     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.1),     plot.tag = element_text(face = \"bold\", size = 25)     )  # CMIP6 mic_regional_invaded_126_plot <- mic_regional_invaded_126_plot +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"B\") +   scale_x_continuous(expand = c(0, 0)) +   scale_y_continuous(expand = c(0, 0))  +   theme(     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.1),     plot.tag = element_text(face = \"bold\", size = 25)   )   mic_regional_invaded_370_plot <- mic_regional_invaded_370_plot +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"C\") +   scale_x_continuous(expand = c(0, 0)) +   scale_y_continuous(expand = c(0, 0))  +   theme(     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.1),     plot.tag = element_text(face = \"bold\", size = 25)   )   mic_regional_invaded_585_plot <- mic_regional_invaded_585_plot +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"D\") +   scale_x_continuous(expand = c(0, 0)) +   scale_y_continuous(expand = c(0, 0))  +   theme(     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.1),     plot.tag = element_text(face = \"bold\", size = 25)   )   mic_regional_invaded_patchwork <- (   mic_regional_invaded_hist_plot / mic_regional_invaded_126_plot /   mic_regional_invaded_370_plot / mic_regional_invaded_585_plot   ) +   plot_layout(axes = \"collect\", axis_titles = \"collect\", guides = \"collect\") +   plot_annotation(     title = \"Most Influential Covariate (MIC) for 'Ri.NAmerica' model for (A) Present and 2055 climate change scenarios\\n(B) SSP126 (C) SSP370 (D) SSP585\",     subtitle = \"Covariate causing most extrapolation from model training set\"     ) &   theme(legend.position = \"bottom\") ggsave(   mic_regional_invaded_patchwork,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"MIC_slf_invaded_v7_background_projGlobe_patchwork.jpg\"),   height = 14,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   ) mic_regional_invaded_asian_hist_plot <- mic_regional_invaded_asian_hist_plot +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"A\") +   scale_x_continuous(expand = c(0, 0)) +   scale_y_continuous(expand = c(0, 0)) +   theme(     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.1),     plot.tag = element_text(face = \"bold\", size = 25),     legend.position = \"none\"     )  # CMIP6 mic_regional_invaded_asian_126_plot <- mic_regional_invaded_asian_126_plot +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"B\") +   scale_x_continuous(expand = c(0, 0)) +   scale_y_continuous(expand = c(0, 0)) +   theme(     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.1),     plot.tag = element_text(face = \"bold\", size = 25),     legend.position = \"bottom\"   )   mic_regional_invaded_asian_370_plot <- mic_regional_invaded_asian_370_plot +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"C\") +   scale_x_continuous(expand = c(0, 0)) +   scale_y_continuous(expand = c(0, 0)) +   theme(     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.1),     plot.tag = element_text(face = \"bold\", size = 25),     legend.position = \"bottom\"   )    mic_regional_invaded_asian_585_plot <- mic_regional_invaded_asian_585_plot +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"D\") +   scale_x_continuous(expand = c(0, 0)) +   scale_y_continuous(expand = c(0, 0)) +   theme(     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.1),     plot.tag = element_text(face = \"bold\", size = 25),     legend.position = \"bottom\"   )    mic_regional_invaded_asian_patchwork <- (   mic_regional_invaded_asian_hist_plot / mic_regional_invaded_asian_126_plot /   mic_regional_invaded_asian_370_plot / mic_regional_invaded_asian_585_plot   ) +   plot_layout(axes = \"collect\", axis_titles = \"collect\") +   plot_annotation(     title = \"Most Influential Covariate (MIC) for 'Ri.Asia' model for (A) Present and 2055 climate change scenarios\\n(B) SSP126 (C) SSP370 (D) SSP585\",     subtitle = \"Covariate causing most extrapolation from model training set\"     ) ggsave(   mic_regional_invaded_asian_patchwork,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"MIC_slf_invaded_asian_v2_background_projGlobe_patchwork.jpg\"),   height = 14,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Ensemble regional-scale models into a single prediction","text":"vignettes 060-090, created three regional-scale MaxEnt models invasive plant pest Lycorma delicatula based historical predicted future climate trends climate change. One models based planthopper’s native range east Asia, two models based regions far invaded (Koreas/Japan North America). regional models created using data settings global-scale version (vignette 050), considers regions together. goal compare global-scale output three regional-scale models. global-scale model traditional approach modeling species distributions represents important generalization made using data, may consider localized climate conditions differ regions (Gallien et al, 2012). hypothesized creating models multiple spatial scales, can confidence suitability predictions made specific SLF populations important viticultural regions, can predict risk specific populations spreading now climate change (Araújo New, 2007). also hypothesize regional-scale models, ensembled single prediction, make refined predictions global-scale model . ensemble three regional-scale models single prediction using weighted mean approach. involve weighting model’s predictions ExDet metric (measured last vignette, 100) test AUC value. ExDet metric measures level extrapolation model’s predictions projecting models. Measuring level extrapolation important making predictions across different climate zones, time periods, range shifting species (check boxes) (Elith et al, 2010; Mesgaran et al, 2014). directly use Exdet metric model measure confidence predictions particular grid cell. also use test AUC model weighting also consider goodness fit.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Ensemble regional-scale models into a single prediction","text":"Note: setting global options document certain code chunks rendered final .html file. set eval = FALSE none code re-run (preventing files overwritten knitting) simply overwrite chunks plots.","code":"library(tidyverse)  library(here)  # here() is set at the root folder of this package  # spatial data handling library(terra)  # aesthetics library(ggnewscale) dir.create(path = file.path(mypath, \"models\", \"slf_regional_ensemble_v1\")) dir.create(path = file.path(mypath, \"models\", \"slf_regional_ensemble_v1\", \"plots\"))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"plotting","dir":"Articles","previous_headings":"Setup","what":"Plotting","title":"Ensemble regional-scale models into a single prediction","text":"define helper function import background area rasters plotting.","code":"format_decimal <- function(x) as.numeric(sprintf(\"%.*f\", 2, x)) # formats decimals to 2 places # path to directory mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/historical_climate_rasters/chelsa2.1_30arcsec\")   # native regional_native_background_area <- terra::rast(x = file.path(mypath, \"v1_maxent_10km\", \"bio11_1981-2010_regional_native_KG.asc\")) # invaded regional_invaded_background_area <- terra::rast(x = file.path(mypath, \"v1_maxent_10km\", \"bio11_1981-2010_regional_invaded_KG.asc\")) # invaded_asian regional_invaded_asian_background_area <- terra::rast(x = file.path(mypath, \"v1_maxent_10km\", \"bio11_1981-2010_regional_invaded_asian_KG.asc\"))   # convert to df regional_native_background_area_df <- terra::as.data.frame(regional_native_background_area, xy = TRUE) regional_invaded_background_area_df <- terra::as.data.frame(regional_invaded_background_area, xy = TRUE) regional_invaded_asian_background_area_df <- terra::as.data.frame(regional_invaded_asian_background_area, xy = TRUE)"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"maxent-predictions","dir":"Articles","previous_headings":"1. Import datasets","what":"1.1 MaxEnt Predictions","title":"Ensemble regional-scale models into a single prediction","text":"First, need load rasters containing predictions model. load historical climate change versions predictions.","code":"# output directory mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent\") pred_regional_native <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"regional_native_pred_suit_clamped_cloglog_globe_1981-2010.asc\") )  # CMIP6 # SSP126 pred_regional_native_126 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"regional_native_pred_suit_clamped_cloglog_globe_2041-2070_GFDL_ssp126.asc\") )  # SSP370 pred_regional_native_370 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"regional_native_pred_suit_clamped_cloglog_globe_2041-2070_GFDL_ssp370.asc\") )  # SSP585 pred_regional_native_585 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"regional_native_pred_suit_clamped_cloglog_globe_2041-2070_GFDL_ssp585.asc\") ) pred_regional_invaded <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"regional_invaded_pred_suit_clamped_cloglog_globe_1981-2010.asc\") )  # CMIP6 # SSP126 pred_regional_invaded_126 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"regional_invaded_pred_suit_clamped_cloglog_globe_2041-2070_GFDL_ssp126.asc\") )  # SSP370 pred_regional_invaded_370 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"regional_invaded_pred_suit_clamped_cloglog_globe_2041-2070_GFDL_ssp370.asc\") )  # SSP585 pred_regional_invaded_585 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"regional_invaded_pred_suit_clamped_cloglog_globe_2041-2070_GFDL_ssp585.asc\") ) pred_regional_invaded_asian <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"regional_invaded_asian_pred_suit_clamped_cloglog_globe_1981-2010.asc\") )  # CMIP6 # SSP126 pred_regional_invaded_asian_126 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"regional_invaded_asian_pred_suit_clamped_cloglog_globe_2041-2070_GFDL_ssp126.asc\") )  # SSP370 pred_regional_invaded_asian_370 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"regional_invaded_asian_pred_suit_clamped_cloglog_globe_2041-2070_GFDL_ssp370.asc\") )   # SSP585 pred_regional_invaded_asian_585 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"regional_invaded_asian_pred_suit_clamped_cloglog_globe_2041-2070_GFDL_ssp585.asc\") )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"auc-values","dir":"Articles","previous_headings":"1. Import datasets","what":"1.2 AUC values","title":"Ensemble regional-scale models into a single prediction","text":"Next, load AUC value model, used weight model’s predictions, specifically based test AUC value.","code":"AUC_regional_native <- read_csv(file = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"regional_native_AUC_TSS.csv\")) %>%   dplyr::select(AUC) %>%   dplyr::slice(2) %>%   as.numeric()  AUC_regional_invaded <- read_csv(file = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"regional_invaded_AUC_TSS.csv\")) %>%   dplyr::select(AUC) %>%   dplyr::slice(2) %>%   as.numeric()  AUC_regional_invaded_asian <- read_csv(file = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"regional_invaded_asian_AUC_TSS.csv\")) %>%   dplyr::select(AUC) %>%   dplyr::slice(2) %>%   as.numeric() AUC_values <- tibble(   model = c(\"AUC_regional_native\", \"AUC_regional_invaded\", \"AUC_regional_invaded_asian\"),   AUC_value = c(AUC_regional_native, AUC_regional_invaded, AUC_regional_invaded_asian) )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"exdet-rasters","dir":"Articles","previous_headings":"1. Import datasets","what":"1.3 ExDet rasters","title":"Ensemble regional-scale models into a single prediction","text":"Finally, load results ExDet analysis weight ensemble.","code":"exdet_regional_native <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"ExDet_slf_regional_native_v3_background_projGlobe.tif\") )  # CMIP6 # SSP126 exdet_regional_native_126 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"ExDet_slf_regional_native_v3_background_projGlobe_2041-2070_ssp126_GFDL.tif\") )  # SSP370 exdet_regional_native_370 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"ExDet_slf_regional_native_v3_background_projGlobe_2041-2070_ssp370_GFDL.tif\") )  # SSP585 exdet_regional_native_585 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"ExDet_slf_regional_native_v3_background_projGlobe_2041-2070_ssp585_GFDL.tif\") ) exdet_regional_invaded <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"ExDet_slf_regional_invaded_v7_background_projGlobe.tif\") )  # CMIP6 # SSP126 exdet_regional_invaded_126 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"ExDet_slf_regional_invaded_v7_background_projGlobe_2041-2070_ssp126_GFDL.tif\") )  # SSP370 exdet_regional_invaded_370 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"ExDet_slf_regional_invaded_v7_background_projGlobe_2041-2070_ssp370_GFDL.tif\") )  # SSP585 exdet_regional_invaded_585 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"ExDet_slf_regional_invaded_v7_background_projGlobe_2041-2070_ssp585_GFDL.tif\") ) exdet_regional_invaded_asian <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"ExDet_slf_regional_invaded_asian_v2_background_projGlobe.tif\") )   # CMIP6 # SSP126 exdet_regional_invaded_asian_126 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"ExDet_slf_regional_invaded_asian_v2_background_projGlobe_2041-2070_ssp126_GFDL.tif\") )  # SSP370 exdet_regional_invaded_asian_370 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"ExDet_slf_regional_invaded_asian_v2_background_projGlobe_2041-2070_ssp370_GFDL.tif\") )  # SSP585 exdet_regional_invaded_asian_585 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"ExDet_slf_regional_invaded_asian_v2_background_projGlobe_2041-2070_ssp585_GFDL.tif\") )"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"stack-rasters","dir":"Articles","previous_headings":"2. Edit import datasets","what":"2.1 Stack rasters","title":"Ensemble regional-scale models into a single prediction","text":"need stack predicted ExDet rasters perform analysis.","code":"pred_hist_stack <- c(pred_regional_native, pred_regional_invaded, pred_regional_invaded_asian)  # CMIP6 pred_126_stack <- c(pred_regional_native_126, pred_regional_invaded_126, pred_regional_invaded_asian_126) pred_370_stack <- c(pred_regional_native_370, pred_regional_invaded_370, pred_regional_invaded_asian_370) pred_585_stack <- c(pred_regional_native_585, pred_regional_invaded_585, pred_regional_invaded_asian_585) exdet_hist_stack <- c(exdet_regional_native, exdet_regional_invaded, exdet_regional_invaded_asian)  # CMIP6 exdet_126_stack <- c(exdet_regional_native_126, exdet_regional_invaded_126, exdet_regional_invaded_asian_126) exdet_370_stack <- c(exdet_regional_native_370, exdet_regional_invaded_370, exdet_regional_invaded_asian_370) exdet_585_stack <- c(exdet_regional_native_585, exdet_regional_invaded_585, exdet_regional_invaded_asian_585)"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"preparatory-raster-edits","dir":"Articles","previous_headings":"2. Edit import datasets","what":"2.2 Preparatory raster edits","title":"Ensemble regional-scale models into a single prediction","text":"pred rasters need cropped slightly function used create ExDet rasters cropped slightly. raster sets need share extent downstream manipulations. Now, need prepare weight predicted distribution rasters using respective ExDet raster.","code":"terra::ext(pred_hist_stack) terra::ext(exdet_hist_stack)   # I will trim the rasters to the extent of the exdet rasters ext.obj <- terra::ext(-180.00013888885, 178.999859675084, -58.5001390148238, 82.99986041915)  # crop rasters pred_hist_stack <- terra::crop(pred_hist_stack, ext.obj) # CMIP6 pred_126_stack <- terra::crop(pred_126_stack, ext.obj) pred_370_stack <- terra::crop(pred_370_stack, ext.obj) pred_585_stack <- terra::crop(pred_585_stack, ext.obj) names(pred_hist_stack) <- c(\"pred_regional_native\", \"pred_regional_invaded\", \"pred_regional_invaded_asian\") # CMIP6 names(pred_126_stack) <- c(\"pred_regional_native_126\", \"pred_regional_invaded_126\", \"pred_regional_invaded_asian_126\") names(pred_370_stack) <- c(\"pred_regional_native_370\", \"pred_regional_invaded_370\", \"pred_regional_invaded_asian_370\") names(pred_585_stack) <- c(\"pred_regional_native_585\", \"pred_regional_invaded_585\", \"pred_regional_invaded_asian_585\")"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"ensemble-rasters","dir":"Articles","previous_headings":"","what":"3. Ensemble rasters","title":"Ensemble regional-scale models into a single prediction","text":"create weight factor model raster section across several steps. First, convert ExDet rasters weight value. Next, add test AUC values rasters create weighting factor. Finally, apply weights take weighted mean three models.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"format-exdet-rasters-into-weighting-factor","dir":"Articles","previous_headings":"3. Ensemble rasters","what":"3.1 Format ExDet rasters into weighting factor","title":"Ensemble regional-scale models into a single prediction","text":"First, need manipulate ExDet rasters can used weighting. begin adding 1 negative ExDet value taking absolute value cell. way, weighting performed positive scale. ExDet metric works anything 0 1 extrapolated, anything 0 1 extrapolated. Next, convert ExDet value 0 1, cells without extrapolation simply weighted. Add 1 negative ExDet values Take abs value ExDet values Convert ExDet value 1 1 Take reciprocal ExDet raster values","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"historical","dir":"Articles","previous_headings":"3. Ensemble rasters > 3.1 Format ExDet rasters into weighting factor","what":"historical","title":"Ensemble regional-scale models into a single prediction","text":"CMIP6 exdet rasters","code":"# 1. add 1 to negatives  # take minmax before minmax(exdet_hist_stack)  # the min values of each layer should be -1.4, -2.79 and -2.5 respectively after ifelse # the max values should be unchanged at 1.4, 1.22 and 2.2  exdet_hist_stack <- terra::ifel(   exdet_hist_stack < 0, # if the value is < 0   exdet_hist_stack - 1, # subtract 1   exdet_hist_stack # else, keep the same   )  # minmax after minmax(exdet_hist_stack)   # 2. take abs  exdet_hist_stack <- abs(exdet_hist_stack)  minmax(exdet_hist_stack)   # 3. convert values below 1 to 1  exdet_hist_stack <- terra::ifel(   exdet_hist_stack < 1, # if the value is < 1 or == 0   1, # make 1   exdet_hist_stack # else, keep the same   )  minmax(exdet_hist_stack)   # 4. take reciprocals  exdet_hist_stack <- terra::app(exdet_hist_stack, fun = (function(i) 1 / i))  minmax(exdet_hist_stack) terra::writeRaster(   x = exdet_hist_stack,    filename = c(     file.path(mypath, \"models\", \"working_dir\", \"exdet_weights_slf_regional_native_v3.tif\"),     file.path(mypath, \"models\", \"working_dir\", \"exdet_weights_slf_regional_invaded_v7.tif\"),     file.path(mypath, \"models\", \"working_dir\", \"exdet_weights_slf_regional_invaded_asian_v2.tif\")   ),   filetype = \"GTiff\",   overwrite = FALSE   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"ssp-126","dir":"Articles","previous_headings":"3. Ensemble rasters > 3.1 Format ExDet rasters into weighting factor","what":"SSP 126","title":"Ensemble regional-scale models into a single prediction","text":"","code":"# 1. add 1 to negatives  # take minmax before minmax(exdet_126_stack)   exdet_126_stack <- terra::ifel(   exdet_126_stack < 0, # if the value is < 0   exdet_126_stack - 1, # subtract 1   exdet_126_stack # else, keep the same   )  # minmax after minmax(exdet_126_stack)   # 2. take abs  exdet_126_stack <- abs(exdet_126_stack)  minmax(exdet_126_stack)   # 3. convert values below 1 to 1  exdet_126_stack <- terra::ifel(   exdet_126_stack < 1 | exdet_126_stack == 0, # if the value is < 1 or == 0   1, # make 1   exdet_126_stack # else, keep the same   )  minmax(exdet_126_stack)   # 4. take reciprocals  exdet_126_stack <- terra::app(exdet_126_stack, fun = (function(i) 1 / i))  minmax(exdet_126_stack) terra::writeRaster(   x = exdet_126_stack,    filename = c(     file.path(mypath, \"models\", \"working_dir\", \"exdet_weights_slf_regional_native_v3_2041-2070_ssp126_GFDL.tif\"),     file.path(mypath, \"models\", \"working_dir\", \"exdet_weights_slf_regional_invaded_v7_2041-2070_ssp126_GFDL.tif\"),     file.path(mypath, \"models\", \"working_dir\", \"exdet_weights_slf_regional_invaded_asian_v2_2041-2070_ssp126_GFDL.tif\")   ),   filetype = \"GTiff\",   overwrite = FALSE   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"ssp-370","dir":"Articles","previous_headings":"3. Ensemble rasters > 3.1 Format ExDet rasters into weighting factor","what":"SSP 370","title":"Ensemble regional-scale models into a single prediction","text":"","code":"# 1. add 1 to negatives  # take minmax before minmax(exdet_370_stack)   exdet_370_stack <- terra::ifel(   exdet_370_stack < 0, # if the value is < 0   exdet_370_stack - 1, # subtract 1   exdet_370_stack # else, keep the same   )  # minmax after minmax(exdet_370_stack)   # 2. take abs  exdet_370_stack <- abs(exdet_370_stack)  minmax(exdet_370_stack)   # 3. convert values below 1 to 1  exdet_370_stack <- terra::ifel(   exdet_370_stack < 1 | exdet_370_stack == 0, # if the value is < 1 or == 0   1, # make 1   exdet_370_stack # else, keep the same   )  minmax(exdet_370_stack)   # 4. take reciprocals  exdet_370_stack <- terra::app(exdet_370_stack, fun = (function(i) 1 / i))  minmax(exdet_370_stack) terra::writeRaster(   x = exdet_370_stack,    filename = c(     file.path(mypath, \"models\", \"working_dir\", \"exdet_weights_slf_regional_native_v3_2041-2070_ssp370_GFDL.tif\"),     file.path(mypath, \"models\", \"working_dir\", \"exdet_weights_slf_regional_invaded_v7_2041-2070_ssp370_GFDL.tif\"),     file.path(mypath, \"models\", \"working_dir\", \"exdet_weights_slf_regional_invaded_asian_v2_2041-2070_ssp370_GFDL.tif\")   ),   filetype = \"GTiff\",   overwrite = FALSE   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"ssp-585","dir":"Articles","previous_headings":"3. Ensemble rasters > 3.1 Format ExDet rasters into weighting factor","what":"SSP 585","title":"Ensemble regional-scale models into a single prediction","text":"","code":"# 1. add 1 to negatives  # take minmax before minmax(exdet_585_stack)   exdet_585_stack <- terra::ifel(   exdet_585_stack < 0, # if the value is < 0   exdet_585_stack - 1, # subtract 1   exdet_585_stack # else, keep the same   )  # minmax after minmax(exdet_585_stack)   # 2. take abs  exdet_585_stack <- abs(exdet_585_stack)  minmax(exdet_585_stack)   # 3. convert values below 1 to 1  exdet_585_stack <- terra::ifel(   exdet_585_stack < 1 | exdet_585_stack == 0, # if the value is < 1 or == 0   1, # make 1   exdet_585_stack # else, keep the same   )  minmax(exdet_585_stack)   # 4. take reciprocals  exdet_585_stack <- terra::app(exdet_585_stack, fun = (function(i) 1 / i))  minmax(exdet_585_stack) terra::writeRaster(   x = exdet_585_stack,    filename = c(     file.path(mypath, \"models\", \"working_dir\", \"exdet_weights_slf_regional_native_v3_2041-2070_ssp585_GFDL.tif\"),     file.path(mypath, \"models\", \"working_dir\", \"exdet_weights_slf_regional_invaded_v7_2041-2070_ssp585_GFDL.tif\"),     file.path(mypath, \"models\", \"working_dir\", \"exdet_weights_slf_regional_invaded_asian_v2_2041-2070_ssp585_GFDL.tif\")   ),   filetype = \"GTiff\",   overwrite = FALSE   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"weight-models-using-test-auc","dir":"Articles","previous_headings":"3. Ensemble rasters","what":"3.2 Weight Models using Test AUC","title":"Ensemble regional-scale models into a single prediction","text":"second step weighting process also weight model goodness--fit. use AUC value model integrate weighting formula model contributes based goodness fit. AUC already ranges 0-1, AUC 1 weight remain unchanged model. However, AUC less 1, lessen weight model overall ensemble. multiply raster AUC value save rasters ensemble weights.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"historical-1","dir":"Articles","previous_headings":"3. Ensemble rasters > 3.2 Weight Models using Test AUC","what":"historical","title":"Ensemble regional-scale models into a single prediction","text":"Now, perform operation CMIP6 rasters.","code":"minmax(exdet_hist_stack)  # layer 1 exdet_hist_stack[[1]] <- terra::app(   x = exdet_hist_stack[[1]],   fun = function(x) x * as.numeric(AUC_values[[1, 2]]) )  # layer 2 exdet_hist_stack[[2]] <- terra::app(   x = exdet_hist_stack[[2]],   fun = function(y) y * as.numeric(AUC_values[[2, 2]]) )  # layer 3 exdet_hist_stack[[3]] <- terra::app(   x = exdet_hist_stack[[3]],   fun = function(z) z * as.numeric(AUC_values[[3, 2]]) )   # other operations minmax(exdet_hist_stack) # add names names(exdet_hist_stack) <- c(\"regional_native\", \"regional_invaded\", \"regional_invaded_asian\") terra::writeRaster(   x = exdet_hist_stack,    filename = c(     file.path(mypath, \"models\", \"slf_regional_ensemble_v1\", \"ensemble_weights_slf_regional_native_v3.tif\"),     file.path(mypath, \"models\", \"slf_regional_ensemble_v1\", \"ensemble_weights_slf_regional_invaded_v7.tif\"),     file.path(mypath, \"models\", \"slf_regional_ensemble_v1\", \"ensemble_weights_slf_regional_invaded_asian_v2.tif\")   ),   filetype = \"GTiff\",   overwrite = FALSE   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"ssp-126-1","dir":"Articles","previous_headings":"3. Ensemble rasters > 3.2 Weight Models using Test AUC","what":"SSP 126","title":"Ensemble regional-scale models into a single prediction","text":"","code":"minmax(exdet_126_stack)  # layer 1 exdet_126_stack[[1]] <-terra::app(   x = exdet_126_stack[[1]],   fun = function(x) x * as.numeric(AUC_values[[1, 2]]) )  # layer 2 exdet_126_stack[[2]] <-terra::app(   x = exdet_126_stack[[2]],   fun = function(y) y * as.numeric(AUC_values[[2, 2]]) )  # layer 3 exdet_126_stack[[3]] <-terra::app(   x = exdet_126_stack[[3]],   fun = function(z) z * as.numeric(AUC_values[[3, 2]]) )   # other operations minmax(exdet_126_stack) # add names names(exdet_126_stack) <- c(\"regional_native_126_2041-2070\", \"regional_invaded_126_2041-2070\", \"regional_invaded_asian_126_2041-2070\") terra::writeRaster(   x = exdet_126_stack,    filename = c(     file.path(mypath, \"models\", \"slf_regional_ensemble_v1\", \"ensemble_weights_slf_regional_native_v3_2041-2070_ssp126_GFDL.tif\"),     file.path(mypath, \"models\", \"slf_regional_ensemble_v1\", \"ensemble_weights_slf_regional_invaded_v7_2041-2070_ssp126_GFDL.tif\"),     file.path(mypath, \"models\", \"slf_regional_ensemble_v1\", \"ensemble_weights_slf_regional_invaded_asian_v2_2041-2070_ssp126_GFDL.tif\")   ),   filetype = \"GTiff\",   overwrite = FALSE   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"ssp-370-1","dir":"Articles","previous_headings":"3. Ensemble rasters > 3.2 Weight Models using Test AUC","what":"SSP 370","title":"Ensemble regional-scale models into a single prediction","text":"","code":"minmax(exdet_370_stack)  # layer 1 exdet_370_stack[[1]] <-terra::app(   x = exdet_370_stack[[1]],   fun = function(x) x * as.numeric(AUC_values[[1, 2]]) )  # layer 2 exdet_370_stack[[2]] <-terra::app(   x = exdet_370_stack[[2]],   fun = function(y) y * as.numeric(AUC_values[[2, 2]]) )  # layer 3 exdet_370_stack[[3]] <-terra::app(   x = exdet_370_stack[[3]],   fun = function(z) z * as.numeric(AUC_values[[3, 2]]) )   # other operations minmax(exdet_370_stack) # add names names(exdet_370_stack) <- c(\"regional_native_370_2041-2070\", \"regional_invaded_370_2041-2070\", \"regional_invaded_asian_370_2041-2070\") terra::writeRaster(   x = exdet_370_stack,    filename = c(     file.path(mypath, \"models\", \"slf_regional_ensemble_v1\", \"ensemble_weights_slf_regional_native_v3_2041-2070_ssp370_GFDL.tif\"),     file.path(mypath, \"models\", \"slf_regional_ensemble_v1\", \"ensemble_weights_slf_regional_invaded_v7_2041-2070_ssp370_GFDL.tif\"),     file.path(mypath, \"models\", \"slf_regional_ensemble_v1\", \"ensemble_weights_slf_regional_invaded_asian_v2_2041-2070_ssp370_GFDL.tif\")   ),   filetype = \"GTiff\",   overwrite = FALSE   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"ssp-585-1","dir":"Articles","previous_headings":"3. Ensemble rasters > 3.2 Weight Models using Test AUC","what":"SSP 585","title":"Ensemble regional-scale models into a single prediction","text":"","code":"minmax(exdet_585_stack)  # layer 1 exdet_585_stack[[1]] <-terra::app(   x = exdet_585_stack[[1]],   fun = function(x) x * as.numeric(AUC_values[[1, 2]]) )  # layer 2 exdet_585_stack[[2]] <-terra::app(   x = exdet_585_stack[[2]],   fun = function(y) y * as.numeric(AUC_values[[2, 2]]) )  # layer 3 exdet_585_stack[[3]] <-terra::app(   x = exdet_585_stack[[3]],   fun = function(z) z * as.numeric(AUC_values[[3, 2]]) )   # other operations minmax(exdet_585_stack) # add names names(exdet_585_stack) <- c(\"regional_native_585_2041-2070\", \"regional_invaded_585_2041-2070\", \"regional_invaded_asian_585_2041-2070\") terra::writeRaster(   x = exdet_585_stack,    filename = c(     file.path(mypath, \"models\", \"slf_regional_ensemble_v1\", \"ensemble_weights_slf_regional_native_v3_2041-2070_ssp585_GFDL.tif\"),     file.path(mypath, \"models\", \"slf_regional_ensemble_v1\", \"ensemble_weights_slf_regional_invaded_v7_2041-2070_ssp585_GFDL.tif\"),     file.path(mypath, \"models\", \"slf_regional_ensemble_v1\", \"ensemble_weights_slf_regional_invaded_asian_v2_2041-2070_ssp585_GFDL.tif\")   ),   filetype = \"GTiff\",   overwrite = FALSE   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"apply-weighting-factor-to-models","dir":"Articles","previous_headings":"3. Ensemble rasters","what":"3.3 Apply weighting factor to models","title":"Ensemble regional-scale models into a single prediction","text":"Finally, apply weighting factors predicted raster layers model take weighted mean. Weighted means common method creating model ensembles (Araújo & New, 2007). three predicted suitability rasters weighted respective weighted exdet raster. repeated CMIP6 rasters well. historical predictions final, weighted mean taken, create file first save .ascii file. take weighted mean CMIP6 rasters well, additionally take unweighted mean three files created obtain one prediction time period 2041-2070. Now take unweighted mean three rasters. now weighted mean raster historical CMIP rasters, final climate change prediction mean SSP 126, SSP 370 SSP 585 scenarios.","code":"# historical pred_hist_mean <- terra::weighted.mean(   x = pred_hist_stack,   w = exdet_hist_stack,   filename = file.path(mypath, \"models\", \"slf_regional_ensemble_v1\", \"ensemble_regional_weighted_mean_globe_1981-2010.asc\"),   filetype = \"AAIGrid\",   overwrite = FALSE ) # CMIP6 # SSP126 pred_126_mean <- terra::weighted.mean(   x = pred_126_stack,   w = exdet_126_stack,   filename = file.path(mypath, \"models\", \"slf_regional_ensemble_v1\", \"ensemble_regional_weighted_mean_globe_2041-2070_GFDL_ssp126.asc\"),   filetype = \"AAIGrid\",   overwrite = FALSE )  # SSP370 pred_370_mean <- terra::weighted.mean(   x = pred_370_stack,   w = exdet_370_stack,   filename = file.path(mypath, \"models\", \"slf_regional_ensemble_v1\", \"ensemble_regional_weighted_mean_globe_2041-2070_GFDL_ssp370.asc\"),   filetype = \"AAIGrid\",   overwrite = FALSE )  # SSP585 pred_585_mean <- terra::weighted.mean(   x = pred_585_stack,   w = exdet_585_stack,   filename = file.path(mypath, \"models\", \"slf_regional_ensemble_v1\", \"ensemble_regional_weighted_mean_globe_2041-2070_GFDL_ssp585.asc\"),   filetype = \"AAIGrid\",   overwrite = FALSE ) # stack rasters pred_CMIP6_mean_stack <- c(pred_126_mean, pred_370_mean, pred_585_mean)  # apply mean between layers pred_CMIP6_mean_final <- terra::app(   x = pred_CMIP6_mean_stack,   fun = \"mean\",   filename = file.path(mypath, \"models\", \"slf_regional_ensemble_v1\", \"ensemble_regional_weighted_mean_globe_2041-2070_GFDL_ssp_averaged.asc\"),   filetype = \"AAIGrid\",   overwrite = FALSE )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"ensemble-thresholds","dir":"Articles","previous_headings":"","what":"4. Ensemble thresholds","title":"Ensemble regional-scale models into a single prediction","text":"also need ensemble thresholds using create scatter plots thresholded maps downstream. ensemble performed using method , slightly altered. use pred rasters extract coordinates locations suitability value threshold. Next, take coordinates extract ExDet values locations. take mean median values. , multiply threshold value AUC model. Finally, take weighted mean three modified thresh values. repeated MTP threshold well. Finally, process also completed CMIP6 version models. Per projected time period (historical 2041-2070) threshold value: 1. Extract values pred rasters match respective model threshold value. 2. Extract values converted exdet rasters locations 3. Take mean exdet values locations. 4. Multiply mean AUC value model. 5. Take weighted mean three threshold values using created weights.","code":""},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"exdet-rasters-1","dir":"Articles","previous_headings":"4. Ensemble thresholds > 4.1 Import data","what":"ExDet rasters","title":"Ensemble regional-scale models into a single prediction","text":"load results ExDet analysis weight ensemble.","code":"exdet_weight_regional_native <- terra::rast(   x = file.path(mypath, \"models\", \"working_dir\", \"exdet_weights_slf_regional_native_v3.tif\") )  exdet_weight_regional_invaded <- terra::rast(   x = file.path(mypath, \"models\", \"working_dir\", \"exdet_weights_slf_regional_invaded_v7.tif\") )  exdet_weight_regional_invaded_asian <- terra::rast(   x = file.path(mypath, \"models\", \"working_dir\", \"exdet_weights_slf_regional_invaded_asian_v2.tif\") ) exdet_weight_hist_stack <- c(exdet_weight_regional_native, exdet_weight_regional_invaded, exdet_weight_regional_invaded_asian) # ssp126 exdet_weight_regional_native_126 <- terra::rast(   x = file.path(mypath, \"models\", \"working_dir\", \"exdet_weights_slf_regional_native_v3_2041-2070_ssp126_GFDL.tif\") ) exdet_weight_regional_invaded_126 <- terra::rast(   x = file.path(mypath, \"models\", \"working_dir\", \"exdet_weights_slf_regional_invaded_v7_2041-2070_ssp126_GFDL.tif\") ) exdet_weight_regional_invaded_asian_126 <- terra::rast(   x = file.path(mypath, \"models\", \"working_dir\", \"exdet_weights_slf_regional_invaded_asian_v2_2041-2070_ssp126_GFDL.tif\") )  # ssp370 exdet_weight_regional_native_370 <- terra::rast(   x = file.path(mypath, \"models\", \"working_dir\", \"exdet_weights_slf_regional_native_v3_2041-2070_ssp370_GFDL.tif\") ) exdet_weight_regional_invaded_370 <- terra::rast(   x = file.path(mypath, \"models\", \"working_dir\", \"exdet_weights_slf_regional_invaded_v7_2041-2070_ssp370_GFDL.tif\") ) exdet_weight_regional_invaded_asian_370 <- terra::rast(   x = file.path(mypath, \"models\", \"working_dir\", \"exdet_weights_slf_regional_invaded_asian_v2_2041-2070_ssp370_GFDL.tif\") )  # ssp585 exdet_weight_regional_native_585 <- terra::rast(   x = file.path(mypath, \"models\", \"working_dir\", \"exdet_weights_slf_regional_native_v3_2041-2070_ssp585_GFDL.tif\") ) exdet_weight_regional_invaded_585 <- terra::rast(   x = file.path(mypath, \"models\", \"working_dir\", \"exdet_weights_slf_regional_invaded_v7_2041-2070_ssp585_GFDL.tif\") ) exdet_weight_regional_invaded_asian_585 <- terra::rast(   x = file.path(mypath, \"models\", \"working_dir\", \"exdet_weights_slf_regional_invaded_asian_v2_2041-2070_ssp585_GFDL.tif\") ) exdet_weight_126_stack <- c(exdet_weight_regional_native_126, exdet_weight_regional_invaded_126, exdet_weight_regional_invaded_asian_126)  exdet_weight_370_stack <- c(exdet_weight_regional_native_370, exdet_weight_regional_invaded_370, exdet_weight_regional_invaded_asian_370)  exdet_weight_585_stack <- c(exdet_weight_regional_native_585, exdet_weight_regional_invaded_585, exdet_weight_regional_invaded_asian_585)"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"pred-rasters","dir":"Articles","previous_headings":"4. Ensemble thresholds","what":"4.2 Pred rasters","title":"Ensemble regional-scale models into a single prediction","text":"also convert pred rasters dfs","code":"#hist pred_hist_stack_df <- terra::as.data.frame(pred_hist_stack, xy = TRUE) # CMIP6 pred_126_stack_df <- terra::as.data.frame(pred_126_stack, xy = TRUE) pred_370_stack_df <- terra::as.data.frame(pred_370_stack, xy = TRUE) pred_585_stack_df <- terra::as.data.frame(pred_585_stack, xy = TRUE)"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"thresh-values","dir":"Articles","previous_headings":"4. Ensemble thresholds > 4.2 Pred rasters","what":"thresh values","title":"Ensemble regional-scale models into a single prediction","text":"summary files contain actual threshold values, load one isolate threshold.","code":"# MTSS MTSS_regional_native <- read_csv(file = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"regional_native_summary.csv\")) %>%   dplyr::select(statistic_value) %>%   slice(42) %>%   as.numeric()    MTSS_regional_invaded <- read_csv(file = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"regional_invaded_summary.csv\")) %>%   dplyr::select(statistic_value) %>%   slice(42) %>%   as.numeric()  MTSS_regional_invaded_asian <- read_csv(file = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"regional_invaded_asian_summary.csv\")) %>%   dplyr::select(statistic_value) %>%   slice(42) %>%   as.numeric()  # convert to vector MTSS_all <- c(MTSS_regional_native, MTSS_regional_invaded, MTSS_regional_invaded_asian)    # MTP MTP_regional_native <- read_csv(file = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"regional_native_summary.csv\")) %>%   dplyr::select(statistic_value) %>%   slice(30) %>%   as.numeric()  MTP_regional_invaded <- read_csv(file = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"regional_invaded_summary.csv\")) %>%   dplyr::select(statistic_value) %>%   slice(30) %>%   as.numeric()  MTP_regional_invaded_asian <- read_csv(file = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"regional_invaded_asian_summary.csv\")) %>%   dplyr::select(statistic_value) %>%   slice(30) %>%   as.numeric()  # convert to vector MTP_all <- c(MTP_regional_native, MTP_regional_invaded, MTP_regional_invaded_asian)"},{"path":[]},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"historical-2","dir":"Articles","previous_headings":"4. Ensemble thresholds > 4.3 Create weight for thresh > MTSS","what":"historical","title":"Ensemble regional-scale models into a single prediction","text":"First, perform operations historical rasters. Now, take weighted mean Next, perform operation CMIP6 rasters","code":"# 1. Extract all values from pred rasters that match the respective model threshold value.  MTSS_regional_native_hist_coords <- pred_hist_stack_df %>%   # filter out values with a tolerance   dplyr::filter(near(dplyr::select(., 3), MTSS_all[[1]], tol = 0.005)) %>%   dplyr::select(x, y)  MTSS_regional_invaded_hist_coords <- pred_hist_stack_df %>%   dplyr::filter(near(dplyr::select(., 4), MTSS_all[[2]], tol = 0.005)) %>%   dplyr::select(x, y)  MTSS_regional_invaded_asian_hist_coords <- pred_hist_stack_df %>%   dplyr::filter(near(dplyr::select(., 5), MTSS_all[[3]], tol = 0.005)) %>%   dplyr::select(x, y)      # 2, 3. Extract all values from the converted `exdet` rasters at those locations, Take mean of the exdet values at those locations.  # extract values of exdet raster that are at those coordinates MTSS_regional_native_exdet_weight <- terra::extract(exdet_weight_hist_stack, y = MTSS_regional_native_hist_coords) # tidy MTSS_regional_native_exdet_weight <- MTSS_regional_native_exdet_weight %>%   dplyr::select(., 2) %>%   # convert to matrix and take mean   as.matrix() %>%   mean(na.rm = TRUE)   MTSS_regional_invaded_exdet_weight <-  terra::extract(exdet_weight_hist_stack, y = MTSS_regional_invaded_hist_coords) # tidy MTSS_regional_invaded_exdet_weight <- MTSS_regional_invaded_exdet_weight %>%   dplyr::select(., 3) %>%   # convert to matrix and take mean   as.matrix() %>%   mean()  MTSS_regional_invaded_asian_exdet_weight <- terra::extract(exdet_weight_hist_stack, y = MTSS_regional_invaded_asian_hist_coords)  # tidy MTSS_regional_invaded_asian_exdet_weight <- MTSS_regional_invaded_asian_exdet_weight %>%   dplyr::select(., 4) %>%   # convert to matrix and take mean   as.matrix() %>%   mean()     # 4. Multiply this mean or median by the AUC value for that model.  MTSS_regional_native_exdet_weight <- MTSS_regional_native_exdet_weight * as.numeric(AUC_values[1, 2])  MTSS_regional_invaded_exdet_weight <- MTSS_regional_invaded_exdet_weight * as.numeric(AUC_values[2, 2])  MTSS_regional_invaded_asian_exdet_weight <- MTSS_regional_invaded_asian_exdet_weight * as.numeric(AUC_values[3, 2])   # convert to vector  MTSS_hist_weights <- c(MTSS_regional_native_exdet_weight, MTSS_regional_invaded_exdet_weight, MTSS_regional_invaded_asian_exdet_weight) MTSS_hist_thresh <- stats::weighted.mean(   x = MTSS_all,   w = MTSS_hist_weights )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"ssp126","dir":"Articles","previous_headings":"4. Ensemble thresholds > 4.3 Create weight for thresh > MTSS","what":"ssp126","title":"Ensemble regional-scale models into a single prediction","text":"Now, take weighted mean","code":"# 1. Extract all values from pred rasters that match the respective model threshold value.  MTSS_regional_native_126_coords <- pred_126_stack_df %>%   # filter out values with a tolerance   dplyr::filter(near(dplyr::select(., 3), MTSS_all[[1]], tol = 0.005)) %>%   dplyr::select(x, y)  MTSS_regional_invaded_126_coords <- pred_126_stack_df %>%   dplyr::filter(near(dplyr::select(., 4), MTSS_all[[2]], tol = 0.005)) %>%   dplyr::select(x, y)  MTSS_regional_invaded_asian_126_coords <- pred_126_stack_df %>%   dplyr::filter(near(dplyr::select(., 5), MTSS_all[[3]], tol = 0.005)) %>%   dplyr::select(x, y)      # 2, 3. Extract all values from the converted `exdet` rasters at those locations, Take mean of the exdet values at those locations.  # extract values of exdet raster that are at those coordinates MTSS_regional_native_exdet_weight_126 <- terra::extract(exdet_weight_126_stack, y = MTSS_regional_native_126_coords) # tidy MTSS_regional_native_exdet_weight_126 <- MTSS_regional_native_exdet_weight_126 %>%   dplyr::select(., 2) %>%   # convert to matrix and take mean   as.matrix() %>%   mean(na.rm = TRUE)   MTSS_regional_invaded_exdet_weight_126 <-  terra::extract(exdet_weight_126_stack, y = MTSS_regional_invaded_126_coords) # tidy MTSS_regional_invaded_exdet_weight_126 <- MTSS_regional_invaded_exdet_weight_126 %>%   dplyr::select(., 3) %>%   # convert to matrix and take mean   as.matrix() %>%   mean()  MTSS_regional_invaded_asian_exdet_weight_126 <- terra::extract(exdet_weight_126_stack, y = MTSS_regional_invaded_asian_126_coords)  # tidy MTSS_regional_invaded_asian_exdet_weight_126 <- MTSS_regional_invaded_asian_exdet_weight_126 %>%   dplyr::select(., 4) %>%   # convert to matrix and take mean   as.matrix() %>%   mean()     # 4. Multiply this mean or median by the AUC value for that model.  MTSS_regional_native_exdet_weight_126 <- MTSS_regional_native_exdet_weight_126 * as.numeric(AUC_values[1, 2])  MTSS_regional_invaded_exdet_weight_126 <- MTSS_regional_invaded_exdet_weight_126 * as.numeric(AUC_values[2, 2])  MTSS_regional_invaded_asian_exdet_weight_126 <- MTSS_regional_invaded_asian_exdet_weight_126 * as.numeric(AUC_values[3, 2])   # convert to vector  MTSS_126_weights <- c(MTSS_regional_native_exdet_weight_126, MTSS_regional_invaded_exdet_weight_126, MTSS_regional_invaded_asian_exdet_weight_126) MTSS_126_thresh <- stats::weighted.mean(   x = MTSS_all,   w = MTSS_126_weights )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"ssp370","dir":"Articles","previous_headings":"4. Ensemble thresholds > 4.3 Create weight for thresh > MTSS","what":"ssp370","title":"Ensemble regional-scale models into a single prediction","text":"Now, take weighted mean","code":"# 1. Extract all values from pred rasters that match the respective model threshold value.  MTSS_regional_native_370_coords <- pred_370_stack_df %>%   # filter out values with a tolerance   dplyr::filter(near(dplyr::select(., 3), MTSS_all[[1]], tol = 0.005)) %>%   dplyr::select(x, y)  MTSS_regional_invaded_370_coords <- pred_370_stack_df %>%   dplyr::filter(near(dplyr::select(., 4), MTSS_all[[2]], tol = 0.005)) %>%   dplyr::select(x, y)  MTSS_regional_invaded_asian_370_coords <- pred_370_stack_df %>%   dplyr::filter(near(dplyr::select(., 5), MTSS_all[[3]], tol = 0.005)) %>%   dplyr::select(x, y)      # 2, 3. Extract all values from the converted `exdet` rasters at those locations, Take mean of the exdet values at those locations.  # extract values of exdet raster that are at those coordinates MTSS_regional_native_exdet_weight_370 <- terra::extract(exdet_weight_370_stack, y = MTSS_regional_native_370_coords) # tidy MTSS_regional_native_exdet_weight_370 <- MTSS_regional_native_exdet_weight_370 %>%   dplyr::select(., 2) %>%   # convert to matrix and take mean   as.matrix() %>%   mean(na.rm = TRUE)   MTSS_regional_invaded_exdet_weight_370 <-  terra::extract(exdet_weight_370_stack, y = MTSS_regional_invaded_370_coords) # tidy MTSS_regional_invaded_exdet_weight_370 <- MTSS_regional_invaded_exdet_weight_370 %>%   dplyr::select(., 3) %>%   # convert to matrix and take mean   as.matrix() %>%   mean()  MTSS_regional_invaded_asian_exdet_weight_370 <- terra::extract(exdet_weight_370_stack, y = MTSS_regional_invaded_asian_370_coords)  # tidy MTSS_regional_invaded_asian_exdet_weight_370 <- MTSS_regional_invaded_asian_exdet_weight_370 %>%   dplyr::select(., 4) %>%   # convert to matrix and take mean   as.matrix() %>%   mean()     # 4. Multiply this mean or median by the AUC value for that model.  MTSS_regional_native_exdet_weight_370 <- MTSS_regional_native_exdet_weight_370 * as.numeric(AUC_values[1, 2])  MTSS_regional_invaded_exdet_weight_370 <- MTSS_regional_invaded_exdet_weight_370 * as.numeric(AUC_values[2, 2])  MTSS_regional_invaded_asian_exdet_weight_370 <- MTSS_regional_invaded_asian_exdet_weight_370 * as.numeric(AUC_values[3, 2])   # convert to vector  MTSS_370_weights <- c(MTSS_regional_native_exdet_weight_370, MTSS_regional_invaded_exdet_weight_370, MTSS_regional_invaded_asian_exdet_weight_370) MTSS_370_thresh <- stats::weighted.mean(   x = MTSS_all,   w = MTSS_370_weights )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"ssp585","dir":"Articles","previous_headings":"4. Ensemble thresholds > 4.3 Create weight for thresh > MTSS","what":"ssp585","title":"Ensemble regional-scale models into a single prediction","text":"Now, take weighted mean need repeat operations MTP thresholds well. put thresholds table save ensemble folder.","code":"# 1. Extract all values from pred rasters that match the respective model threshold value.  MTSS_regional_native_585_coords <- pred_585_stack_df %>%   # filter out values with a tolerance   dplyr::filter(near(dplyr::select(., 3), MTSS_all[[1]], tol = 0.005)) %>%   dplyr::select(x, y)  MTSS_regional_invaded_585_coords <- pred_585_stack_df %>%   dplyr::filter(near(dplyr::select(., 4), MTSS_all[[2]], tol = 0.005)) %>%   dplyr::select(x, y)  MTSS_regional_invaded_asian_585_coords <- pred_585_stack_df %>%   dplyr::filter(near(dplyr::select(., 5), MTSS_all[[3]], tol = 0.005)) %>%   dplyr::select(x, y)      # 2, 3. Extract all values from the converted `exdet` rasters at those locations, Take mean of the exdet values at those locations.  # extract values of exdet raster that are at those coordinates MTSS_regional_native_exdet_weight_585 <- terra::extract(exdet_weight_585_stack, y = MTSS_regional_native_585_coords) # tidy MTSS_regional_native_exdet_weight_585 <- MTSS_regional_native_exdet_weight_585 %>%   dplyr::select(., 2) %>%   # convert to matrix and take mean   as.matrix() %>%   mean(na.rm = TRUE)   MTSS_regional_invaded_exdet_weight_585 <-  terra::extract(exdet_weight_585_stack, y = MTSS_regional_invaded_585_coords) # tidy MTSS_regional_invaded_exdet_weight_585 <- MTSS_regional_invaded_exdet_weight_585 %>%   dplyr::select(., 3) %>%   # convert to matrix and take mean   as.matrix() %>%   mean()  MTSS_regional_invaded_asian_exdet_weight_585 <- terra::extract(exdet_weight_585_stack, y = MTSS_regional_invaded_asian_585_coords)  # tidy MTSS_regional_invaded_asian_exdet_weight_585 <- MTSS_regional_invaded_asian_exdet_weight_585 %>%   dplyr::select(., 4) %>%   # convert to matrix and take mean   as.matrix() %>%   mean()     # 4. Multiply this mean or median by the AUC value for that model.  MTSS_regional_native_exdet_weight_585 <- MTSS_regional_native_exdet_weight_585 * as.numeric(AUC_values[1, 2])  MTSS_regional_invaded_exdet_weight_585 <- MTSS_regional_invaded_exdet_weight_585 * as.numeric(AUC_values[2, 2])  MTSS_regional_invaded_asian_exdet_weight_585 <- MTSS_regional_invaded_asian_exdet_weight_585 * as.numeric(AUC_values[3, 2])   # convert to vector  MTSS_585_weights <- c(MTSS_regional_native_exdet_weight_585, MTSS_regional_invaded_exdet_weight_585, MTSS_regional_invaded_asian_exdet_weight_585) MTSS_585_thresh <- stats::weighted.mean(   x = MTSS_all,   w = MTSS_585_weights )"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"historical-3","dir":"Articles","previous_headings":"4. Ensemble thresholds > 4.3 Create weight for thresh > MTP","what":"historical","title":"Ensemble regional-scale models into a single prediction","text":"","code":"# 1. Extract all values from pred rasters that match the respective model threshold value.  MTP_regional_native_hist_coords <- pred_hist_stack_df %>%   # filter out values with a tolerance   dplyr::filter(near(dplyr::select(., 3), MTP_all[[1]], tol = 0.005)) %>%   dplyr::select(x, y)  MTP_regional_invaded_hist_coords <- pred_hist_stack_df %>%   dplyr::filter(near(dplyr::select(., 4), MTP_all[[2]], tol = 0.005)) %>%   dplyr::select(x, y)  MTP_regional_invaded_asian_hist_coords <- pred_hist_stack_df %>%   dplyr::filter(near(dplyr::select(., 5), MTP_all[[3]], tol = 0.005)) %>%   dplyr::select(x, y)      # 2, 3. Extract all values from the converted `exdet` rasters at those locations, Take mean of the exdet values at those locations.  # extract values of exdet raster that are at those coordinates MTP_regional_native_exdet_weight <- terra::extract(exdet_weight_hist_stack, y = MTP_regional_native_hist_coords) # tidy MTP_regional_native_exdet_weight <- MTP_regional_native_exdet_weight %>%   dplyr::select(., 2) %>%   # convert to matrix and take mean   as.matrix() %>%   mean(na.rm = TRUE)   MTP_regional_invaded_exdet_weight <-  terra::extract(exdet_weight_hist_stack, y = MTP_regional_invaded_hist_coords) # tidy MTP_regional_invaded_exdet_weight <- MTP_regional_invaded_exdet_weight %>%   dplyr::select(., 3) %>%   # convert to matrix and take mean   as.matrix() %>%   mean()  MTP_regional_invaded_asian_exdet_weight <- terra::extract(exdet_weight_hist_stack, y = MTP_regional_invaded_asian_hist_coords)  # tidy MTP_regional_invaded_asian_exdet_weight <- MTP_regional_invaded_asian_exdet_weight %>%   dplyr::select(., 4) %>%   # convert to matrix and take mean   as.matrix() %>%   mean()     # 4. Multiply this mean or median by the AUC value for that model.  MTP_regional_native_exdet_weight <- MTP_regional_native_exdet_weight * as.numeric(AUC_values[1, 2])  MTP_regional_invaded_exdet_weight <- MTP_regional_invaded_exdet_weight * as.numeric(AUC_values[2, 2])  MTP_regional_invaded_asian_exdet_weight <- MTP_regional_invaded_asian_exdet_weight * as.numeric(AUC_values[3, 2])   # convert to vector  MTP_hist_weights <- c(MTP_regional_native_exdet_weight, MTP_regional_invaded_exdet_weight, MTP_regional_invaded_asian_exdet_weight) MTP_hist_thresh <- stats::weighted.mean(   x = MTP_all,   w = MTP_hist_weights )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"ssp126-1","dir":"Articles","previous_headings":"4. Ensemble thresholds > 4.3 Create weight for thresh > MTP","what":"ssp126","title":"Ensemble regional-scale models into a single prediction","text":"","code":"# 1. Extract all values from pred rasters that match the respective model threshold value.  MTP_regional_native_126_coords <- pred_126_stack_df %>%   # filter out values with a tolerance   dplyr::filter(near(dplyr::select(., 3), MTP_all[[1]], tol = 0.005)) %>%   dplyr::select(x, y)  MTP_regional_invaded_126_coords <- pred_126_stack_df %>%   dplyr::filter(near(dplyr::select(., 4), MTP_all[[2]], tol = 0.005)) %>%   dplyr::select(x, y)  MTP_regional_invaded_asian_126_coords <- pred_126_stack_df %>%   dplyr::filter(near(dplyr::select(., 5), MTP_all[[3]], tol = 0.005)) %>%   dplyr::select(x, y)      # 2, 3. Extract all values from the converted `exdet` rasters at those locations, Take mean of the exdet values at those locations.  # extract values of exdet raster that are at those coordinates MTP_regional_native_exdet_weight_126 <- terra::extract(exdet_weight_126_stack, y = MTP_regional_native_126_coords) # tidy MTP_regional_native_exdet_weight_126 <- MTP_regional_native_exdet_weight_126 %>%   dplyr::select(., 2) %>%   # convert to matrix and take mean   as.matrix() %>%   mean(na.rm = TRUE)   MTP_regional_invaded_exdet_weight_126 <-  terra::extract(exdet_weight_126_stack, y = MTP_regional_invaded_126_coords) # tidy MTP_regional_invaded_exdet_weight_126 <- MTP_regional_invaded_exdet_weight_126 %>%   dplyr::select(., 3) %>%   # convert to matrix and take mean   as.matrix() %>%   mean()  MTP_regional_invaded_asian_exdet_weight_126 <- terra::extract(exdet_weight_126_stack, y = MTP_regional_invaded_asian_126_coords)  # tidy MTP_regional_invaded_asian_exdet_weight_126 <- MTP_regional_invaded_asian_exdet_weight_126 %>%   dplyr::select(., 4) %>%   # convert to matrix and take mean   as.matrix() %>%   mean()     # 4. Multiply this mean or median by the AUC value for that model.  MTP_regional_native_exdet_weight_126 <- MTP_regional_native_exdet_weight_126 * as.numeric(AUC_values[1, 2])  MTP_regional_invaded_exdet_weight_126 <- MTP_regional_invaded_exdet_weight_126 * as.numeric(AUC_values[2, 2])  MTP_regional_invaded_asian_exdet_weight_126 <- MTP_regional_invaded_asian_exdet_weight_126 * as.numeric(AUC_values[3, 2])   # convert to vector  MTP_126_weights <- c(MTP_regional_native_exdet_weight_126, MTP_regional_invaded_exdet_weight_126, MTP_regional_invaded_asian_exdet_weight_126) MTP_126_thresh <- stats::weighted.mean(   x = MTP_all,   w = MTP_126_weights )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"ssp370-1","dir":"Articles","previous_headings":"4. Ensemble thresholds > 4.3 Create weight for thresh > MTP","what":"ssp370","title":"Ensemble regional-scale models into a single prediction","text":"","code":"# 1. Extract all values from pred rasters that match the respective model threshold value.  MTP_regional_native_370_coords <- pred_370_stack_df %>%   # filter out values with a tolerance   dplyr::filter(near(dplyr::select(., 3), MTP_all[[1]], tol = 0.005)) %>%   dplyr::select(x, y)  MTP_regional_invaded_370_coords <- pred_370_stack_df %>%   dplyr::filter(near(dplyr::select(., 4), MTP_all[[2]], tol = 0.005)) %>%   dplyr::select(x, y)  MTP_regional_invaded_asian_370_coords <- pred_370_stack_df %>%   dplyr::filter(near(dplyr::select(., 5), MTP_all[[3]], tol = 0.005)) %>%   dplyr::select(x, y)      # 2, 3. Extract all values from the converted `exdet` rasters at those locations, Take mean of the exdet values at those locations.  # extract values of exdet raster that are at those coordinates MTP_regional_native_exdet_weight_370 <- terra::extract(exdet_weight_370_stack, y = MTP_regional_native_370_coords) # tidy MTP_regional_native_exdet_weight_370 <- MTP_regional_native_exdet_weight_370 %>%   dplyr::select(., 2) %>%   # convert to matrix and take mean   as.matrix() %>%   mean(na.rm = TRUE)   MTP_regional_invaded_exdet_weight_370 <-  terra::extract(exdet_weight_370_stack, y = MTP_regional_invaded_370_coords) # tidy MTP_regional_invaded_exdet_weight_370 <- MTP_regional_invaded_exdet_weight_370 %>%   dplyr::select(., 3) %>%   # convert to matrix and take mean   as.matrix() %>%   mean()  MTP_regional_invaded_asian_exdet_weight_370 <- terra::extract(exdet_weight_370_stack, y = MTP_regional_invaded_asian_370_coords)  # tidy MTP_regional_invaded_asian_exdet_weight_370 <- MTP_regional_invaded_asian_exdet_weight_370 %>%   dplyr::select(., 4) %>%   # convert to matrix and take mean   as.matrix() %>%   mean()     # 4. Multiply this mean or median by the AUC value for that model.  MTP_regional_native_exdet_weight_370 <- MTP_regional_native_exdet_weight_370 * as.numeric(AUC_values[1, 2])  MTP_regional_invaded_exdet_weight_370 <- MTP_regional_invaded_exdet_weight_370 * as.numeric(AUC_values[2, 2])  MTP_regional_invaded_asian_exdet_weight_370 <- MTP_regional_invaded_asian_exdet_weight_370 * as.numeric(AUC_values[3, 2])   # convert to vector  MTP_370_weights <- c(MTP_regional_native_exdet_weight_370, MTP_regional_invaded_exdet_weight_370, MTP_regional_invaded_asian_exdet_weight_370) MTP_370_thresh <- stats::weighted.mean(   x = MTP_all,   w = MTP_370_weights )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"ssp585-1","dir":"Articles","previous_headings":"4. Ensemble thresholds > 4.3 Create weight for thresh > MTP","what":"ssp585","title":"Ensemble regional-scale models into a single prediction","text":"","code":"# 1. Extract all values from pred rasters that match the respective model threshold value.  MTP_regional_native_585_coords <- pred_585_stack_df %>%   # filter out values with a tolerance   dplyr::filter(near(dplyr::select(., 3), MTP_all[[1]], tol = 0.005)) %>%   dplyr::select(x, y)  MTP_regional_invaded_585_coords <- pred_585_stack_df %>%   dplyr::filter(near(dplyr::select(., 4), MTP_all[[2]], tol = 0.005)) %>%   dplyr::select(x, y)  MTP_regional_invaded_asian_585_coords <- pred_585_stack_df %>%   dplyr::filter(near(dplyr::select(., 5), MTP_all[[3]], tol = 0.005)) %>%   dplyr::select(x, y)      # 2, 3. Extract all values from the converted `exdet` rasters at those locations, Take mean of the exdet values at those locations.  # extract values of exdet raster that are at those coordinates MTP_regional_native_exdet_weight_585 <- terra::extract(exdet_weight_585_stack, y = MTP_regional_native_585_coords) # tidy MTP_regional_native_exdet_weight_585 <- MTP_regional_native_exdet_weight_585 %>%   dplyr::select(., 2) %>%   # convert to matrix and take mean   as.matrix() %>%   mean(na.rm = TRUE)   MTP_regional_invaded_exdet_weight_585 <-  terra::extract(exdet_weight_585_stack, y = MTP_regional_invaded_585_coords) # tidy MTP_regional_invaded_exdet_weight_585 <- MTP_regional_invaded_exdet_weight_585 %>%   dplyr::select(., 3) %>%   # convert to matrix and take mean   as.matrix() %>%   mean()  MTP_regional_invaded_asian_exdet_weight_585 <- terra::extract(exdet_weight_585_stack, y = MTP_regional_invaded_asian_585_coords)  # tidy MTP_regional_invaded_asian_exdet_weight_585 <- MTP_regional_invaded_asian_exdet_weight_585 %>%   dplyr::select(., 4) %>%   # convert to matrix and take mean   as.matrix() %>%   mean()     # 4. Multiply this mean or median by the AUC value for that model.  MTP_regional_native_exdet_weight_585 <- MTP_regional_native_exdet_weight_585 * as.numeric(AUC_values[1, 2])  MTP_regional_invaded_exdet_weight_585 <- MTP_regional_invaded_exdet_weight_585 * as.numeric(AUC_values[2, 2])  MTP_regional_invaded_asian_exdet_weight_585 <- MTP_regional_invaded_asian_exdet_weight_585 * as.numeric(AUC_values[3, 2])   # convert to vector  MTP_585_weights <- c(MTP_regional_native_exdet_weight_585, MTP_regional_invaded_exdet_weight_585, MTP_regional_invaded_asian_exdet_weight_585) MTP_585_thresh <- stats::weighted.mean(   x = MTP_all,   w = MTP_585_weights )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"combine-in-table-and-export","dir":"Articles","previous_headings":"4. Ensemble thresholds","what":"4.4 Combine in table and export","title":"Ensemble regional-scale models into a single prediction","text":"Now, can create table thresholds export data. Display table Now suitability values thresholds ensembled, can begin analyze differences global regional ensemble predictions. begin creating suitability maps next vignette.","code":"ensemble_thresh_values <- tibble(   thresh = c(rep(\"MTP\", 5), rep(\"MTSS\", 5)),   time_period = c(\"1981-2010\", rep(\"2041-2070\", 4), \"1981-2010\", rep(\"2041-2070\", 4)),   CMIP6_model = c(NA, \"ssp126_GFDL-ESM4\", \"ssp370_GFDL-ESM4\", \"ssp585_GFDL-ESM4\", \"ssp_mean_GFDL-ESM4\", NA, \"ssp126_GFDL-ESM4\", \"ssp370_GFDL-ESM4\", \"ssp585_GFDL-ESM4\", \"ssp_mean_GFDL-ESM4\"),   value = c(     MTP_hist_thresh, # hist     MTP_126_thresh, MTP_370_thresh, MTP_585_thresh, # the three ssp scenarios     mean(c(MTP_126_thresh, MTP_370_thresh, MTP_585_thresh)), # the mean of the ssp scenarios     MTSS_hist_thresh,      MTSS_126_thresh, MTSS_370_thresh, MTSS_585_thresh,      mean(c(MTSS_126_thresh, MTSS_370_thresh, MTSS_585_thresh))     ) ) write_csv(ensemble_thresh_values, file = file.path(mypath, \"models\", \"slf_regional_ensemble_v1\", \"ensemble_threshold_values.csv\"))  # also write to .rds readr::write_rds(ensemble_thresh_values, file = file.path(here::here(), \"data\", \"ensemble_threshold_values.rds\")) ensemble_thresh_values <- read_rds(file = file.path(here::here(), \"data\", \"ensemble_threshold_values.rds\"))  print(ensemble_thresh_values) ## # A tibble: 10 × 4 ##    thresh time_period CMIP6_model         value ##    <chr>  <chr>       <chr>               <dbl> ##  1 MTP    1981-2010   NA                 0.0128 ##  2 MTP    2041-2070   ssp126_GFDL        0.0128 ##  3 MTP    2041-2070   ssp370_GFDL        0.0128 ##  4 MTP    2041-2070   ssp585_GFDL        0.0128 ##  5 MTP    2041-2070   ssp_mean_GFDL-ESM4 0.0128 ##  6 MTSS   1981-2010   NA                 0.241  ##  7 MTSS   2041-2070   ssp126_GFDL        0.241  ##  8 MTSS   2041-2070   ssp370_GFDL        0.241  ##  9 MTSS   2041-2070   ssp585_GFDL        0.241  ## 10 MTSS   2041-2070   ssp_mean_GFDL-ESM4 0.241"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"ensemble-exdet-mic-maps","dir":"Articles","previous_headings":"","what":"5. Ensemble ExDet / MIC maps","title":"Ensemble regional-scale models into a single prediction","text":"final step, ensemble ExDet MIC rasters visualization.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"exdet","dir":"Articles","previous_headings":"5. Ensemble ExDet / MIC maps","what":"5.1 ExDet","title":"Ensemble regional-scale models into a single prediction","text":"","code":"map_style_exdet <- list(   theme_classic(),   theme(legend.position = \"bottom\",         panel.background = element_rect(fill = \"azure3\",                                         colour = \"azure3\")   ),   scale_x_continuous(expand = c(0, 0)),   scale_y_continuous(expand = c(0, 0)),   labs(     x = \"longitude\",     y = \"latitude\"   ),   coord_equal() )  # color scheme taken from: https://colorbrewer2.org/?type=diverging&scheme=RdBu&n=11 map_exdet <- function(raster, raster.df) {      ggplot() +     # default plot style     map_style_exdet +     # plot regular raster of values first     geom_raster(data = raster.df, aes(x = x, y = y, fill = mean)) +     # fill scale     scale_fill_gradientn(       name = \"ExDet Score\",       colors = c(\"#67001f\", \"#f4a582\", \"white\", \"white\", \"white\", \"#92c5de\", \"#053061\"),       values = scales::rescale(x = c(         min(values(raster), na.rm = TRUE),          0, 1,          max(values(raster), na.rm = TRUE)         )),       breaks = c(         format_decimal(min(values(raster), na.rm = TRUE)),          0, 1,          format_decimal(max(values(raster), na.rm = TRUE))         ),       limits = c(         format_decimal(min(values(raster), na.rm = TRUE)),          format_decimal(max(values(raster), na.rm = TRUE))         ),       guide = guide_colorbar(frame.colour = \"black\", ticks.colour = \"black\", barwidth = 20, order = 1)       )     }"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"prepare-files","dir":"Articles","previous_headings":"5. Ensemble ExDet / MIC maps > 5.1 ExDet","what":"prepare files","title":"Ensemble regional-scale models into a single prediction","text":"","code":"exdet_regional_native <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"exdet_slf_regional_native_v3_background_projGlobe.tif\") )  exdet_regional_invaded <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"exdet_slf_regional_invaded_v7_background_projGlobe.tif\") )  exdet_regional_invaded_asian <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"exdet_slf_regional_invaded_asian_v2_background_projGlobe.tif\") ) # ssp 126 exdet_regional_native_126 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"exdet_slf_regional_native_v3_background_projGlobe_2041-2070_ssp126_GFDL.tif\") ) exdet_regional_invaded_126 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"exdet_slf_regional_invaded_v7_background_projGlobe_2041-2070_ssp126_GFDL.tif\") ) exdet_regional_invaded_asian_126 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"exdet_slf_regional_invaded_asian_v2_background_projGlobe_2041-2070_ssp126_GFDL.tif\") )  # ssp 370  exdet_regional_native_370 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"exdet_slf_regional_native_v3_background_projGlobe_2041-2070_ssp370_GFDL.tif\") ) exdet_regional_invaded_370 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"exdet_slf_regional_invaded_v7_background_projGlobe_2041-2070_ssp370_GFDL.tif\") ) exdet_regional_invaded_asian_370 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"exdet_slf_regional_invaded_asian_v2_background_projGlobe_2041-2070_ssp370_GFDL.tif\") )  # ssp 585 exdet_regional_native_585 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"exdet_slf_regional_native_v3_background_projGlobe_2041-2070_ssp585_GFDL.tif\") ) exdet_regional_invaded_585 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"exdet_slf_regional_invaded_v7_background_projGlobe_2041-2070_ssp585_GFDL.tif\") ) exdet_regional_invaded_asian_585 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"exdet_slf_regional_invaded_asian_v2_background_projGlobe_2041-2070_ssp585_GFDL.tif\") ) # hist exdet_hist_stack2 <- c(exdet_regional_native, exdet_regional_invaded, exdet_regional_invaded_asian) # CMIP6 exdet_126_stack2 <- c(exdet_regional_native_126, exdet_regional_invaded_126, exdet_regional_invaded_asian_126) exdet_370_stack2 <- c(exdet_regional_native_370, exdet_regional_invaded_370, exdet_regional_invaded_asian_370) exdet_585_stack2 <- c(exdet_regional_native_585, exdet_regional_invaded_585, exdet_regional_invaded_asian_585)"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"historical-4","dir":"Articles","previous_headings":"5. Ensemble ExDet / MIC maps > 5.1 ExDet","what":"historical","title":"Ensemble regional-scale models into a single prediction","text":"","code":"# historical exdet_hist_mean <- terra::app(   x = exdet_hist_stack2,   fun = \"mean\",   filename = file.path(mypath, \"models\", \"slf_regional_ensemble_v1\", \"ExDet_slf_regional_ensemble_v1_background_projGlobe_1981-2010.asc\"),   filetype = \"AAIGrid\",   overwrite = FALSE ) # re-load as df exdet_hist_mean <- terra::rast(x =  file.path(     mypath, \"models\", \"slf_regional_ensemble_v1\", \"ExDet_slf_regional_ensemble_v1_background_projGlobe_1981-2010.asc\"     ))   exdet_hist_mean_df <- terra::as.data.frame(exdet_hist_mean, xy = TRUE)   # plot mean raster first exdet_regional_ensemble_hist_plot <- map_exdet(   raster = exdet_hist_mean,    raster.df = exdet_hist_mean_df   ) + # add background area shapes   # new fill scale   ggnewscale::new_scale_fill() +    # add layer for bg point area   geom_raster(data = regional_native_background_area_df, aes(x = x, y = y, fill = \"Background\"), alpha = 0.25) +   geom_raster(data = regional_invaded_background_area_df, aes(x = x, y = y, fill = \"Background\"), alpha = 0.25) +   geom_raster(data = regional_invaded_asian_background_area_df, aes(x = x, y = y, fill = \"Background\"), alpha = 0.25) +    # scale 2    scale_fill_manual(name = \"\", values = c(\"Background\" = \"azure4\"), guide = guide_legend(order = 2)) +   # labels    labs(     title = \"ExDet analysis | bio2, bio11, bio12, bio15 | 1981-2010\",     subtitle = \"Global climate divergence from 'regional_ensemble' model training set\"     ) # save plot ggsave(   exdet_regional_ensemble_hist_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"ExDet_slf_regional_ensemble_v1_background_projGlobe_1981-2010.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"ssp126-2","dir":"Articles","previous_headings":"5. Ensemble ExDet / MIC maps > 5.1 ExDet","what":"ssp126","title":"Ensemble regional-scale models into a single prediction","text":"","code":"# CMIP6 exdet_126_mean <- terra::app(   x = exdet_126_stack2,   fun = \"mean\",   filename = file.path(     mypath, \"models\", \"slf_regional_ensemble_v1\", \"ExDet_slf_regional_ensemble_v1_background_projGlobe_2041-2070_GFDL_ssp126.asc\"     ),   filetype = \"AAIGrid\",   overwrite = FALSE ) # re-load object as df exdet_126_mean <- terra::rast(x =  file.path(     mypath, \"models\", \"slf_regional_ensemble_v1\", \"ExDet_slf_regional_ensemble_v1_background_projGlobe_2041-2070_GFDL_ssp126.asc\"     ))   exdet_126_mean_df <- terra::as.data.frame(exdet_126_mean, xy = TRUE)  # plot mean raster first exdet_regional_ensemble_126_plot <- map_exdet(   raster = exdet_126_mean,    raster.df = exdet_126_mean_df   ) + # add background area shapes   ggnewscale::new_scale_fill() +    # add layer for bg point area   geom_raster(data = regional_native_background_area_df, aes(x = x, y = y, fill = \"Background\"), alpha = 0.25) +   geom_raster(data = regional_invaded_background_area_df, aes(x = x, y = y, fill = \"Background\"), alpha = 0.25) +   geom_raster(data = regional_invaded_asian_background_area_df, aes(x = x, y = y, fill = \"Background\"), alpha = 0.25) +    # scale 2    scale_fill_manual(name = \"\", values = c(\"Background\" = \"azure4\"), guide = guide_legend(order = 2)) +   # labels   labs(     title = \"ExDet analysis | bio2, bio11, bio12, bio15 | 2041-2070 | ssp126 GFDL-ESM4\",     subtitle = \"Global climate divergence from 'regional_ensemble' model training set\"   ) # save plot ggsave(   exdet_regional_ensemble_126_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"ExDet_slf_regional_ensemble_v1_background_projGlobe_2041-2070_ssp126_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"ssp370-2","dir":"Articles","previous_headings":"5. Ensemble ExDet / MIC maps > 5.1 ExDet","what":"ssp370","title":"Ensemble regional-scale models into a single prediction","text":"","code":"# CMIP6 exdet_370_mean <- terra::app(   x = exdet_370_stack2,   fun = \"mean\",   filename = file.path(     mypath, \"models\", \"slf_regional_ensemble_v1\", \"ExDet_slf_regional_ensemble_v1_background_projGlobe_2041-2070_GFDL_ssp370.asc\"     ),   filetype = \"AAIGrid\",   overwrite = FALSE ) # re-load object as df exdet_370_mean <- terra::rast(x =  file.path(     mypath, \"models\", \"slf_regional_ensemble_v1\", \"ExDet_slf_regional_ensemble_v1_background_projGlobe_2041-2070_GFDL_ssp370.asc\"     ))   exdet_370_mean_df <- terra::as.data.frame(exdet_370_mean, xy = TRUE)  # plot mean raster first exdet_regional_ensemble_370_plot <- map_exdet(   raster = exdet_370_mean,   raster.df = exdet_370_mean_df ) + # add background area shapes   ggnewscale::new_scale_fill() +    # add layer for bg point area   geom_raster(data = regional_native_background_area_df, aes(x = x, y = y, fill = \"Background\"), alpha = 0.25) +   geom_raster(data = regional_invaded_background_area_df, aes(x = x, y = y, fill = \"Background\"), alpha = 0.25) +   geom_raster(data = regional_invaded_asian_background_area_df, aes(x = x, y = y, fill = \"Background\"), alpha = 0.25) +    # scale 2    scale_fill_manual(name = \"\", values = c(\"Background\" = \"azure4\"), guide = guide_legend(order = 2)) +   # labels   labs(     title = \"ExDet analysis | bio2, bio11, bio12, bio15 | 2041-2070 | ssp370 GFDL-ESM4\",     subtitle = \"Global climate divergence from 'regional_ensemble' model training set\"   ) # save plot ggsave(   exdet_regional_ensemble_370_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"ExDet_slf_regional_ensemble_v1_background_projGlobe_2041-2070_ssp370_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"ssp585-2","dir":"Articles","previous_headings":"5. Ensemble ExDet / MIC maps > 5.1 ExDet","what":"ssp585","title":"Ensemble regional-scale models into a single prediction","text":"","code":"# CMIP6 exdet_585_mean <- terra::app(   x = exdet_585_stack2,   fun = \"mean\",   filename = file.path(     mypath, \"models\", \"slf_regional_ensemble_v1\", \"ExDet_slf_regional_ensemble_v1_background_projGlobe_2041-2070_GFDL_ssp585.asc\"     ),   filetype = \"AAIGrid\",   overwrite = FALSE ) # re-load object as df exdet_585_mean <- terra::rast(x =  file.path(     mypath, \"models\", \"slf_regional_ensemble_v1\", \"ExDet_slf_regional_ensemble_v1_background_projGlobe_2041-2070_GFDL_ssp585.asc\"     ))   exdet_585_mean_df <- terra::as.data.frame(exdet_585_mean, xy = TRUE)  # plot mean raster first exdet_regional_ensemble_585_plot <- map_exdet(   raster = exdet_585_mean,   raster.df = exdet_585_mean_df ) + # add background area shapes   # new fill scale   ggnewscale::new_scale_fill() +    # add layer for bg point area   geom_raster(data = regional_native_background_area_df, aes(x = x, y = y, fill = \"Background\"), alpha = 0.25) +   geom_raster(data = regional_invaded_background_area_df, aes(x = x, y = y, fill = \"Background\"), alpha = 0.25) +   geom_raster(data = regional_invaded_asian_background_area_df, aes(x = x, y = y, fill = \"Background\"), alpha = 0.25) +    # scale 2    scale_fill_manual(name = \"\", values = c(\"Background\" = \"azure4\"), guide = guide_legend(order = 2)) +   # labels   labs(     title = \"ExDet analysis | bio2, bio11, bio12, bio15 | 2041-2070 | ssp585 GFDL-ESM4\",     subtitle = \"Global climate divergence from 'regional_ensemble' model training set\"   ) # save plot ggsave(   exdet_regional_ensemble_585_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"ExDet_slf_regional_ensemble_v1_background_projGlobe_2041-2070_ssp585_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"ssp-mean","dir":"Articles","previous_headings":"5. Ensemble ExDet / MIC maps > 5.1 ExDet","what":"ssp mean","title":"Ensemble regional-scale models into a single prediction","text":"","code":"exdet_ssp_mean_stack <- c(exdet_126_mean, exdet_370_mean, exdet_585_mean) # CMIP6 exdet_ssp_mean <- terra::app(   x = exdet_ssp_mean_stack,   fun = \"mean\",   filename = file.path(     mypath, \"models\", \"slf_regional_ensemble_v1\", \"ExDet_slf_regional_ensemble_v1_background_projGlobe_2041-2070_GFDL_ssp_mean.asc\"     ),   filetype = \"AAIGrid\",   overwrite = FALSE ) # re-load object as df exdet_ssp_mean <- terra::rast(x =  file.path(     mypath, \"models\", \"slf_regional_ensemble_v1\", \"ExDet_slf_regional_ensemble_v1_background_projGlobe_2041-2070_GFDL_ssp_mean.asc\"     ))   exdet_ssp_mean_df <- terra::as.data.frame(exdet_ssp_mean, xy = TRUE)  # plot mean raster first exdet_regional_ensemble_mean_plot <- map_exdet(   raster = exdet_ssp_mean,   raster.df = exdet_ssp_mean_df ) + # add background area shapes   ggnewscale::new_scale_fill() +    # add layer for bg point area   geom_raster(data = regional_native_background_area_df, aes(x = x, y = y, fill = \"Background\"), alpha = 0.25) +   geom_raster(data = regional_invaded_background_area_df, aes(x = x, y = y, fill = \"Background\"), alpha = 0.25) +   geom_raster(data = regional_invaded_asian_background_area_df, aes(x = x, y = y, fill = \"Background\"), alpha = 0.25) +    # scale 2    scale_fill_manual(name = \"\", values = c(\"Background\" = \"azure4\"), guide = guide_legend(order = 2)) +   # labels   labs(     title = \"ExDet analysis | bio2, bio11, bio12, bio15 | 2041-2070 | mean of ssp126, 370, 585 | GFDL-ESM4\",     subtitle = \"Global climate divergence from 'regional_ensemble' model training set\"   ) # save plot ggsave(   exdet_regional_ensemble_mean_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"ExDet_slf_regional_ensemble_v1_background_projGlobe_2041-2070_ssp_mean_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"mic","dir":"Articles","previous_headings":"5. Ensemble ExDet / MIC maps","what":"5.2 MIC","title":"Ensemble regional-scale models into a single prediction","text":"also ensemble MIC maps. combined according mode (common value cell) among 3 rasters.","code":"map_style_MIC <- list(   theme_classic(),   theme(legend.position = \"bottom\",         panel.background = element_rect(fill = \"azure3\",                                         colour = \"azure3\")   ),   scale_x_continuous(expand = c(0, 0)),   scale_y_continuous(expand = c(0, 0)),   labs(     x = \"longitude\",     y = \"latitude\"   ),   coord_equal() )  # color scheme taken from: https://colorbrewer2.org/?type=diverging&scheme=RdBu&n=11"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"prepare-files-1","dir":"Articles","previous_headings":"5. Ensemble ExDet / MIC maps > 5.2 MIC","what":"prepare files","title":"Ensemble regional-scale models into a single prediction","text":"","code":"mic_regional_native <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"mic_slf_regional_native_v3_background_projGlobe.tif\") )  mic_regional_invaded <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"mic_slf_regional_invaded_v7_background_projGlobe.tif\") )  mic_regional_invaded_asian <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"mic_slf_regional_invaded_asian_v2_background_projGlobe.tif\") ) # ssp 126 mic_regional_native_126 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"mic_slf_regional_native_v3_background_projGlobe_2041-2070_ssp126_GFDL.tif\") ) mic_regional_invaded_126 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"mic_slf_regional_invaded_v7_background_projGlobe_2041-2070_ssp126_GFDL.tif\") ) mic_regional_invaded_asian_126 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"mic_slf_regional_invaded_asian_v2_background_projGlobe_2041-2070_ssp126_GFDL.tif\") )  # ssp 370 mic_regional_native_370 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"mic_slf_regional_native_v3_background_projGlobe_2041-2070_ssp370_GFDL.tif\") ) mic_regional_invaded_370 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"mic_slf_regional_invaded_v7_background_projGlobe_2041-2070_ssp370_GFDL.tif\") ) mic_regional_invaded_asian_370 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"mic_slf_regional_invaded_asian_v2_background_projGlobe_2041-2070_ssp370_GFDL.tif\") )  # ssp 585 mic_regional_native_585 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_native_v3\", \"mic_slf_regional_native_v3_background_projGlobe_2041-2070_ssp585_GFDL.tif\") ) mic_regional_invaded_585 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_invaded_v7\", \"mic_slf_regional_invaded_v7_background_projGlobe_2041-2070_ssp585_GFDL.tif\") ) mic_regional_invaded_asian_585 <- terra::rast(   x = file.path(mypath, \"models\", \"slf_regional_invaded_asian_v2\", \"mic_slf_regional_invaded_asian_v2_background_projGlobe_2041-2070_ssp585_GFDL.tif\") ) # historical mic_hist_stack2 <- c(mic_regional_native, mic_regional_invaded, mic_regional_invaded_asian) # CMIP6 mic_126_stack2 <- c(mic_regional_native_126, mic_regional_invaded_126, mic_regional_invaded_asian_126) mic_370_stack2 <- c(mic_regional_native_370, mic_regional_invaded_370, mic_regional_invaded_asian_370) mic_585_stack2 <- c(mic_regional_native_585, mic_regional_invaded_585, mic_regional_invaded_asian_585)"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"historical-5","dir":"Articles","previous_headings":"5. Ensemble ExDet / MIC maps > 5.2 MIC","what":"historical","title":"Ensemble regional-scale models into a single prediction","text":"","code":"# historical mic_hist_mean <- terra::app(   x = mic_hist_stack2,   fun = \"modal\",   filename = file.path(mypath, \"models\", \"slf_regional_ensemble_v1\", \"mic_slf_regional_ensemble_v1_background_projGlobe_1981-2010.asc\"),   filetype = \"AAIGrid\",   overwrite = FALSE ) # make df mic_hist_mean_df <- terra::rast(x =  file.path(     mypath, \"models\", \"slf_regional_ensemble_v1\", \"mic_slf_regional_ensemble_v1_background_projGlobe_1981-2010.asc\"     )) %>%   terra::as.data.frame(xy = TRUE)  # plot mean raster first mic_hist_mean_plot <- ggplot() +   # default plot style   map_style_MIC +   # plot regular raster of values first   geom_raster(data = mic_hist_mean_df, aes(x = x, y = y, fill = as.factor(modal))) +   # fill scale 1   viridis::scale_fill_viridis(name = \"MIC\", discrete = TRUE, labels = c(\"analogous\", \"bio11\", \"bio12\", \"bio15\", \"bio2\"), guide = guide_legend(order = 1)) +   # new scale   ggnewscale::new_scale_fill() +    # add layer for bg point area   geom_raster(data = regional_native_background_area_df, aes(x = x, y = y, fill = \"Background\"), alpha = 0.75) +   geom_raster(data = regional_invaded_background_area_df, aes(x = x, y = y, fill = \"Background\"), alpha = 0.75) +   geom_raster(data = regional_invaded_asian_background_area_df, aes(x = x, y = y, fill = \"Background\"), alpha = 0.75) +   # scale 2   scale_fill_manual(name = \"\", values = c(\"Background\" = \"azure4\"), guide = guide_legend(order = 2)) +   # labels   labs(     title = \"Most Influential Covariate (MIC) analysis | 1981-2010\",     subtitle = \"Covariate causing most extrapolation from 'regional_ensemble' model training set\"     ) # save plot ggsave(   mic_hist_mean_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"MIC_slf_regional_ensemble_v1_background_projGlobe_1981-2010.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"ssp-126-2","dir":"Articles","previous_headings":"5. Ensemble ExDet / MIC maps > 5.2 MIC","what":"ssp 126","title":"Ensemble regional-scale models into a single prediction","text":"","code":"mic_126_mean <- terra::app(   x = mic_126_stack2,   fun = \"modal\",   filename = file.path(     mypath, \"models\", \"slf_regional_ensemble_v1\", \"mic_slf_regional_ensemble_v1_background_projGlobe_2041-2070_GFDL_ssp126.asc\"     ),   filetype = \"AAIGrid\",   overwrite = FALSE )  # make df mic_126_mean_df <- terra::rast(x =  file.path(     mypath, \"models\", \"slf_regional_ensemble_v1\", \"mic_slf_regional_ensemble_v1_background_projGlobe_2041-2070_GFDL_ssp126.asc\"     )) %>%   terra::as.data.frame(xy = TRUE) # plot mean raster first mic_126_mean_plot <- ggplot() +   # default plot style   map_style_MIC +   # plot regular raster of values first   geom_raster(data = mic_126_mean_df, aes(x = x, y = y, fill = as.factor(modal))) +   # scale 1   viridis::scale_fill_viridis(name = \"MIC\", discrete = TRUE, labels = c(\"analogous\", \"bio11\", \"bio12\", \"bio15\", \"bio2\"), guide = guide_legend(order = 1)) +   # new scale   ggnewscale::new_scale_fill() +    # add layer for bg point area   geom_raster(data = regional_native_background_area_df, aes(x = x, y = y, fill = \"Background\"), alpha = 0.75) +   geom_raster(data = regional_invaded_background_area_df, aes(x = x, y = y, fill = \"Background\"), alpha = 0.75) +   geom_raster(data = regional_invaded_asian_background_area_df, aes(x = x, y = y, fill = \"Background\"), alpha = 0.75) +    # scale 2    scale_fill_manual(name = \"\", values = c(\"Background\" = \"azure4\"), guide = guide_legend(order = 2)) +   # labels   labs(     title = \"Most Influential Covariate (MIC) analysis | 2041-2070 | ssp126 GFDL-ESM4\",     subtitle = \"Covariate causing most extrapolation from 'regional_ensemble' model training set\"     ) # save plot ggsave(   mic_126_mean_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"MIC_slf_regional_ensemble_v1_background_projGlobe_2041-2070_ssp126_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"ssp-370-2","dir":"Articles","previous_headings":"5. Ensemble ExDet / MIC maps > 5.2 MIC","what":"ssp 370","title":"Ensemble regional-scale models into a single prediction","text":"","code":"mic_370_mean <- terra::app(   x = mic_370_stack2,   fun = \"modal\",   filename = file.path(     mypath, \"models\", \"slf_regional_ensemble_v1\", \"mic_slf_regional_ensemble_v1_background_projGlobe_2041-2070_GFDL_ssp370.asc\"     ),   filetype = \"AAIGrid\",   overwrite = FALSE )  # make df mic_370_mean_df <- terra::rast(x =  file.path(     mypath, \"models\", \"slf_regional_ensemble_v1\", \"mic_slf_regional_ensemble_v1_background_projGlobe_2041-2070_GFDL_ssp370.asc\"     )) %>%   terra::as.data.frame(xy = TRUE) # plot mean raster first mic_370_mean_plot <- ggplot() +   # default plot style   map_style_MIC +   # plot regular raster of values first   geom_raster(data = mic_370_mean_df, aes(x = x, y = y, fill = as.factor(modal))) +   # scale 1   viridis::scale_fill_viridis(name = \"MIC\", discrete = TRUE, labels = c(\"analogous\", \"bio11\", \"bio12\", \"bio15\", \"bio2\"), guide = guide_legend(order = 1)) +   # new scale   ggnewscale::new_scale_fill() +    # add layer for bg point area   geom_raster(data = regional_native_background_area_df, aes(x = x, y = y, fill = \"Background\"), alpha = 0.75) +   geom_raster(data = regional_invaded_background_area_df, aes(x = x, y = y, fill = \"Background\"), alpha = 0.75) +   geom_raster(data = regional_invaded_asian_background_area_df, aes(x = x, y = y, fill = \"Background\"), alpha = 0.75) +    # scale 2    scale_fill_manual(name = \"\", values = c(\"Background\" = \"azure4\"), guide = guide_legend(order = 2)) +   # labels   labs(     title = \"Most Influential Covariate (MIC) analysis | 2041-2070 | ssp370 GFDL-ESM4\",     subtitle = \"Covariate causing most extrapolation from 'regional_ensemble' model training set\"     ) # save plot ggsave(   mic_370_mean_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"MIC_slf_regional_ensemble_v1_background_projGlobe_2041-2070_ssp370_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"ssp-585-2","dir":"Articles","previous_headings":"5. Ensemble ExDet / MIC maps > 5.2 MIC","what":"ssp 585","title":"Ensemble regional-scale models into a single prediction","text":"","code":"mic_585_mean <- terra::app(   x = mic_585_stack2,   fun = \"modal\",   filename = file.path(     mypath, \"models\", \"slf_regional_ensemble_v1\", \"mic_slf_regional_ensemble_v1_background_projGlobe_2041-2070_GFDL_ssp585.asc\"     ),   filetype = \"AAIGrid\",   overwrite = FALSE )  # make df mic_585_mean_df <- terra::rast(x =  file.path(     mypath, \"models\", \"slf_regional_ensemble_v1\", \"mic_slf_regional_ensemble_v1_background_projGlobe_2041-2070_GFDL_ssp585.asc\"     )) %>%   terra::as.data.frame(xy = TRUE) # plot mean raster first mic_585_mean_plot <- ggplot() +   # default plot style   map_style_MIC +   # plot regular raster of values first   geom_raster(data = mic_585_mean_df, aes(x = x, y = y, fill = as.factor(modal))) +   # scale 1   viridis::scale_fill_viridis(name = \"MIC\", discrete = TRUE, labels = c(\"analogous\", \"bio11\", \"bio12\", \"bio15\", \"bio2\"), guide = guide_legend(order = 1)) +   # new scale   ggnewscale::new_scale_fill() +    # add layer for bg point area   geom_raster(data = regional_native_background_area_df, aes(x = x, y = y, fill = \"Background\"), alpha = 0.75) +   geom_raster(data = regional_invaded_background_area_df, aes(x = x, y = y, fill = \"Background\"), alpha = 0.75) +   geom_raster(data = regional_invaded_asian_background_area_df, aes(x = x, y = y, fill = \"Background\"), alpha = 0.75) +    # scale 2    scale_fill_manual(name = \"\", values = c(\"Background\" = \"azure4\"), guide = guide_legend(order = 2)) +   # labels   labs(     title = \"Most Influential Covariate (MIC) analysis | 2041-2070 | ssp585 GFDL-ESM4\",     subtitle = \"Covariate causing most extrapolation from 'regional_ensemble' model training set\"     ) # save plot ggsave(   mic_585_mean_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"MIC_slf_regional_ensemble_v1_background_projGlobe_2041-2070_ssp585_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"ssp-mode","dir":"Articles","previous_headings":"5. Ensemble ExDet / MIC maps > 5.2 MIC","what":"ssp mode","title":"Ensemble regional-scale models into a single prediction","text":"","code":"mic_ssp_mode_stack <- c(mic_126_mean, mic_370_mean, mic_585_mean) # CMIP6 mic_ssp_mode <- terra::app(   x = mic_ssp_mode_stack,   fun = \"modal\",   filename = file.path(     mypath, \"models\", \"slf_regional_ensemble_v1\", \"mic_slf_regional_ensemble_v1_background_projGlobe_2041-2070_GFDL_ssp_mode.asc\"     ),   filetype = \"AAIGrid\",   overwrite = FALSE ) # re-load object as df mic_ssp_mode_df <- terra::rast(x =  file.path(     mypath, \"models\", \"slf_regional_ensemble_v1\", \"mic_slf_regional_ensemble_v1_background_projGlobe_2041-2070_GFDL_ssp_mode.asc\"     )) %>%   terra::as.data.frame(xy = TRUE)  mic_ssp_mode_plot <- ggplot() +   # default plot style   map_style_MIC +   # plot regular raster of values first   geom_raster(data = mic_ssp_mode_df, aes(x = x, y = y, fill = as.factor(modal))) +   # scale 1   viridis::scale_fill_viridis(name = \"MIC\", discrete = TRUE, labels = c(\"analogous\", \"bio11\", \"bio12\", \"bio15\", \"bio2\"), guide = guide_legend(order = 1)) +   # new scale   ggnewscale::new_scale_fill() +    # add layer for bg point area   geom_raster(data = regional_native_background_area_df, aes(x = x, y = y, fill = \"Background\"), alpha = 0.75) +   geom_raster(data = regional_invaded_background_area_df, aes(x = x, y = y, fill = \"Background\"), alpha = 0.75) +   geom_raster(data = regional_invaded_asian_background_area_df, aes(x = x, y = y, fill = \"Background\"), alpha = 0.75) +    # scale 2    scale_fill_manual(name = \"\", values = c(\"Background\" = \"azure4\"), guide = guide_legend(order = 2)) +   # labels   labs(     title = \"Most Influential Covariate (MIC) analysis | mode of ssp126, 370, 585 | GFDL-ESM4\",     subtitle = \"Covariate causing most extrapolation from 'regional_ensemble' model training set\"   ) # save plot ggsave(   mic_ssp_mode_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"mic_slf_regional_ensemble_v1_background_projGlobe_2041-2070_ssp_mode_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"plot--relative-weights-percent-cont","dir":"Articles","previous_headings":"","what":"6. plot- Relative weights percent cont","title":"Ensemble regional-scale models into a single prediction","text":"bar chart show relative weights three regional models percent contribution total ensemble. take relative weights exdet raster, normalize plot weights. Now created ensembled prediction regional-scale models, can compare global model predictions explore suitability SLF climate change using suitability maps, point-wise predictions, quadrant plots, variable response curves others.","code":"# native ensemble_weight_regional_native_hist <- terra::rast(file.path(mypath, \"models\", \"slf_regional_ensemble_v1\", \"ensemble_weights_slf_regional_native_v3.tif\")) # invaded ensemble_weight_regional_invaded_hist <- terra::rast(file.path(mypath, \"models\", \"slf_regional_ensemble_v1\", \"ensemble_weights_slf_regional_invaded_v7.tif\")) # invaded_asian ensemble_weight_regional_invaded_asian_hist <- terra::rast(file.path(mypath, \"models\", \"slf_regional_ensemble_v1\", \"ensemble_weights_slf_regional_invaded_asian_v2.tif\"))  # stack ensemble_weights_stack <- c(ensemble_weight_regional_native_hist, ensemble_weight_regional_invaded_hist, ensemble_weight_regional_invaded_asian_hist) # take mean of weights relative_weights <- c(   regional_native = mean(values(ensemble_weights_stack[[1]]), na.rm = TRUE),   regional_invaded = mean(values(ensemble_weights_stack[[2]]), na.rm = TRUE),   regional_invaded_asian = mean(values(ensemble_weights_stack[[3]]), na.rm = TRUE) ) %>%   abs() # absolute value   # sum the weights relative_weights_sum <- sum(relative_weights)  # normalize weights to sum to 1 relative_weights_prop <- relative_weights / relative_weights_sum %>%   as.vector()   # change names of weights names(relative_weights_prop) <- c(\"Rn (native)\", \"Ri.NAmerica\", \"Ri.Asia\")   # plotting colors ensemble_colors <- c(   \"Ri.NAmerica\" =  \"#e41a1c\",   \"Ri.ASia\" = \"#377eb8\",   \"Rn (native)\" = \"#4daf4a\" ) ensemble_relative_cont_plot <- ggplot() +   geom_bar(aes(x = names(relative_weights_prop), y = relative_weights_prop, fill = ensemble_colors), stat = \"identity\", color = \"black\") +   theme_bw() +   labs(     title = \"Relative contributions of models to regional_ensemble\",     x = \"model\",     y = \"relative contribution\"   ) +   # text labels   geom_text(aes(x = names(relative_weights_prop), y = relative_weights_prop - 0.05), label = scales::percent(relative_weights_prop)) +   # percent scale   scale_y_continuous(labels = scales::percent) +   scale_fill_manual(name = \"model\", values = c(\"#e41a1c\", \"#377eb8\", \"#4daf4a\"), labels = c(\"Ri.NAmerica\", \"Ri.Asia\", \"Rn (native)\")) ggsave(   ensemble_relative_cont_plot,    filename = file.path(     here::here(), \"vignette-outputs\", \"figures\", \"regional_ensemble_model_relative_contributions.jpg\"     ),   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Ensemble regional-scale models into a single prediction","text":"Araújo, M. B., & New, M. (2007). Ensemble forecasting species distributions. Trends Ecology & Evolution, 22(1), 42–47. https://doi.org/10.1016/j.tree.2006.09.010 Elith, J., Kearney, M., & Phillips, S. (2010). art modelling range-shifting species. Methods Ecology Evolution, 1(4), 330–342. https://doi.org/10.1111/j.2041-210X.2010.00036.x Mesgaran, M. B., Cousens, R. D., & Webber, B. L. (2014). dragons: tool quantifying novelty due covariate range correlation change projecting species distribution models. Diversity Distributions, 20(10), 1147–1159. https://doi.org/10.1111/ddi.12209","code":""},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"unweighted-mean-ensemble","dir":"Articles","previous_headings":"Appendix","what":"Unweighted mean ensemble","title":"Ensemble regional-scale models into a single prediction","text":"weighted mean ensemble rigorous considers climatic extrapolation goodness fit combines models. However, also include code create unweighted ensemble, event one preferred weighted ensemble. also take mean MTSS MTP thresholds","code":"# historical pred_hist_mean <- terra::app(   x = pred_hist_stack,   fun = \"mean\",   filename = file.path(mypath, \"models\", \"slf_regional_ensemble_v1\", \"ensemble_regional_unweighted_mean_globe_1981-2010.asc\"),   filetype = \"AAIGrid\",   overwrite = FALSE )  # CMIP6 # ssp126 pred_126_mean <- terra::app(   x = pred_126_stack,   fun = \"mean\",   filename = file.path(mypath, \"models\", \"slf_regional_ensemble_v1\", \"ensemble_regional_unweighted_mean_globe_2041-2070_GFDL_ssp126.asc\"),   filetype = \"AAIGrid\",   overwrite = FALSE ) # ssp126 pred_370_mean <- terra::app(   x = pred_370_stack,   fun = \"mean\",   filename = file.path(mypath, \"models\", \"slf_regional_ensemble_v1\", \"ensemble_regional_unweighted_mean_globe_2041-2070_GFDL_ssp370.asc\"),   filetype = \"AAIGrid\",   overwrite = FALSE )  # ssp585 pred_585_mean <- terra::app(   x = pred_585_stack,   fun = \"mean\",   filename = file.path(mypath, \"models\", \"slf_regional_ensemble_v1\", \"ensemble_regional_unweighted_mean_globe_2041-2070_GFDL_ssp585.asc\"),   filetype = \"AAIGrid\",   overwrite = FALSE ) #take means MTSS_mean_unweighted <- mean(MTSS_all) MTP_mean_unweighted <- mean(MTP_all)  # put into table ensemble_thresh_values_unweighted <- tibble(   thresh = c(\"MTP\", \"MTSS\"),   value = c(MTP_mean_unweighted, MTSS_mean_unweighted) ) write_csv(ensemble_thresh_values_unweighted, file = file.path(mypath, \"models\", \"slf_regional_ensemble_v1\", \"ensemble_threshold_values_unweighted.csv\"))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"test","dir":"Articles","previous_headings":"Appendix","what":"test","title":"Ensemble regional-scale models into a single prediction","text":"wanted test weighted.mean function normalizes weights 1. weights sum 1 wanted make sure normalize. think weighted.mean mean weights kept equal proportionally , summed 1.","code":"test_raster <- exdet_hist_stack values(test_raster) <- 2  minmax(pred_hist_stack)  # weighted mean test_weighted <- terra::weighted.mean(   x = pred_hist_stack,   w = test_raster # all cell weights are 2 )  minmax(test_weighted)  # just take the mean test_unweighted <- terra::app(   x = pred_hist_stack,   fun = \"mean\"  )  minmax(test_unweighted)      # also try with different weights values(test_raster[[1]]) <- 0.33 values(test_raster[[2]]) <- 0.52 values(test_raster[[3]]) <- 0.15  # weighted mean test_weighted <- terra::weighted.mean(   x = pred_hist_stack,   w = test_raster # all cell weights are 2 )  minmax(test_weighted)  # just take the mean test_unweighted <- terra::app(   x = pred_hist_stack,   fun = \"mean\"  )  minmax(test_unweighted)"},{"path":"https://ieco-lab.github.io/slfSpread/articles/110_ensemble_regional_models.html","id":"patchwork-plots--mic","dir":"Articles","previous_headings":"Appendix","what":"Patchwork plots- MIC","title":"Ensemble regional-scale models into a single prediction","text":"","code":"# historical mic_hist_mean_plot <- mic_hist_mean_plot +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"A\") +   scale_x_continuous(expand = c(0, 0)) +   scale_y_continuous(expand = c(0, 0)) +   theme(     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.1),     plot.tag = element_text(face = \"bold\", size = 25)     )   # CMIP6 # ssp 126 mic_126_mean_plot <- mic_126_mean_plot +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"B\") +   scale_x_continuous(expand = c(0, 0)) +   scale_y_continuous(expand = c(0, 0))  +   theme(     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.1),     plot.tag = element_text(face = \"bold\", size = 25)   ) # ssp 370 mic_370_mean_plot <- mic_370_mean_plot +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"C\") +   scale_x_continuous(expand = c(0, 0)) +   scale_y_continuous(expand = c(0, 0))  +   theme(     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.1),     plot.tag = element_text(face = \"bold\", size = 25)   ) # ssp 585 mic_585_mean_plot <- mic_585_mean_plot +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"D\") +   scale_x_continuous(expand = c(0, 0)) +   scale_y_continuous(expand = c(0, 0))  +   theme(     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.1),     plot.tag = element_text(face = \"bold\", size = 25)   )  # patch together mic_regional_ensemble_patchwork <- (   mic_hist_mean_plot / mic_126_mean_plot /   mic_370_mean_plot / mic_585_mean_plot ) +   plot_layout(axes = \"collect\", axis_titles = \"collect\", guides = \"collect\") +   plot_annotation(     title = \"Most Influential Covariate (MIC) analysis | (A) Present and 2055 climate change scnerios\\n(B) ssp126 (C) ssp370 (D) ssp585\",     subtitle = \"Covariate causing most extrapolation from 'regional_ensemble' model training sets\"     ) &   theme(legend.position = \"bottom\") ggsave(   mic_regional_ensemble_patchwork,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"MIC_regional_ensemble_background_projGlobe_patchwork.jpg\"),   height = 14,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Map regional ensemble predictions and intercept with global model","text":"last vignette, applied weighting factor three regional-scale models create ensembled mean prediction. already created global-scale model prediction, now regional-scale models ensembled, can directly compare predictions made two modeled scales. model multi-scale analysis projected entire globe, can now measure differences two models. goals application models look predictions SLF risk establishment made () spatially globally important winegrowing countries, (B) specific locations globally important viticultural regions, (C) location known SLF populations. plan explore suitability SLF via creating range outputs: risk maps range shift maps viticultural risk quadrant plots viticultural risk tables variable response curves summary statistics, including AUC variable contribution vignette, create mapping outputs depict risk SLF establishment historically future climate scenarios. also create range shift map show expansion contraction suitable area climate change. create maps intersecting global regional_ensemble model predictions create classified (binarized) rasters. level agreement model prediction used infer level SLF establishment risk. process follow general flow creating risk maps: Create suitable vs unsuitable classes based MTSS threshold rasters Convert model raster binary (suitable/unsuitable) based suitability thresholds Mosaic two rasters sum values. Re-classify summed raster areas agree presence, agree absence, one classifies classifies absent (4 total categories) created consensus MTSS threshold model previous vignette, use binarize rasters. procedure repeated ssp scenario mean scenarios produce different predictions based different climate scenarios. also calculate total area per risk category raster show change suitable area might change depending ssp scenario. Finally, plot range shift map show expansion contraction suitable area per ssp scenario (essentially, difference historical future predictions).","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Map regional ensemble predictions and intercept with global model","text":"Note: setting global options document certain code chunks rendered final .html file. set eval = FALSE none code re-run (preventing files overwritten knitting) simply overwrite chunks plots. load preset styles maps. regular map_style continuous suitability maps, map_style_binarized used specialized binary overlay maps regional ensemble global models.","code":"# general tools library(tidyverse)  #data manipulation library(here) #making directory pathways easier on different instances here::here() # here() starts at the root folder of this package. ## [1] \"C:/Users/tun83449/Documents/GitHub/slfSpread\" library(devtools) library(common)  # spatial data handling library(terra)   # aesthetics library(viridis) library(webshot) library(webshot2) library(kableExtra) map_style <- list(   xlab(\"longitude\"),   ylab(\"latitude\"),   theme_classic(),   theme(     # legend     legend.position = \"bottom\",     legend.title = element_text(margin = margin(r = 15, b = 45), hjust = 1),     legend.text = element_text(margin = margin(t = 10), angle = 35),     # background     panel.background = element_rect(fill = \"lightblue2\",                                         colour = \"lightblue2\")   ),   scale_x_continuous(expand = c(0, 0)),   scale_y_continuous(expand = c(0, 0)),   labs(fill = \"Suitability for SLF \\n(cloglog)\"),   coord_equal() ) map_style_binarized <- list(   xlab(\"longitude\"),   ylab(\"latitude\"),   theme_classic(),   theme(     # legend     legend.position = \"bottom\",     # background     panel.background = element_rect(fill = \"lightblue2\",                                         colour = \"lightblue2\")   ),   scale_x_continuous(expand = c(0, 0)),   scale_y_continuous(expand = c(0, 0)),   coord_equal() ) mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/models\")"},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"import-datasets","dir":"Articles","previous_headings":"","what":"Import datasets","title":"Map regional ensemble predictions and intercept with global model","text":"import predicted suitability rasters MTSS thresholds models. stack rasters harmonize naming.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"regional-ensemble","dir":"Articles","previous_headings":"Import datasets","what":"regional ensemble","title":"Map regional ensemble predictions and intercept with global model","text":"","code":"# historical  regional_ensemble_1995 <- terra::rast(   x = file.path(mypath, \"slf_regional_ensemble_v1\", \"ensemble_regional_weighted_mean_globe_1981-2010.asc\")   )   # CMIP6 # ssp126 regional_ensemble_2055_126 <- terra::rast(   x = file.path(mypath, \"slf_regional_ensemble_v1\", \"ensemble_regional_weighted_mean_globe_2041-2070_GFDL_ssp126.asc\")   ) # ssp370 regional_ensemble_2055_370 <- terra::rast(   x = file.path(mypath, \"slf_regional_ensemble_v1\", \"ensemble_regional_weighted_mean_globe_2041-2070_GFDL_ssp370.asc\")   ) # ssp585 regional_ensemble_2055_585 <- terra::rast(   x = file.path(mypath, \"slf_regional_ensemble_v1\", \"ensemble_regional_weighted_mean_globe_2041-2070_GFDL_ssp585.asc\")   )  # the mean of the ssp scenarios regional_ensemble_2055_ssp_mean <- terra::rast(   x = file.path(mypath, \"slf_regional_ensemble_v1\", \"ensemble_regional_weighted_mean_globe_2041-2070_GFDL_ssp_averaged.asc\")   ) regional_ensemble_thresholds <- read_csv(file = file.path(mypath, \"slf_regional_ensemble_v1\", \"ensemble_threshold_values.csv\")) # change names names(regional_ensemble_1995) <- \"ensemble_suitability\" # CMIP6 names(regional_ensemble_2055_126) <- \"ensemble_suitability\" names(regional_ensemble_2055_370) <- \"ensemble_suitability\" names(regional_ensemble_2055_585) <- \"ensemble_suitability\" names(regional_ensemble_2055_ssp_mean) <- \"ensemble_suitability\"  # also convert to df regional_ensemble_1995_df <- terra::as.data.frame(regional_ensemble_1995, xy = TRUE) # CMIP6 regional_ensemble_2055_126_df <- terra::as.data.frame(regional_ensemble_2055_126, xy = TRUE) regional_ensemble_2055_370_df <- terra::as.data.frame(regional_ensemble_2055_370, xy = TRUE) regional_ensemble_2055_585_df <- terra::as.data.frame(regional_ensemble_2055_585, xy = TRUE) regional_ensemble_2055_ssp_mean_df <- terra::as.data.frame(regional_ensemble_2055_ssp_mean, xy = TRUE)"},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"global-model","dir":"Articles","previous_headings":"Import datasets","what":"Global model","title":"Map regional ensemble predictions and intercept with global model","text":"","code":"# historical  global_1995 <- terra::rast(   x = file.path(mypath, \"slf_global_v3\", \"global_pred_suit_clamped_cloglog_globe_1981-2010_mean.asc\")   )  # CMIP6 # ssp126 global_2055_126 <- terra::rast(   x = file.path(mypath, \"slf_global_v3\", \"global_pred_suit_clamped_cloglog_globe_2041-2070_GFDL_ssp126_mean.asc\")   ) # ssp370 global_2055_370 <- terra::rast(   x = file.path(mypath, \"slf_global_v3\", \"global_pred_suit_clamped_cloglog_globe_2041-2070_GFDL_ssp370_mean.asc\")   ) # ssp126 global_2055_585 <- terra::rast(   x = file.path(mypath, \"slf_global_v3\", \"global_pred_suit_clamped_cloglog_globe_2041-2070_GFDL_ssp585_mean.asc\")   )  # also import mean raster global_2055_ssp_mean <- terra::rast(   x = file.path(mypath, \"slf_global_v3\", \"global_pred_suit_clamped_cloglog_globe_2041-2070_GFDL_ssp_averaged.asc\")   ) summary_global <- read_csv(file.path(mypath, \"slf_global_v3\", \"global_summary_all_iterations.csv\")) %>%   dplyr::select(., statistic, mean) # change names # historical names(global_1995) <- \"global_suitability\" # CMIP6 names(global_2055_126) <- \"global_suitability\" names(global_2055_370) <- \"global_suitability\" names(global_2055_585) <- \"global_suitability\" names(global_2055_ssp_mean) <- \"global_suitability\"  # also convert to df global_1995_df <- terra::as.data.frame(global_1995, xy = TRUE) # CMIP6 global_2055_126_df <- terra::as.data.frame(global_2055_126, xy = TRUE) global_2055_370_df <- terra::as.data.frame(global_2055_370, xy = TRUE) global_2055_585_df <- terra::as.data.frame(global_2055_585, xy = TRUE) global_2055_ssp_mean_df <- terra::as.data.frame(global_2055_ssp_mean, xy = TRUE)"},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"map-cloglog-suitability","dir":"Articles","previous_headings":"","what":"1. Map cloglog suitability","title":"Map regional ensemble predictions and intercept with global model","text":"binarize mapped predictions, plot raw suitability maps models.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"mapping-helper-function","dir":"Articles","previous_headings":"1. Map cloglog suitability","what":"1.1 Mapping helper function","title":"Map regional ensemble predictions and intercept with global model","text":"try reduce amount repeated code using mapping helper function containing body plotting code. part remain relatively unchanged time.","code":"map_cloglog_output <- function(raster.df, raster.value.name, thresh.MTP, thresh.MTSS) {      # raster.df = the dataframe of the raster   # raster.value.name = the name of the raster values   # thresh.MTP = the df cell coordinates of the MTP thresh   # thresh.MTSS = the df cell coordinates of the MTSS thresh      ggplot() +     # default style object     map_style +     # plot raster     geom_raster(data = raster.df, aes(x = x, y = y, fill = raster.value.name)) +     # aesthetics     scale_fill_gradientn(       # the values of the color divisions: 0, MTP, slightly above MTP, MTSS, slightly above MTSS, 0.5, 0.75, 1       values = c(         0, # minimum         as.numeric(thresh.MTP), # MTP thresh         as.numeric(thresh.MTP) + 0.0000001, # some small amount more than the MTP         as.numeric(thresh.MTSS), # MTSS thresh         as.numeric(thresh.MTSS) + 0.0000001,         # the rest         0.5,         0.75,         1         ),       # these colors taken from viridis color scale D       # the colors for the divisions in the order: 0, MTP, slightly above MTP, MTSS, slightly above MTSS, 0.5, 0.75, 1       colors = c(\"azure4\", \"azure4\", \"azure2\", \"azure2\", \"#481567FF\", \"#2D708EFF\", \"#3CBB75FF\", \"#FDE725FF\"),       # the tick marks       breaks = c(0, as.numeric(thresh.MTP), as.numeric(thresh.MTSS), 0.5, 0.75, 1.00),       # labels for the tick marks       labels = c(\"unsuitable\", \"\", paste0(round(as.numeric(thresh.MTSS), 2), \"\\n(MTSS thresh)\"), 0.5, 0.75, 1),       limits = c(0, 1.0),       guide = guide_colorbar(frame.colour = \"black\", ticks.colour = \"black\", barwidth = 20, draw.ulim = TRUE, draw.llim = TRUE)       )     }"},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"map-cloglog-output-of-models--historical","dir":"Articles","previous_headings":"1. Map cloglog suitability","what":"1.2 Map cloglog output of models- historical","title":"Map regional ensemble predictions and intercept with global model","text":"repeat process map predictions ssp scenario 2041-2070. also mean scenarios final prediction climate change.","code":"regional_ensemble_1995_plot <- map_cloglog_output(   raster.df = regional_ensemble_1995_df, # the dataframe of the raster   raster.value.name = regional_ensemble_1995_df$ensemble_suitability, # the name of the raster values   thresh.MTP = regional_ensemble_thresholds[1, 4], # the df cell coordinates of the MTP thresh   thresh.MTSS = regional_ensemble_thresholds[6, 4] # the df cell coordinates of the MTSS thresh ) +   # labs   labs(     title = \"Suitability for SLF in regional model ensemble\",     subtitle = \"1981-2010\",     caption = \"MTP & MTSS thresholds | clamped\"     ) ggsave(   regional_ensemble_1995_plot,   filename = file.path(mypath, \"slf_regional_ensemble_v1\", \"plots\", \"regional_ensemble_pred_suit_globe_1981-2010.jpg\"),   height = 8,   width = 12,   device = \"jpeg\",   dpi = \"retina\"   ) global_1995_plot <- map_cloglog_output(   raster.df = global_1995_df, # the dataframe of the raster   raster.value.name = global_1995_df$global_suitability, # the name of the raster values   thresh.MTP = summary_global[30, 2], # the df cell coordinates of the MTP thresh   thresh.MTSS = summary_global[42, 2] # the df cell coordinates of the MTSS thresh ) +   # labs   labs(     title = \"Suitability for SLF in global model\",     subtitle = \"1981-2010\",     caption = \"MTP & MTSS thresholds | clamped\"     ) ggsave(   global_1995_plot,   filename = file.path(mypath, \"slf_global_v3\", \"plots\", \"global_pred_suit_globe_1981-2010.jpg\"),   height = 8,   width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"ssp-126","dir":"Articles","previous_headings":"1. Map cloglog suitability > 1.3 Map cloglog output of models- CMIP6","what":"ssp 126","title":"Map regional ensemble predictions and intercept with global model","text":"","code":"regional_ensemble_2055_126_plot <- map_cloglog_output(   raster.df = regional_ensemble_2055_126_df, # the dataframe of the raster   raster.value.name = regional_ensemble_2055_126_df$ensemble_suitability, # the name of the raster values   thresh.MTP = regional_ensemble_thresholds[2, 4], # the df cell coordinates of the MTP thresh   thresh.MTSS = regional_ensemble_thresholds[7, 4] # the df cell coordinates of the MTSS thresh ) +   # labs   labs(     title = \"Suitability for SLF in regional model ensemble\",     subtitle = \"2041-2070 | ssp126 GFDL-ESM4\",     caption = \"MTP & MTSS thresholds | clamped\"     ) ggsave(   regional_ensemble_2055_126_plot,   filename = file.path(mypath, \"slf_regional_ensemble_v1\", \"plots\", \"regional_ensemble_pred_suit_globe_2041-2070_GFDL_ssp126.jpg\"),   height = 8,   width = 12,   device = \"jpeg\",   dpi = \"retina\"   ) # I had to change the row call of the thresholds tibble to row 2 [2, x]  global_2055_126_plot <- map_cloglog_output(   raster.df = global_2055_126_df, # the dataframe of the raster   raster.value.name = global_2055_126_df$global_suitability, # the name of the raster values   thresh.MTP = summary_global[30, 2], # the df cell coordinates of the MTP thresh   thresh.MTSS = summary_global[42, 2] # the df cell coordinates of the MTSS thresh ) +   # labs   labs(     title = \"Suitability for SLF in global model\",     subtitle = \"2041-2070 | ssp126 GFDL-ESM4\",     caption = \"MTP & MTSS thresholds | clamped\"     ) ggsave(   global_2055_126_plot,   filename = file.path(mypath, \"slf_global_v3\", \"plots\", \"global_pred_suit_globe_2041-2070_GFDL_ssp126.jpg\"),   height = 8,   width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"ssp-370","dir":"Articles","previous_headings":"1. Map cloglog suitability > 1.3 Map cloglog output of models- CMIP6","what":"ssp 370","title":"Map regional ensemble predictions and intercept with global model","text":"","code":"# I had to change the row call of the thresholds tibble to row 2 [2, x]  regional_ensemble_2055_370_plot <- map_cloglog_output(   raster.df = regional_ensemble_2055_370_df, # the dataframe of the raster   raster.value.name = regional_ensemble_2055_370_df$ensemble_suitability, # the name of the raster values   thresh.MTP = regional_ensemble_thresholds[3, 4], # the df cell coordinates of the MTP thresh   thresh.MTSS = regional_ensemble_thresholds[8, 4] # the df cell coordinates of the MTSS thresh ) +   # labs   labs(     title = \"Suitability for SLF in regional model ensemble\",     subtitle = \"2041-2070 | ssp370 GFDL-ESM4\",     caption = \"MTP & MTSS thresholds | clamped\"     ) ggsave(   regional_ensemble_2055_370_plot,   filename = file.path(mypath, \"slf_regional_ensemble_v1\", \"plots\", \"regional_ensemble_pred_suit_globe_2041-2070_GFDL_ssp370.jpg\"),   height = 8,   width = 12,   device = \"jpeg\",   dpi = \"retina\"   ) # I had to change the row call of the thresholds tibble to row 2 [2, x]  global_2055_370_plot <- map_cloglog_output(   raster.df = global_2055_370_df, # the dataframe of the raster   raster.value.name = global_2055_370_df$global_suitability, # the name of the raster values   thresh.MTP = summary_global[30, 2], # the df cell coordinates of the MTP thresh   thresh.MTSS = summary_global[42, 2] # the df cell coordinates of the MTSS thresh ) +   # labs   labs(     title = \"Suitability for SLF in global model\",     subtitle = \"2041-2070 | ssp370 GFDL-ESM4\",     caption = \"MTP & MTSS thresholds | clamped\"     ) ggsave(   global_2055_370_plot,   filename = file.path(mypath, \"slf_global_v3\", \"plots\", \"global_pred_suit_globe_2041-2070_GFDL_ssp370.jpg\"),   height = 8,   width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"ssp-585","dir":"Articles","previous_headings":"1. Map cloglog suitability > 1.3 Map cloglog output of models- CMIP6","what":"ssp 585","title":"Map regional ensemble predictions and intercept with global model","text":"","code":"# I had to change the row call of the thresholds tibble to row 2 [2, x]  regional_ensemble_2055_585_plot <- map_cloglog_output(   raster.df = regional_ensemble_2055_585_df, # the dataframe of the raster   raster.value.name = regional_ensemble_2055_585_df$ensemble_suitability, # the name of the raster values   thresh.MTP = regional_ensemble_thresholds[4, 4], # the df cell coordinates of the MTP thresh   thresh.MTSS = regional_ensemble_thresholds[9, 4] # the df cell coordinates of the MTSS thresh ) +   # labs   labs(     title = \"Suitability for SLF in regional model ensemble\",     subtitle = \"2041-2070 | ssp585 GFDL-ESM4\",     caption = \"MTP & MTSS thresholds | clamped\"     ) ggsave(   regional_ensemble_2055_585_plot,   filename = file.path(mypath, \"slf_regional_ensemble_v1\", \"plots\", \"regional_ensemble_pred_suit_globe_2041-2070_GFDL_ssp585.jpg\"),   height = 8,   width = 12,   device = \"jpeg\",   dpi = \"retina\"   ) global_2055_585_plot <- map_cloglog_output(   raster.df = global_2055_585_df, # the dataframe of the raster   raster.value.name = global_2055_585_df$global_suitability, # the name of the raster values   thresh.MTP = summary_global[30, 2], # the df cell coordinates of the MTP thresh   thresh.MTSS = summary_global[42, 2] # the df cell coordinates of the MTSS thresh ) +   # labs   labs(     title = \"Suitability for SLF in global model\",     subtitle = \"2041-2070 | ssp585 GFDL-ESM4\",     caption = \"MTP & MTSS thresholds | clamped\"     ) ggsave(   global_2055_585_plot,   filename = file.path(mypath, \"slf_global_v3\", \"plots\", \"global_pred_suit_globe_2041-2070_GFDL_ssp585.jpg\"),   height = 8,   width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"ssp-mean","dir":"Articles","previous_headings":"1. Map cloglog suitability > 1.3 Map cloglog output of models- CMIP6","what":"ssp mean","title":"Map regional ensemble predictions and intercept with global model","text":"Finally, plot mean three ssp scenarios.","code":"# I had to change the row call of the thresholds tibble to row 2 [2, x]  regional_ensemble_2055_ssp_mean_plot <- map_cloglog_output(   raster.df = regional_ensemble_2055_ssp_mean_df, # the dataframe of the raster   raster.value.name = regional_ensemble_2055_ssp_mean_df$ensemble_suitability, # the name of the raster values   thresh.MTP = regional_ensemble_thresholds[5, 4], # the df cell coordinates of the MTP thresh   thresh.MTSS = regional_ensemble_thresholds[10, 4] # the df cell coordinates of the MTSS thresh ) +   # labs   labs(     title = \"Suitability for SLF in regional model ensemble\",     subtitle = \"2041-2070 | mean of ssp126, 370, 585 GFDL-ESM4\",     caption = \"MTP & MTSS thresholds | clamped\"     ) ggsave(   regional_ensemble_2055_ssp_mean_plot,   filename = file.path(mypath, \"slf_regional_ensemble_v1\", \"plots\", \"regional_ensemble_pred_suit_globe_2041-2070_GFDL_ssp_mean.jpg\"),   height = 8,   width = 12,   device = \"jpeg\",   dpi = \"retina\"   ) global_2055_ssp_mean_plot <- map_cloglog_output(   raster.df = global_2055_ssp_mean_df, # the dataframe of the raster   raster.value.name = global_2055_ssp_mean_df$global_suitability, # the name of the raster values   thresh.MTP = summary_global[30, 2], # the df cell coordinates of the MTP thresh   thresh.MTSS = summary_global[42, 2] # the df cell coordinates of the MTSS thresh ) +   # labs   labs(     title = \"Suitability for SLF in global model\",     subtitle = \"2041-2070 | mean of ssp126, 370, 585 GFDL-ESM4\",     caption = \"MTP & MTSS thresholds | clamped\"     ) ggsave(   global_2055_ssp_mean_plot,   filename = file.path(mypath, \"slf_global_v3\", \"plots\", \"global_pred_suit_globe_2041-2070_GFDL_ssp_mean.jpg\"),   height = 8,   width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"create-binary-threshold-maps-to-infer-range-filling","dir":"Articles","previous_headings":"","what":"2. Create binary threshold maps to infer range filling","title":"Map regional ensemble predictions and intercept with global model","text":"Now idea suitability maps look like conversion, reclassify combine maps. create matrix objects used reclassify output rasters binary predictor suitability. use MTSS (““Maximum Test Sensitivity Plus Specificity”) threshold model threshold suitability, anything threshold considered unsuitable SLF establishment. reclassify, package terra takes 3-column matrix classify() function, re-classifies groups values single value. reclassify anything MTSS threshold one value, anything another. create separate classification matrices global regional-scale ensemble outputs. reason two separate matrices need differentiate “suitable” spot global regional rasters. Base-2 binary offers intuitive system creating class differences. encode rasters base-2 binary end result 4 categories values (idea found forum). encode cloglog output MaxEnt values: encoding rasters base-2, created 4 possible values raster layers, can translated 4 categories: Unsuitable Agreement = 5 (00000101) Suitable Agreement = 10 (00001010) unsuitable regional/suitable global = 9 (00001001) Suitable regional/unsuitable global = 6 (00000110) also interpret categories terms risk SLF suitability. categories can thought : Unsuitable Agreement = low risk Suitable Agreement = high risk Suitable regional/unsuitable global = adaptive risk unsuitable regional/suitable global = imminent risk Gallien et al, 2012 interprets categories terms specific ecological mechanisms, prefer interpret terms risk SLF.","code":"summary_global ## # A tibble: 52 × 2 ##    statistic                        mean ##    <chr>                           <dbl> ##  1 X.Training.samples            578.    ##  2 Regularized.training.gain       3.34  ##  3 Unregularized.training.gain     3.78  ##  4 Iterations                   1818     ##  5 Training.AUC                    0.986 ##  6 X.Background.points         20000     ##  7 bio11.contribution             58.8   ##  8 bio12.contribution             19.3   ##  9 bio15.contribution             15.6   ## 10 bio2.contribution               6.34  ## # ℹ 42 more rows # MTSS value is 0.041  regional_ensemble_thresholds ## # A tibble: 10 × 4 ##    thresh time_period CMIP6_model         value ##    <chr>  <chr>       <chr>               <dbl> ##  1 MTP    1981-2010   NA                 0.0128 ##  2 MTP    2041-2070   ssp126_GFDL        0.0128 ##  3 MTP    2041-2070   ssp370_GFDL        0.0128 ##  4 MTP    2041-2070   ssp585_GFDL        0.0128 ##  5 MTP    2041-2070   ssp_mean_GFDL-ESM4 0.0128 ##  6 MTSS   1981-2010   NA                 0.241  ##  7 MTSS   2041-2070   ssp126_GFDL        0.241  ##  8 MTSS   2041-2070   ssp370_GFDL        0.241  ##  9 MTSS   2041-2070   ssp585_GFDL        0.241  ## 10 MTSS   2041-2070   ssp_mean_GFDL-ESM4 0.241 # MTSS value is ~0.241"},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"convert-output-rasters-to-binary-predictors","dir":"Articles","previous_headings":"2. Create binary threshold maps to infer range filling","what":"2.1 convert output rasters to binary predictors","title":"Map regional ensemble predictions and intercept with global model","text":"walk workflow initially, functionalize avoid repeating four times.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"historical","dir":"Articles","previous_headings":"2. Create binary threshold maps to infer range filling > 2.1 convert output rasters to binary predictors","what":"historical","title":"Map regional ensemble predictions and intercept with global model","text":"convert rasters binary predictors presence / absence, first create classification matrices needed classify() function. converting, lets check range values. Now create classification rasters. pull respective .csv files. Now can reclassify MaxEnt outputs. load averaged predictions global regional models time period 1981-2010. reclassify values based two matrices . chunk might take time run. run error checks ensure binarization process worked. Now rasters converted binary, visualize ensure process worked. Since process done regional global models, plot regional model.  perform operation predicted climate change rasters 2041-2070 (ssp126, 370, 585 mean ). helper function , classify_matrix(), create object needed classify raster binary-based classes outlined .","code":"# get the range of the values in the raster terra::minmax(global_1995) %>%   format(., scientific = FALSE) # convert scientific notation to decimals ##     global_suitability   ## min \"0.0000000001702356\" ## max \"1.0000000000000000\" # get the range of the values in the raster terra::minmax(regional_ensemble_1995) %>%   format(., scientific = FALSE) ##     ensemble_suitability ## min \"0.0000001336334\"    ## max \"0.7144208550453\" # all looks good # create regional suitability value matrix for terra regional_ensemble_classes <- data.frame(   from = c(0, as.numeric(regional_ensemble_thresholds[6, 4]) + 0.0000000001), # add a small amount to the lower end of the 2nd range   to = c(as.numeric(regional_ensemble_thresholds[6, 4]), 1),    becomes = c(strtoi(00000001, base = 2), strtoi(00000010, base = 2)) # the strtoi function converts to base-2, becomes 1 and 2 )  global_classes <- data.frame(   from = c(0, as.numeric(summary_global[42, 2]) + 0.0000000001),   to = c(as.numeric(summary_global[42, 2]), 1),    becomes = c(strtoi(00000100, base = 2), strtoi(00001000, base = 2)) # becomes 4 and 8 ) # regional # reclassify and write regional raster regional_ensemble_1995_classified <- terra::classify(   x = regional_ensemble_1995,    rcl = regional_ensemble_classes,   right = NA, # close both ends of the range of classification values   others = strtoi(00000001, base = 2), # make it the unsuitable value if not in this range   filename = file.path(mypath, \"working_dir\", \"slf_regional_ensemble_v1_binarized_1981-2010.asc\"), # also write to file   filetype = \"AAIGrid\",   overwrite = FALSE   )   # global # reclassify and write global raster global_1995_classified <- terra::classify(   x = global_1995,    rcl = global_classes,    right = NA,    others = strtoi(00000100, base = 2),    filename = file.path(mypath, \"working_dir\", \"slf_global_v3_binarized_1981-2010.asc\"),    filetype = \"AAIGrid\",   overwrite = FALSE   ) # take minmax terra::minmax(global_1995_classified) %>%   format(., scientific = FALSE)  terra::minmax(regional_ensemble_1995_classified) %>%   format(., scientific = FALSE)  # all good  # check unique values unique(values(global_1995_classified)) unique(values(regional_ensemble_1995_classified)) # load in binary raster just created and convert to df regional_ensemble_1995_classified_df <- terra::rast(   x = file.path(mypath, \"working_dir\", \"slf_regional_ensemble_v1_binarized_1981-2010.asc\")   ) %>%   terra::as.data.frame(., xy = TRUE) #%>%   #na.omit()  # now, create vectors of values used to manually edit the scale of the plot # the possible values of the scale and their order breaks.obj <- unique(regional_ensemble_1995_classified_df$ensemble_suitability) # labels for the values labels.obj <- c(\"regional unsuitable\", \"regional suitable\") # vector of colors to classify scale values.obj <- c(   \"azure4\",   \"darkblue\" ) # plot regional binary ggplot() +   geom_raster(data = regional_ensemble_1995_classified_df, aes(x = x, y = y, fill = as.factor(ensemble_suitability))) +   labs(title = \"Binarized suitability for 'regional_ensemble' model\") +   scale_discrete_manual(     name = \"suitability for SLF\",     values = values.obj,     breaks = breaks.obj,     labels = labels.obj,     aesthetics = \"fill\",     ) +   map_style_binarized ## Warning: Raster pixels are placed at uneven horizontal intervals and will be shifted ## ℹ Consider using `geom_tile()` instead."},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"helper-function--terra-classify","dir":"Articles","previous_headings":"2. Create binary threshold maps to infer range filling > 2.1 convert output rasters to binary predictors","what":"helper function- terra classify","title":"Map regional ensemble predictions and intercept with global model","text":"","code":"classify_matrix <- function(thresh, model.scale) {      # thresh = the threshold for suitability in that model   # model = either of \"global\" or \"regional\"      # the strtoi function converts a number to base-2      # regional model classes   if (model.scale == \"regional\") {          data.frame(       from = c(0, as.numeric(thresh) + 0.0000000001), # add a small amount to the lower end of the 2nd range       to = c(as.numeric(thresh), 1),        becomes = c(strtoi(00000001, base = 2), strtoi(00000010, base = 2)) # becomes 1 and 2 )          # otherwise, go with global model   } else if (model.scale == \"global\") {          data.frame(       from = c(0, as.numeric(thresh) + 0.0000000001),       to = c(as.numeric(thresh), 1),        becomes = c(strtoi(00000100, base = 2), strtoi(00001000, base = 2)) # becomes 4 and 8     )        }      }"},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"ssp-126-1","dir":"Articles","previous_headings":"2. Create binary threshold maps to infer range filling > 2.1 convert output rasters to binary predictors","what":"ssp 126","title":"Map regional ensemble predictions and intercept with global model","text":"","code":"# get the range of the values in the raster terra::minmax(global_2055_126) %>%   format(., scientific = FALSE) # convert scientific notation to decimals   # get the range of the values in the raster terra::minmax(regional_ensemble_2055_126) %>%   format(., scientific = FALSE) # global global_classes <- classify_matrix(   thresh = summary_global[42, 2],   model.scale = \"global\" )  # regional ensemble regional_ensemble_classes <- classify_matrix(   thresh = regional_ensemble_thresholds[7, 4],   model.scale = \"regional\" ) # regional # reclassify and write regional raster regional_ensemble_2055_126_classified <- terra::classify(   x = regional_ensemble_2055_126,    rcl = regional_ensemble_classes,   right = NA, # close both ends of the range of classification values   others = strtoi(00000001, base = 2), # make it the unsuitable value if not in this range   filename = file.path(mypath, \"working_dir\", \"slf_regional_ensemble_v1_binarized_2041-2070_ssp126_GFDL.asc\"), # also write to file   filetype = \"AAIGrid\",   overwrite = FALSE   )   # global # reclassify and write global raster global_2055_126_classified <- terra::classify(   x = global_2055_126,    rcl = global_classes,    right = NA,    others = strtoi(00000100, base = 2),    filename = file.path(mypath, \"working_dir\", \"slf_global_v3_binarized_2041-2070_ssp126_GFDL.asc\"),    filetype = \"AAIGrid\",   overwrite = FALSE   ) # take minmax terra::minmax(global_2055_126_classified) %>%   format(., scientific = FALSE)  terra::minmax(regional_ensemble_2055_126_classified) %>%   format(., scientific = FALSE)  # all good  # check unique values unique(values(global_2055_126_classified)) unique(values(regional_ensemble_2055_126_classified)) # load in binary raster just created and convert to df regional_ensemble_2055_126_classified_df <- terra::rast(   x = file.path(mypath, \"working_dir\", \"slf_regional_ensemble_v1_binarized_2041-2070_ssp126_GFDL.asc\")   ) %>%   terra::as.data.frame(., xy = TRUE)  # now, create vectors of values used to manually edit the scale of the plot # the possible values of the scale and their order breaks.obj <- unique(regional_ensemble_2055_126_classified_df$ensemble_suitability) # labels for the values labels.obj <- c(\"regional unsuitable\", \"regional suitable\") # vector of colors to classify scale values.obj <- c(   \"azure4\",   \"darkblue\" ) # plot regional binary ggplot() +   geom_raster(data = regional_ensemble_2055_126_classified_df, aes(x = x, y = y, fill = as.factor(ensemble_suitability))) +   labs(     title = \"Binarized suitability for 'regional_ensemble' model\",     subtitle = \"projected to 2041-2070 | ssp126 | GFDL\"     ) +   scale_discrete_manual(     name = \"suitability for SLF\",     values = values.obj,     breaks = breaks.obj,     labels = labels.obj,     aesthetics = \"fill\"     ) +   map_style_binarized"},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"ssp-370-1","dir":"Articles","previous_headings":"2. Create binary threshold maps to infer range filling > 2.1 convert output rasters to binary predictors","what":"ssp 370","title":"Map regional ensemble predictions and intercept with global model","text":"","code":"# get the range of the values in the raster terra::minmax(global_2055_370) %>%   format(., scientific = FALSE) # convert scientific notation to decimals   # get the range of the values in the raster terra::minmax(regional_ensemble_2055_370) %>%   format(., scientific = FALSE) # global global_classes <- classify_matrix(   thresh = summary_global[42, 2],   model.scale = \"global\" )  # regional ensemble regional_ensemble_classes <- classify_matrix(   thresh = regional_ensemble_thresholds[8, 4],   model.scale = \"regional\" ) # regional # reclassify and write regional raster regional_ensemble_2055_370_classified <- terra::classify(   x = regional_ensemble_2055_370,    rcl = regional_ensemble_classes,   right = NA, # close both ends of the range of classification values   others = strtoi(00000001, base = 2), # make it the unsuitable value if not in this range   filename = file.path(mypath, \"working_dir\", \"slf_regional_ensemble_v1_binarized_2041-2070_ssp370_GFDL.asc\"), # also write to file   filetype = \"AAIGrid\",   overwrite = FALSE   )   # global # reclassify and write global raster global_2055_370_classified <- terra::classify(   x = global_2055_370,    rcl = global_classes,    right = NA,    others = strtoi(00000100, base = 2),    filename = file.path(mypath, \"working_dir\", \"slf_global_v3_binarized_2041-2070_ssp370_GFDL.asc\"),    filetype = \"AAIGrid\",   overwrite = FALSE   ) # take minmax terra::minmax(global_2055_370_classified) %>%   format(., scientific = FALSE)  terra::minmax(regional_ensemble_2055_370_classified) %>%   format(., scientific = FALSE)  # all good  # check unique values unique(values(global_2055_370_classified)) unique(values(regional_ensemble_2055_370_classified)) # load in binary raster just created and convert to df regional_ensemble_2055_370_classified_df <- terra::rast(   x = file.path(mypath, \"working_dir\", \"slf_regional_ensemble_v1_binarized_2041-2070_ssp370_GFDL.asc\")   ) %>%   terra::as.data.frame(., xy = TRUE)  # now, create vectors of values used to manually edit the scale of the plot # the possible values of the scale and their order breaks.obj <- unique(regional_ensemble_2055_370_classified_df$ensemble_suitability) # labels for the values labels.obj <- c(\"regional unsuitable\", \"regional suitable\") # vector of colors to classify scale values.obj <- c(   \"azure4\",   \"darkblue\" ) # plot regional binary ggplot() +   geom_raster(data = regional_ensemble_2055_370_classified_df, aes(x = x, y = y, fill = as.factor(ensemble_suitability))) +   labs(     title = \"Binarized suitability for 'regional_ensemble' model\",     subtitle = \"projected to 2041-2070 | ssp370 | GFDL\"     ) +   scale_discrete_manual(     name = \"suitability for SLF\",     values = values.obj,     breaks = breaks.obj,     labels = labels.obj,     aesthetics = \"fill\"     ) +   map_style_binarized"},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"ssp-585-1","dir":"Articles","previous_headings":"2. Create binary threshold maps to infer range filling > 2.1 convert output rasters to binary predictors","what":"ssp 585","title":"Map regional ensemble predictions and intercept with global model","text":"","code":"# get the range of the values in the raster terra::minmax(global_2055_585) %>%   format(., scientific = FALSE) # convert scientific notation to decimals   # get the range of the values in the raster terra::minmax(regional_ensemble_2055_585) %>%   format(., scientific = FALSE) # global global_classes <- classify_matrix(   thresh = summary_global[42, 2],   model.scale = \"global\" )  # regional ensemble regional_ensemble_classes <- classify_matrix(   thresh = regional_ensemble_thresholds[9, 4],   model.scale = \"regional\" ) # regional # reclassify and write regional raster regional_ensemble_2055_585_classified <- terra::classify(   x = regional_ensemble_2055_585,    rcl = regional_ensemble_classes,   right = NA, # close both ends of the range of classification values   others = strtoi(00000001, base = 2), # make it the unsuitable value if not in this range   filename = file.path(mypath, \"working_dir\", \"slf_regional_ensemble_v1_binarized_2041-2070_ssp585_GFDL.asc\"), # also write to file   filetype = \"AAIGrid\",   overwrite = FALSE   )   # global # reclassify and write global raster global_2055_585_classified <- terra::classify(   x = global_2055_585,    rcl = global_classes,    right = NA,    others = strtoi(00000100, base = 2),    filename = file.path(mypath, \"working_dir\", \"slf_global_v3_binarized_2041-2070_ssp585_GFDL.asc\"),    filetype = \"AAIGrid\",   overwrite = FALSE   ) # take minmax terra::minmax(global_2055_585_classified) %>%   format(., scientific = FALSE)  terra::minmax(regional_ensemble_2055_585_classified) %>%   format(., scientific = FALSE)  # all good  # check unique values unique(values(global_2055_585_classified)) unique(values(regional_ensemble_2055_585_classified)) # load in binary raster just created and convert to df regional_ensemble_2055_585_classified_df <- terra::rast(   x = file.path(mypath, \"working_dir\", \"slf_regional_ensemble_v1_binarized_2041-2070_ssp585_GFDL.asc\")   ) %>%   terra::as.data.frame(., xy = TRUE)  # now, create vectors of values used to manually edit the scale of the plot # the possible values of the scale and their order breaks.obj <- unique(regional_ensemble_2055_585_classified_df$ensemble_suitability) # labels for the values labels.obj <- c(\"regional unsuitable\", \"regional suitable\") # vector of colors to classify scale values.obj <- c(   \"azure4\",   \"darkblue\" ) # plot regional binary ggplot() +   geom_raster(data = regional_ensemble_2055_585_classified_df, aes(x = x, y = y, fill = as.factor(ensemble_suitability))) +   labs(     title = \"Binarized suitability for 'regional_ensemble' model\",     subtitle = \"projected to 2041-2070 | ssp585 | GFDL\"     ) +   scale_discrete_manual(     name = \"suitability for SLF\",     values = values.obj,     breaks = breaks.obj,     labels = labels.obj,     aesthetics = \"fill\"     ) +   map_style_binarized"},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"ssp-mean-1","dir":"Articles","previous_headings":"2. Create binary threshold maps to infer range filling > 2.1 convert output rasters to binary predictors","what":"ssp mean","title":"Map regional ensemble predictions and intercept with global model","text":"Now lets plot binarized mean ssp scenarios.","code":"# get the range of the values in the raster terra::minmax(global_2055_ssp_mean) %>%   format(., scientific = FALSE) # convert scientific notation to decimals ##     global_suitability    ## min \"0.00000000003642224\" ## max \"1.00000000000000000\" # get the range of the values in the raster terra::minmax(regional_ensemble_2055_ssp_mean) %>%   format(., scientific = FALSE) ##     ensemble_suitability ## min \"0.0000001578022\"    ## max \"0.7055209279060\" # global global_classes <- classify_matrix(   thresh = summary_global[42, 2],   model.scale = \"global\" )  # regional ensemble regional_ensemble_classes <- classify_matrix(   thresh = regional_ensemble_thresholds[10, 4],   model.scale = \"regional\" ) # regional # reclassify and write regional raster regional_ensemble_2055_ssp_mean_classified <- terra::classify(   x = regional_ensemble_2055_ssp_mean,    rcl = regional_ensemble_classes,   right = NA, # close both ends of the range of classification values   others = strtoi(00000001, base = 2), # make it the unsuitable value if not in this range   filename = file.path(mypath, \"working_dir\", \"slf_regional_ensemble_v1_binarized_2041-2070_ssp_mean_GFDL.asc\"), # also write to file   filetype = \"AAIGrid\",   overwrite = FALSE   )   # global # reclassify and write global raster global_2055_ssp_mean_classified <- terra::classify(   x = global_2055_ssp_mean,    rcl = global_classes,    right = NA,    others = strtoi(00000100, base = 2),    filename = file.path(mypath, \"working_dir\", \"slf_global_v3_binarized_2041-2070_ssp_mean_GFDL.asc\"),    filetype = \"AAIGrid\",   overwrite = FALSE   ) # take minmax terra::minmax(global_2055_ssp_mean_classified) %>%   format(., scientific = FALSE)  terra::minmax(regional_ensemble_2055_ssp_mean_classified) %>%   format(., scientific = FALSE)  # all good  # check unique values unique(values(global_2055_ssp_mean_classified)) unique(values(regional_ensemble_2055_ssp_mean_classified)) # load in binary raster just created and convert to df regional_ensemble_2055_ssp_mean_classified_df <- terra::rast(   x = file.path(mypath, \"working_dir\", \"slf_regional_ensemble_v1_binarized_2041-2070_ssp_mean_GFDL.asc\")   ) %>%   terra::as.data.frame(., xy = TRUE)  # now, create vectors of values used to manually edit the scale of the plot # the possible values of the scale and their order breaks.obj <- unique(regional_ensemble_2055_ssp_mean_classified_df$ensemble_suitability) # labels for the values labels.obj <- c(\"regional unsuitable\", \"regional suitable\") # vector of colors to classify scale values.obj <- c(   \"azure4\",   \"darkblue\" ) # plot regional binary ggplot() +   geom_raster(data = regional_ensemble_2055_ssp_mean_classified_df, aes(x = x, y = y, fill = as.factor(ensemble_suitability))) +   labs(     title = \"Binarized suitability for 'regional_ensemble' model\",     subtitle = \"projected to 2041-2070 | mean of ssp126, 370, 585 | GFDL\"     ) +   scale_discrete_manual(     name = \"suitability for SLF\",     values = values.obj,     breaks = breaks.obj,     labels = labels.obj,     aesthetics = \"fill\"     ) +   map_style_binarized ## Warning: Raster pixels are placed at uneven horizontal intervals and will be shifted ## ℹ Consider using `geom_tile()` instead."},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"mosaic-rasters-and-produce-map","dir":"Articles","previous_headings":"2. Create binary threshold maps to infer range filling","what":"2.2 Mosaic rasters and produce map","title":"Map regional ensemble predictions and intercept with global model","text":"plots, see binary conversion worked. Next, need stack reclassified global regional rasters add single raster output. give final raster 4 classes: mosaic function combines spatRasters overlap extent new raster, via function specified (addition, case). run workflow historical rasters, functionalize plotting ssp scenarios.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"historical-1","dir":"Articles","previous_headings":"2. Create binary threshold maps to infer range filling > 2.2 Mosaic rasters and produce map","what":"historical","title":"Map regional ensemble predictions and intercept with global model","text":"prepare plotting objects.","code":"global_1995_classified <- terra::rast(x = file.path(mypath, \"working_dir\", \"slf_global_v3_binarized_1981-2010.asc\"))  regional_ensemble_1995_classified <- terra::rast(x = file.path(mypath, \"working_dir\", \"slf_regional_ensemble_v1_binarized_1981-2010.asc\")) # overlay and combine rasters by summing values slf_binarized_1995 <- terra::mosaic(   global_1995_classified, regional_ensemble_1995_classified, # rasters   fun = \"sum\",    filename = file.path(mypath, \"working_dir\", \"slf_binarized_summed_1981-2010.asc\"),   overwrite = FALSE,   wopt = list(progress = 1)) # progress bar slf_binarized_1995 <- terra::rast(x = file.path(mypath, \"working_dir\", \"slf_binarized_summed_1981-2010.asc\"))  # rename values names(slf_binarized_1995) <- \"global_regional_binarized\" # convert to df slf_binarized_1995_df <- terra::as.data.frame(slf_binarized_1995, xy = TRUE) #%>%  # na.omit()  # check for the number of unique values in the raster values column unique(slf_binarized_1995_df$global_regional_binarized) ## [1]  5  6 10  9 # it seems that the reclassification worked! Lets map it to be sure.  # now, create vectors of values used to manually edit the scale of the plot # the possible values of the scale and their order breaks.obj <- c(5, 9, 6, 10) # i manually ordered these # labels for the values labels.obj <- c(\"low\", \"moderate\", \"high\", \"extreme\") # vector of colors to classify scale values.obj <- c(\"azure4\", \"gold\", \"darkorange\", \"darkred\") slf_binarized_1995_plot <- ggplot() +   geom_raster(data = slf_binarized_1995_df, aes(x = x, y = y, fill = as.factor(global_regional_binarized))) +   labs(     title = \"Projected risk of Lycorma delicatula invasion globally\",     subtitle = \"1981-2010\"     ) +   scale_discrete_manual(     name = \"projected risk\",     values = values.obj,     breaks = breaks.obj,     labels = labels.obj,     aesthetics = \"fill\",     guide = guide_colorsteps(frame.colour = \"black\", ticks.colour = \"black\", barwidth = 20, draw.ulim = TRUE, draw.llim = TRUE)     ) +   map_style_binarized +   guides(fill = guide_legend(nrow = 1, byrow = TRUE)) +   theme(legend.key = element_rect(color = \"black\")) ggsave(   slf_binarized_1995_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_binarized_summed_1981-2010.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"helper-function--binary-raster-plotting","dir":"Articles","previous_headings":"2. Create binary threshold maps to infer range filling > 2.2 Mosaic rasters and produce map","what":"helper function- binary raster plotting","title":"Map regional ensemble predictions and intercept with global model","text":"Now run process , functionalize plotting process ssp scenarios save time lines code.","code":"# first, create vectors of values used to manually edit the scale of the plot # the possible values of the scale and their order breaks.obj <- c(5, 9, 6, 10) # i manually ordered these # labels for the values labels.obj <- c(\"low\", \"moderate\", \"high\", \"extreme\") # vector of colors to classify scale values.obj <- c(\"azure4\", \"gold\", \"darkorange\", \"darkred\")   # function plot_binary <- function(raster.df) {      # raster.df = data frame of the raster to be plotted      ggplot() +     # default map style     map_style_binarized +     # raster layer     geom_raster(data = raster.df, aes(x = x, y = y, fill = as.factor(global_regional_binarized))) +     # custom discrete scale     scale_discrete_manual(       name = \"projected risk\",       # use objects outlined above       values = values.obj,       breaks = breaks.obj,       labels = labels.obj,       aesthetics = \"fill\",       guide = guide_colorsteps(frame.colour = \"black\", ticks.colour = \"black\", barwidth = 20, draw.ulim = TRUE, draw.llim = TRUE)       ) +     # other theme customizations     guides(fill = guide_legend(nrow = 1, byrow = TRUE)) +     theme(legend.key = element_rect(color = \"black\"))     }"},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"ssp126","dir":"Articles","previous_headings":"2. Create binary threshold maps to infer range filling > 2.2 Mosaic rasters and produce map","what":"ssp126","title":"Map regional ensemble predictions and intercept with global model","text":"","code":"global_2055_126_classified <- terra::rast(x = file.path(mypath, \"working_dir\", \"slf_global_v3_binarized_2041-2070_ssp126_GFDL.asc\"))  regional_ensemble_2055_126_classified <- terra::rast(x = file.path(mypath, \"working_dir\", \"slf_regional_ensemble_v1_binarized_2041-2070_ssp126_GFDL.asc\")) # overlay and combine rasters by summing values slf_binarized_2055_126 <- terra::mosaic(   global_2055_126_classified, regional_ensemble_2055_126_classified, # rasters   fun = \"sum\",    filename = file.path(mypath, \"working_dir\", \"slf_binarized_summed_2041-2070_ssp126_GFDL.asc\"),   overwrite = FALSE,   wopt = list(     progress = 1, # progress bar     names = \"global_regional_binarized\" # layer name, change in function if this changes     )     ) slf_binarized_2055_126 <- terra::rast(x = file.path(mypath, \"working_dir\", \"slf_binarized_summed_2041-2070_ssp126_GFDL.asc\"))   # convert to df slf_binarized_2055_126_df <- terra::as.data.frame(slf_binarized_2055_126, xy = TRUE) #%>%  # na.omit()  # check for the number of unique values in the raster values column unique(slf_binarized_2055_126_df$global_regional_binarized) # it seems that the reclassification worked! Lets map it to be sure. slf_binarized_2055_126_plot <- plot_binary(   raster.df = slf_binarized_2055_126_df ) +   # labels   labs(     title = \"Projected risk of Lycorma delicatula invasion globally under climate change\",     subtitle = \"2041-2070 | ssp126 GFDL-ESM4\"     ) ggsave(   slf_binarized_2055_126_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_binarized_summed_2041-2070_ssp126_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"ssp370","dir":"Articles","previous_headings":"2. Create binary threshold maps to infer range filling > 2.2 Mosaic rasters and produce map","what":"ssp370","title":"Map regional ensemble predictions and intercept with global model","text":"","code":"global_2055_370_classified <- terra::rast(x = file.path(mypath, \"working_dir\", \"slf_global_v3_binarized_2041-2070_ssp370_GFDL.asc\"))  regional_ensemble_2055_370_classified <- terra::rast(x = file.path(mypath, \"working_dir\", \"slf_regional_ensemble_v1_binarized_2041-2070_ssp370_GFDL.asc\")) # overlay and combine rasters by summing values slf_binarized_2055_370 <- terra::mosaic(   global_2055_370_classified, regional_ensemble_2055_370_classified, # rasters   fun = \"sum\",    filename = file.path(mypath, \"working_dir\", \"slf_binarized_summed_2041-2070_ssp370_GFDL.asc\"),   overwrite = FALSE,   wopt = list(     progress = 1, # progress bar     names = \"global_regional_binarized\" # layer name, change in function if this changes     )     ) slf_binarized_2055_370 <- terra::rast(x = file.path(mypath, \"working_dir\", \"slf_binarized_summed_2041-2070_ssp370_GFDL.asc\"))   # convert to df slf_binarized_2055_370_df <- terra::as.data.frame(slf_binarized_2055_370, xy = TRUE) #%>%  # na.omit()  # check for the number of unique values in the raster values column unique(slf_binarized_2055_370_df$global_regional_binarized) # it seems that the reclassification worked! Lets map it to be sure. slf_binarized_2055_370_plot <- plot_binary(   raster.df = slf_binarized_2055_370_df ) +   # labels   labs(     title = \"Projected risk of Lycorma delicatula invasion globally under climate change\",     subtitle = \"2041-2070 | ssp370 GFDL-ESM4\"     ) ggsave(   slf_binarized_2055_370_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_binarized_summed_2041-2070_ssp370_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"ssp585","dir":"Articles","previous_headings":"2. Create binary threshold maps to infer range filling > 2.2 Mosaic rasters and produce map","what":"ssp585","title":"Map regional ensemble predictions and intercept with global model","text":"","code":"global_2055_585_classified <- terra::rast(x = file.path(mypath, \"working_dir\", \"slf_global_v3_binarized_2041-2070_ssp585_GFDL.asc\"))  regional_ensemble_2055_585_classified <- terra::rast(x = file.path(mypath, \"working_dir\", \"slf_regional_ensemble_v1_binarized_2041-2070_ssp585_GFDL.asc\")) # overlay and combine rasters by summing values slf_binarized_2055_585 <- terra::mosaic(   global_2055_585_classified, regional_ensemble_2055_585_classified, # rasters   fun = \"sum\",    filename = file.path(mypath, \"working_dir\", \"slf_binarized_summed_2041-2070_ssp585_GFDL.asc\"),   overwrite = FALSE,   wopt = list(     progress = 1, # progress bar     names = \"global_regional_binarized\" # layer name, change in function if this changes     )     ) slf_binarized_2055_585 <- terra::rast(x = file.path(mypath, \"working_dir\", \"slf_binarized_summed_2041-2070_ssp585_GFDL.asc\"))   # convert to df slf_binarized_2055_585_df <- terra::as.data.frame(slf_binarized_2055_585, xy = TRUE) #%>%  # na.omit()  # check for the number of unique values in the raster values column unique(slf_binarized_2055_585_df$global_regional_binarized) # it seems that the reclassification worked! Lets map it to be sure. slf_binarized_2055_585_plot <- plot_binary(   raster.df = slf_binarized_2055_585_df ) +   # labels   labs(     title = \"Projected risk of Lycorma delicatula invasion globally under climate change\",     subtitle = \"2041-2070 | ssp585 GFDL-ESM4\"     ) ggsave(   slf_binarized_2055_585_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_binarized_summed_2041-2070_ssp585_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"ssp-mean-2","dir":"Articles","previous_headings":"2. Create binary threshold maps to infer range filling > 2.2 Mosaic rasters and produce map","what":"ssp mean","title":"Map regional ensemble predictions and intercept with global model","text":"","code":"global_2055_ssp_mean_classified <- terra::rast(x = file.path(mypath, \"working_dir\", \"slf_global_v3_binarized_2041-2070_ssp_mean_GFDL.asc\"))  regional_ensemble_2055_ssp_mean_classified <- terra::rast(x = file.path(mypath, \"working_dir\", \"slf_regional_ensemble_v1_binarized_2041-2070_ssp_mean_GFDL.asc\")) # overlay and combine rasters by summing values slf_binarized_2055_ssp_mean <- terra::mosaic(   global_2055_ssp_mean_classified, regional_ensemble_2055_ssp_mean_classified, # rasters   fun = \"sum\",    filename = file.path(mypath, \"working_dir\", \"slf_binarized_summed_2041-2070_ssp_mean_GFDL.asc\"),   overwrite = FALSE,   wopt = list(     progress = 1, # progress bar     names = \"global_regional_binarized\" # layer name, change in function if this changes     )     ) slf_binarized_2055_ssp_mean <- terra::rast(x = file.path(mypath, \"working_dir\", \"slf_binarized_summed_2041-2070_ssp_mean_GFDL.asc\"))   # convert to df slf_binarized_2055_ssp_mean_df <- terra::as.data.frame(slf_binarized_2055_ssp_mean, xy = TRUE) #%>%  # na.omit()  # check for the number of unique values in the raster values column unique(slf_binarized_2055_ssp_mean_df$global_regional_binarized) ## [1]  5  6 10  9 # it seems that the reclassification worked! Lets map it to be sure. slf_binarized_2055_ssp_mean_plot <- plot_binary(   raster.df = slf_binarized_2055_ssp_mean_df ) +   # labels   labs(     title = \"Projected risk of Lycorma delicatula invasion globally under climate change\",     subtitle = \"2041-2070 | mean of ssp126, ssp370 and ssp585, GFDL-ESM4\"     ) ggsave(   slf_binarized_2055_ssp_mean_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_binarized_summed_2041-2070_ssp_mean_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"calculate-total-area-predicted-by-each-model","dir":"Articles","previous_headings":"","what":"3. Calculate total area predicted by each model","title":"Map regional ensemble predictions and intercept with global model","text":"figures classified categories low, moderate, high extreme risk SLF establishment. addition visualizing , want know total predicted area category. calculate total suitable area predicted category model. reminder, categories rasters :","code":"# load rasters slf_binarized_1995 <- terra::rast(x = file.path(mypath, \"working_dir\", \"slf_binarized_summed_1981-2010.asc\"))  slf_binarized_2055_ssp_mean <- terra::rast(x = file.path(mypath, \"working_dir\", \"slf_binarized_summed_2041-2070_ssp_mean_GFDL.asc\"))   # 1995 slf_model_prop_table_1995 <- terra::expanse(   x = slf_binarized_1995,   unit = \"km\",   byValue = TRUE )   # 2055 slf_model_prop_table_2055_ssp_mean <- terra::expanse(   x = slf_binarized_2055_ssp_mean,   unit = \"km\",   byValue = TRUE ) # create list of range shift values categories.obj <- tibble(   model_suitability = c(\"unsuitable_agreement\", \"regional\", \"global\", \"suitable_agreement\"),   value = c(5, 6, 9, 10) )  # join slf_model_prop_table_joined <- left_join(slf_model_prop_table_1995, slf_model_prop_table_2055_ssp_mean, by = c(\"value\", \"layer\")) %>%   # add labels   left_join(., categories.obj, by = \"value\") # tidy slf_model_prop_table_joined <- slf_model_prop_table_joined %>%   dplyr::select(-c(layer, value)) %>%   dplyr::rename(     \"area_km_1995\" = \"area.x\",     \"area_km_2055\" = \"area.y\"     ) %>%   dplyr::mutate(     # make proportions     prop_total_area_1995 = scales::label_percent()(area_km_1995 / sum(area_km_1995)),     prop_total_area_2055 = scales::label_percent()(area_km_2055 / sum(area_km_2055)),     # change labels     area_km_1995 = scales::label_comma()(area_km_1995),     area_km_2055 = scales::label_comma()(area_km_2055)     ) %>%   dplyr::relocate(model_suitability, area_km_1995, prop_total_area_1995, area_km_2055, prop_total_area_2055) %>%   dplyr::rename(    \"prop_area_present\" = \"prop_total_area_1995\",    \"prop_area_2041-2070\" = \"prop_total_area_2055\"   )  # add superscript colnames(slf_model_prop_table_joined)[2] <- paste0(\"area_km\", common::supsc(\"2\"), \"_present\") colnames(slf_model_prop_table_joined)[4] <- paste0(\"area_km\", common::supsc(\"2\"), \"_2041-2070\")  # .html formatting # format row colors slf_model_prop_table_joined[1, 1] <- kableExtra::cell_spec(slf_model_prop_table_joined[1, 1], format = \"html\", bold = TRUE, color = \"azure4\") slf_model_prop_table_joined[2, 1] <- kableExtra::cell_spec(slf_model_prop_table_joined[2, 1], format = \"html\", bold = TRUE, color = \"darkorange\") slf_model_prop_table_joined[3, 1] <- kableExtra::cell_spec(slf_model_prop_table_joined[3, 1], format = \"html\", bold = TRUE, color = \"gold\") slf_model_prop_table_joined[4, 1] <- kableExtra::cell_spec(slf_model_prop_table_joined[4, 1], format = \"html\", bold = TRUE, color = \"darkred\")  # convert to kable slf_model_prop_kable <- knitr::kable(x = slf_model_prop_table_joined, format = \"html\", escape = FALSE) %>%   kableExtra::kable_styling(bootstrap_options = \"striped\", full_width = TRUE)    print(slf_model_prop_kable) ## <table class=\"table table-striped\" style=\"margin-left: auto; margin-right: auto;\"> ##  <thead> ##   <tr> ##    <th style=\"text-align:left;\"> model_suitability <\/th> ##    <th style=\"text-align:left;\"> area_km²_present <\/th> ##    <th style=\"text-align:left;\"> prop_area_present <\/th> ##    <th style=\"text-align:left;\"> area_km²_2041-2070 <\/th> ##    <th style=\"text-align:left;\"> prop_area_2041-2070 <\/th> ##   <\/tr> ##  <\/thead> ## <tbody> ##   <tr> ##    <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    color: rgba(131, 139, 139, 255) !important;\">unsuitable_agreement<\/span> <\/td> ##    <td style=\"text-align:left;\"> 118,348,996 <\/td> ##    <td style=\"text-align:left;\"> 85.86% <\/td> ##    <td style=\"text-align:left;\"> 117,048,301 <\/td> ##    <td style=\"text-align:left;\"> 84.9% <\/td> ##   <\/tr> ##   <tr> ##    <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    color: darkorange !important;\">regional<\/span> <\/td> ##    <td style=\"text-align:left;\"> 9,364,463 <\/td> ##    <td style=\"text-align:left;\"> 6.79% <\/td> ##    <td style=\"text-align:left;\"> 11,062,245 <\/td> ##    <td style=\"text-align:left;\"> 8.0% <\/td> ##   <\/tr> ##   <tr> ##    <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    color: gold !important;\">global<\/span> <\/td> ##    <td style=\"text-align:left;\"> 1,132,243 <\/td> ##    <td style=\"text-align:left;\"> 0.82% <\/td> ##    <td style=\"text-align:left;\"> 1,244,449 <\/td> ##    <td style=\"text-align:left;\"> 0.9% <\/td> ##   <\/tr> ##   <tr> ##    <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    color: darkred !important;\">suitable_agreement<\/span> <\/td> ##    <td style=\"text-align:left;\"> 9,000,778 <\/td> ##    <td style=\"text-align:left;\"> 6.53% <\/td> ##    <td style=\"text-align:left;\"> 8,491,485 <\/td> ##    <td style=\"text-align:left;\"> 6.2% <\/td> ##   <\/tr> ## <\/tbody> ## <\/table> # model training dataset # save as .csv write_csv(slf_model_prop_table_joined, file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"slf_binarized_summed_areas_table.csv\"))  # save as .html kableExtra::save_kable(   slf_model_prop_kable,    file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_binarized_summed_areas_table.html\"),   self_contained = TRUE,   bs_theme = \"simplex\"   )  # initialize webshot by  # webshot::install_phantomjs() # convert to jpg webshot::webshot(   url = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_binarized_summed_areas_table.html\"),   file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_binarized_summed_areas_table.jpg\"),   zoom = 2 )  # remove html file.remove(file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_binarized_summed_areas_table.html\"))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"map-range-shifting-areas","dir":"Articles","previous_headings":"","what":"4. Map range shifting areas","title":"Map regional ensemble predictions and intercept with global model","text":"Lastly, want create map areas SLF range expanding, contracting remaining time. binarize rasters point MTSS threshold either model becomes one number anything threshold becomes another. follow slightly altered version methodology step 2. classify cells following: encoding rasters base-2, created 4 possible values raster layers, can translated 4 categories. also interpret categories terms risk SLF range expansion:: classify areas unsuitability gray, per usual. Areas SLF remains white, areas SLF expanding green, areas SLF contracting red. First, load historical binarized raster (intersection regional global models) classify preparation analysis. , intersect raster predicted ssp rasters mean scenarios.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"setup-1","dir":"Articles","previous_headings":"4. Map range shifting areas","what":"4.1 Setup","title":"Map regional ensemble predictions and intercept with global model","text":"also load classification matrices terra::classify(). change maps classifying based time period, change. go ahead classify historical binarized raster use next steps quickly ensure binarization process worked creating rough plot. conversion worked, anything colorful binarized map now white. load helper function future plotting, similar one step 2.2. interpret categories terms range shifts, discussed : Unsuitable Agreement = 5 -> area stay unsuitable (range shift) Suitable Agreement = 10 -> area stay suitable (range shift) unsuitable 1995/suitable 2055 = 9 -> area become SUITABLE future (range expansion) Suitable 1995/unsuitable 2055 = 6 -> area become UNSUITABLE future (range contraction) create another helper function format range shift table per ssp scenario, create later.","code":"# 1995 slf_binarized_1995 <- terra::rast(x = file.path(mypath, \"working_dir\", \"slf_binarized_summed_1981-2010.asc\"))  # rename values names(slf_binarized_1995) <- \"global_regional_binarized_1995\"  # convert to df slf_binarized_1995_df <- terra::as.data.frame(slf_binarized_1995, xy = TRUE) # create historical suitability value matrix for terra classes_1995 <- data.frame(   is = c(5, 6, 9, 10),   becomes = c(strtoi(00000001, base = 2), strtoi(00000010, base = 2), strtoi(00000010, base = 2), strtoi(00000010, base = 2))    # the strtoi function converts to base-2, becomes 1 and 2 )  # the class for all CMIP6 scenarios classes_2055 <- data.frame(   is = c(5, 6, 9, 10),   becomes = c(strtoi(00000100, base = 2), strtoi(00001000, base = 2), strtoi(00001000, base = 2), strtoi(00001000, base = 2))    # becomes 4 and 8 ) # reclassify and write the historical binarized raster slf_binarized_1995_classified <- terra::classify(   x = slf_binarized_1995,    rcl = classes_1995,   others = strtoi(00000001, base = 2),   filename = file.path(mypath, \"working_dir\", \"slf_range_shift_1981-2010.asc\"), # also write to file   filetype = \"AAIGrid\",   overwrite = FALSE   ) # load in binary raster just created and convert to df slf_binarized_1995_classified_df <- terra::rast(   x = file.path(mypath, \"working_dir\", \"slf_range_shift_1981-2010.asc\")   ) %>%   terra::as.data.frame(., xy = TRUE) #%>%   #na.omit()  # now, create vectors of values used to manually edit the scale of the plot # the possible values of the scale and their order breaks.obj <- unique(slf_binarized_1995_classified_df$global_regional_binarized_1995) # labels for the values labels.obj <- c(\"present unsuitable\", \"present suitable\") # vector of colors to classify scale values.obj <- c(   \"azure4\",   \"azure\" ) # plot regional binary ggplot() +   geom_raster(data = slf_binarized_1995_classified_df, aes(x = x, y = y, fill = as.factor(global_regional_binarized_1995))) +   labs(title = \"current suitability for SLF\") +   scale_fill_manual(     name = \"suitability for SLF\",     values = values.obj,     breaks = breaks.obj,     labels = labels.obj,     aesthetics = \"fill\",     ) +   map_style_binarized # vectors of values used to manually edit the scale of the plot # the possible values of the scale and their order breaks.obj <- c(5, 10, 6, 9) # i manually ordered these according to the order produced from unique(slf_range_shift_126_df$range_shift_summed) # labels for the values labels.obj <- c(\"unsuitable area\\nretained\", \"suitabile area\\nretained\", \"contraction\\nsuitable area\", \"expansion\\nsuitable area\") # vector of colors to classify scale values.obj <- c(\"azure4\", \"azure\", \"darkred\", \"darkgreen\")   # function plot_range_shift <- function(raster.df) {      # raster.df = the df of the raster to be plotted      ggplot() +     # default style     map_style_binarized +     # plot raster     geom_raster(data = raster.df, aes(x = x, y = y, fill = as.factor(range_shift_summed))) +     # discretized scale      scale_discrete_manual(       name = \"L delicatula\\nsuitability shift\",       values = values.obj, # the colors       breaks = breaks.obj, # the breaks in the colors (4 since this is a discrete scale)       labels = labels.obj, # the labels per color bin       aesthetics = \"fill\",       guide = guide_colorsteps(frame.colour = \"black\", ticks.colour = \"black\", barwidth = 20, draw.ulim = TRUE, draw.llim = TRUE)       ) +     # aesthetics     guides(fill = guide_legend(nrow = 1, byrow = TRUE)) +     theme(legend.key = element_rect(color = \"black\"), legend.title = element_text(hjust = 1))     } # create list of range shift values ranges.obj <- c(\"remains_unsuitable\", \"contraction\", \"expansion\", \"retained_suitability\")  table_range_shift <- function(table.df) {      # table.df = dataframe of areas for raster bins, created by terra::expanse    # tidy   table.df.output <- table.df %>%     dplyr::select(-layer) %>%     dplyr::mutate(       Ld_range_shift_type = ranges.obj,       prop_total_area = scales::label_percent()(area / sum(area)),       area = scales::label_comma()(area)       ) %>%     dplyr::select(-value) %>%     dplyr::relocate(Ld_range_shift_type, area)      colnames(table.df.output)[2] <- paste0(\"area_km\", common::supsc(\"2\"))       # .html formatting # format row colors table.df.output[1, 1] <- kableExtra::cell_spec(table.df.output[1, 1], format = \"html\", background = \"azure4\") table.df.output[2, 1] <- kableExtra::cell_spec(table.df.output[2, 1], format = \"html\", background = \"darkred\") table.df.output[3, 1] <- kableExtra::cell_spec(table.df.output[3, 1], format = \"html\", background = \"darkgreen\") table.df.output[4, 1] <- kableExtra::cell_spec(table.df.output[4, 1], format = \"html\", background = \"azure\")     # return return(table.df.output)  }"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"classify","dir":"Articles","previous_headings":"4. Map range shifting areas > 4.2 ssp 126","what":"classify","title":"Map regional ensemble predictions and intercept with global model","text":"run error checks ensure binarization process worked.","code":"slf_binarized_2055_126 <- terra::rast(x = file.path(mypath, \"working_dir\", \"slf_binarized_summed_2041-2070_ssp126_GFDL.asc\"))  # rename values names(slf_binarized_2055_126) <- \"global_regional_binarized_2055_126\"  # convert to df slf_binarized_2055_126_df <- terra::as.data.frame(slf_binarized_2055_126, xy = TRUE) unique(values(slf_binarized_1995))  unique(values(slf_binarized_2055_126))  # all looks good # global # reclassify and write binarized raster slf_binarized_2055_126_classified <- terra::classify(   x = slf_binarized_2055_126,    rcl = classes_2055,    others = strtoi(00000100, base = 2),   filename = file.path(mypath, \"working_dir\", \"slf_range_shift_2041-2070_ssp126_GFDL.asc\"),    filetype = \"AAIGrid\",   overwrite = FALSE   ) # take minmax terra::minmax(slf_binarized_1995_classified) %>%   format(., scientific = FALSE)  terra::minmax(slf_binarized_2055_126_classified) %>%   format(., scientific = FALSE)  # all good  # check unique values unique(values(slf_binarized_1995_classified)) unique(values(slf_binarized_2055_126_classified))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"mosaic","dir":"Articles","previous_headings":"4. Map range shifting areas > 4.2 ssp 126","what":"Mosaic","title":"Map regional ensemble predictions and intercept with global model","text":"Next, need stack reclassified 1995 2055 rasters add single raster output. give raster 4 classes: Unsuitable Agreement = 5 Suitable Agreement = 10 unsuitable 1995/suitable 2055 = 9 Suitable 1995/unsuitable 2055 = 6 mosaic function combines spatRasters overlap extent new raster, via function specified (addition, case).","code":"slf_binarized_1995_classified <- terra::rast(x = file.path(mypath, \"working_dir\", \"slf_range_shift_1981-2010.asc\"))  slf_binarized_2055_126_classified <- terra::rast(x = file.path(mypath, \"working_dir\", \"slf_range_shift_2041-2070_ssp126_GFDL.asc\")) # overlay and combine rasters by summing values slf_range_shift_126 <- terra::mosaic(   slf_binarized_1995_classified, slf_binarized_2055_126_classified, # rasters   fun = \"sum\",    filename = file.path(mypath, \"working_dir\", \"slf_range_shift_summed_ssp126_GFDL.asc\"),   overwrite = FALSE,   wopt = list(     progress = 1,     names = \"range_shift_summed\"     )   ) # progress bar"},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"plot","dir":"Articles","previous_headings":"4. Map range shifting areas > 4.2 ssp 126","what":"Plot","title":"Map regional ensemble predictions and intercept with global model","text":"","code":"# re-load created raster slf_range_shift_126 <- terra::rast(x = file.path(mypath, \"working_dir\", \"slf_range_shift_summed_ssp126_GFDL.asc\"))  # convert to df slf_range_shift_126_df <- terra::as.data.frame(slf_range_shift_126, xy = TRUE) #%>%  # na.omit()  # check for the number of unique values in the raster values column unique(slf_range_shift_126_df$range_shift_summed) ## [1]  5  9 10  6 # it seems that the reclassification worked! Lets map it to be sure. slf_range_shift_126_plot <- plot_range_shift(   raster.df = slf_range_shift_126_df ) +   # labels   labs(     title = \"Projected areas suitable for Lycorma delicatula range expansion\",     subtitle = \"2041-2070 | ssp126 GFDL-ESM4\"     ) ggsave(   slf_range_shift_126_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_range_shift_summed_ssp126_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"sum-areas-gained-and-lost","dir":"Articles","previous_headings":"4. Map range shifting areas > 4.2 ssp 126","what":"sum areas gained and lost","title":"Map regional ensemble predictions and intercept with global model","text":"Now, repeat process SSP scenarios mean scenarios (code shown).","code":"slf_range_shift_126_table <- terra::expanse(   x = slf_range_shift_126,   unit = \"km\",   byValue = TRUE ) slf_range_shift_126_table <- table_range_shift(table.df = slf_range_shift_126_table)  # save as .csv write_csv(slf_range_shift_126_table, file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"slf_range_shift_summed_area_table_ssp126_GFDL.csv\"))  # convert to kable slf_range_shift_126_kable <- knitr::kable(x = slf_range_shift_126_table, format = \"html\", escape = FALSE) %>%   kableExtra::kable_styling(bootstrap_options = \"striped\", full_width = FALSE) # save as .html kableExtra::save_kable(   slf_range_shift_126_kable,    file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_range_shift_summed_area_table_ssp126_GFDL.html\"),   self_contained = TRUE,   bs_theme = \"simplex\"   )  # initialize webshot by  # webshot::install_phantomjs() # convert to pdf webshot::webshot(   url = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_range_shift_summed_area_table_ssp126_GFDL.html\"),   file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_range_shift_summed_area_table_ssp126_GFDL.jpg\"),   zoom = 2 )  # remove .html file.remove(file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_range_shift_summed_area_table_ssp126_GFDL.html\"))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"ssp-370-2","dir":"Articles","previous_headings":"4. Map range shifting areas","what":"4.3 ssp 370","title":"Map regional ensemble predictions and intercept with global model","text":"classify run error checks ensure binarization process worked. Mosaic Plot sum areas gained lost","code":"slf_binarized_2055_370 <- terra::rast(x = file.path(mypath, \"working_dir\", \"slf_binarized_summed_2041-2070_ssp370_GFDL.asc\"))  # rename values names(slf_binarized_2055_370) <- \"global_regional_binarized_2055_370\"  # convert to df slf_binarized_2055_370_df <- terra::as.data.frame(slf_binarized_2055_370, xy = TRUE) unique(values(slf_binarized_1995))  unique(values(slf_binarized_2055_370))  # all looks good # global # reclassify and write global raster slf_binarized_2055_370_classified <- terra::classify(   x = slf_binarized_2055_370,    rcl = classes_2055,    others = strtoi(00000100, base = 2),   filename = file.path(mypath, \"working_dir\", \"slf_range_shift_2041-2070_ssp370_GFDL.asc\"),    filetype = \"AAIGrid\",   overwrite = FALSE   ) # take minmax terra::minmax(slf_binarized_1995_classified) %>%   format(., scientific = FALSE)  terra::minmax(slf_binarized_2055_370_classified) %>%   format(., scientific = FALSE)  # all good  # check unique values unique(values(slf_binarized_1995_classified)) unique(values(slf_binarized_2055_370_classified)) slf_binarized_1995_classified <- terra::rast(x = file.path(mypath, \"working_dir\", \"slf_range_shift_1981-2010.asc\"))  slf_binarized_2055_370_classified <- terra::rast(x = file.path(mypath, \"working_dir\", \"slf_range_shift_2041-2070_ssp370_GFDL.asc\")) # overlay and combine rasters by summing values slf_range_shift_370 <- terra::mosaic(   slf_binarized_1995_classified, slf_binarized_2055_370_classified, # rasters   fun = \"sum\",    filename = file.path(mypath, \"working_dir\", \"slf_range_shift_summed_ssp370_GFDL.asc\"),   overwrite = FALSE,   wopt = list(     progress = 1,     names = \"range_shift_summed\"     )   ) # progress bar # re-load created raster slf_range_shift_370 <- terra::rast(x = file.path(mypath, \"working_dir\", \"slf_range_shift_summed_ssp370_GFDL.asc\"))  # convert to df slf_range_shift_370_df <- terra::as.data.frame(slf_range_shift_370, xy = TRUE) #%>%  # na.omit()  # check for the number of unique values in the raster values column unique(slf_range_shift_370_df$range_shift_summed) # it seems that the reclassification worked! Lets map it to be sure. slf_range_shift_370_plot <- plot_range_shift(   raster.df = slf_range_shift_370_df ) +   # labels   labs(     title = \"Projected areas suitable for Lycorma delicatula range expansion\",     subtitle = \"2041-2070 | ssp370 GFDL-ESM4\"     ) ggsave(   slf_range_shift_370_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_range_shift_summed_ssp370_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   ) slf_range_shift_370_table <- terra::expanse(   x = slf_range_shift_370,   unit = \"km\",   byValue = TRUE ) slf_range_shift_370_table <- table_range_shift(table.df = slf_range_shift_370_table)  # save as .csv write_csv(slf_range_shift_370_table, file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"slf_range_shift_summed_area_table_ssp370_GFDL.csv\"))  # convert to kable slf_range_shift_370_kable <- knitr::kable(x = slf_range_shift_370_table, format = \"html\", escape = FALSE) %>%   kableExtra::kable_styling(bootstrap_options = \"striped\", full_width = FALSE) # save as .html kableExtra::save_kable(   slf_range_shift_370_kable,    file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_range_shift_summed_area_table_ssp370_GFDL.html\"),   self_contained = TRUE,   bs_theme = \"simplex\"   )  # initialize webshot by  # webshot::install_phantomjs() # convert to pdf webshot::webshot(   url = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_range_shift_summed_area_table_ssp370_GFDL.html\"),   file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_range_shift_summed_area_table_ssp370_GFDL.jpg\"),   zoom = 2 )  # remove .html file.remove(file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_range_shift_summed_area_table_ssp370_GFDL.html\"))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"ssp-585-2","dir":"Articles","previous_headings":"4. Map range shifting areas","what":"4.4 ssp 585","title":"Map regional ensemble predictions and intercept with global model","text":"classify run error checks ensure binarization process worked. Mosaic Plot sum areas gained lost","code":"slf_binarized_2055_585 <- terra::rast(x = file.path(mypath, \"working_dir\", \"slf_binarized_summed_2041-2070_ssp585_GFDL.asc\"))  # rename values names(slf_binarized_2055_585) <- \"global_regional_binarized_2055_585\"  # convert to df slf_binarized_2055_585_df <- terra::as.data.frame(slf_binarized_2055_585, xy = TRUE) unique(values(slf_binarized_1995))  unique(values(slf_binarized_2055_585))  # all looks good # global # reclassify and write global raster slf_binarized_2055_585_classified <- terra::classify(   x = slf_binarized_2055_585,    rcl = classes_2055,    others = strtoi(00000100, base = 2),   filename = file.path(mypath, \"working_dir\", \"slf_range_shift_2041-2070_ssp585_GFDL.asc\"),    filetype = \"AAIGrid\",   overwrite = FALSE   ) # take minmax terra::minmax(slf_binarized_1995_classified) %>%   format(., scientific = FALSE)  terra::minmax(slf_binarized_2055_585_classified) %>%   format(., scientific = FALSE)  # all good  # check unique values unique(values(slf_binarized_1995_classified)) unique(values(slf_binarized_2055_585_classified)) slf_binarized_1995_classified <- terra::rast(x = file.path(mypath, \"working_dir\", \"slf_range_shift_1981-2010.asc\"))  slf_binarized_2055_585_classified <- terra::rast(x = file.path(mypath, \"working_dir\", \"slf_range_shift_2041-2070_ssp585_GFDL.asc\")) # overlay and combine rasters by summing values slf_range_shift_585 <- terra::mosaic(   slf_binarized_1995_classified, slf_binarized_2055_585_classified, # rasters   fun = \"sum\",    filename = file.path(mypath, \"working_dir\", \"slf_range_shift_summed_ssp585_GFDL.asc\"),   overwrite = FALSE,   wopt = list(     progress = 1,     names = \"range_shift_summed\"     )   ) # progress bar # re-load created raster slf_range_shift_585 <- terra::rast(x = file.path(mypath, \"working_dir\", \"slf_range_shift_summed_ssp585_GFDL.asc\"))  # convert to df slf_range_shift_585_df <- terra::as.data.frame(slf_range_shift_585, xy = TRUE) #%>%  # na.omit()  # check for the number of unique values in the raster values column unique(slf_range_shift_585_df$range_shift_summed) # it seems that the reclassification worked! Lets map it to be sure. slf_range_shift_585_plot <- plot_range_shift(   raster.df = slf_range_shift_585_df ) +   # labels   labs(     title = \"Projected areas suitable for Lycorma delicatula range expansion\",     subtitle = \"2041-2070 | ssp585 GFDL-ESM4\"     ) ggsave(   slf_range_shift_585_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_range_shift_summed_ssp585_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   ) slf_range_shift_585_table <- terra::expanse(   x = slf_range_shift_585,   unit = \"km\",   byValue = TRUE ) slf_range_shift_585_table <- table_range_shift(table.df = slf_range_shift_585_table)  # save as .csv write_csv(slf_range_shift_585_table, file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"slf_range_shift_summed_area_table_ssp585_GFDL.csv\"))  # convert to kable slf_range_shift_585_kable <- knitr::kable(x = slf_range_shift_585_table, format = \"html\", escape = FALSE) %>%   kableExtra::kable_styling(bootstrap_options = \"striped\", full_width = FALSE) # save as .html kableExtra::save_kable(   slf_range_shift_585_kable,    file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_range_shift_summed_area_table_ssp585_GFDL.html\"),   self_contained = TRUE,   bs_theme = \"simplex\"   )  # initialize webshot by  # webshot::install_phantomjs() # convert to pdf webshot::webshot(   url = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_range_shift_summed_area_table_ssp585_GFDL.html\"),   file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_range_shift_summed_area_table_ssp585_GFDL.jpg\"),   zoom = 2 )  # remove .html file.remove(file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_range_shift_summed_area_table_ssp585_GFDL.html\"))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"ssp-ssp_mean","dir":"Articles","previous_headings":"4. Map range shifting areas","what":"4.5 ssp ssp_mean","title":"Map regional ensemble predictions and intercept with global model","text":"classify run error checks ensure binarization process worked. Mosaic Plot sum areas gained lost","code":"slf_binarized_2055_ssp_mean <- terra::rast(x = file.path(mypath, \"working_dir\", \"slf_binarized_summed_2041-2070_ssp_mean_GFDL.asc\"))  # rename values names(slf_binarized_2055_ssp_mean) <- \"global_regional_binarized_2055_ssp_mean\"  # convert to df slf_binarized_2055_ssp_mean_df <- terra::as.data.frame(slf_binarized_2055_ssp_mean, xy = TRUE) unique(values(slf_binarized_1995))  unique(values(slf_binarized_2055_ssp_mean))  # all looks good # global # reclassify and write global raster slf_binarized_2055_ssp_mean_classified <- terra::classify(   x = slf_binarized_2055_ssp_mean,    rcl = classes_2055,    others = strtoi(00000100, base = 2),   filename = file.path(mypath, \"working_dir\", \"slf_range_shift_2041-2070_ssp_mean_GFDL.asc\"),    filetype = \"AAIGrid\",   overwrite = FALSE   ) # take minmax terra::minmax(slf_binarized_1995_classified) %>%   format(., scientific = FALSE)  terra::minmax(slf_binarized_2055_ssp_mean_classified) %>%   format(., scientific = FALSE)  # all good  # check unique values unique(values(slf_binarized_1995_classified)) unique(values(slf_binarized_2055_ssp_mean_classified)) slf_binarized_1995_classified <- terra::rast(x = file.path(mypath, \"working_dir\", \"slf_range_shift_1981-2010.asc\"))  slf_binarized_2055_ssp_mean_classified <- terra::rast(x = file.path(mypath, \"working_dir\", \"slf_range_shift_2041-2070_ssp_mean_GFDL.asc\")) # overlay and combine rasters by summing values slf_range_shift_ssp_mean <- terra::mosaic(   slf_binarized_1995_classified, slf_binarized_2055_ssp_mean_classified, # rasters   fun = \"sum\",    filename = file.path(mypath, \"working_dir\", \"slf_range_shift_summed_ssp_mean_GFDL.asc\"),   overwrite = FALSE,   wopt = list(     progress = 1,     names = \"range_shift_summed\"     )   ) # progress bar # re-load created raster slf_range_shift_ssp_mean <- terra::rast(x = file.path(mypath, \"working_dir\", \"slf_range_shift_summed_ssp_mean_GFDL.asc\"))  # convert to df slf_range_shift_ssp_mean_df <- terra::as.data.frame(slf_range_shift_ssp_mean, xy = TRUE) #%>%  # na.omit()  # check for the number of unique values in the raster values column unique(slf_range_shift_ssp_mean_df$range_shift_summed) ## [1]  5  9 10  6 # it seems that the reclassification worked! Lets map it to be sure. slf_range_shift_ssp_mean_plot <- plot_range_shift(   raster.df = slf_range_shift_ssp_mean_df ) +   # labels   labs(     title = \"Projected areas suitable for Lycorma delicatula range expansion\",     subtitle = \"2041-2070 | mean of ssp126, ssp370 and ssp585, GFDL-ESM4\"     ) ggsave(   slf_range_shift_ssp_mean_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_range_shift_summed_ssp_mean_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   ) slf_range_shift_ssp_mean_table <- terra::expanse(   x = slf_range_shift_ssp_mean,   unit = \"km\",   byValue = TRUE ) slf_range_shift_ssp_mean_table <- table_range_shift(table.df = slf_range_shift_ssp_mean_table, eval = TRUE)  # save as .csv write_csv(slf_range_shift_ssp_mean_table, file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"slf_range_shift_summed_area_table_ssp_mean_GFDL.csv\"))  # convert to kable slf_range_shift_ssp_mean_kable <- knitr::kable(x = slf_range_shift_ssp_mean_table, format = \"html\", escape = FALSE) %>%   kableExtra::kable_styling(bootstrap_options = \"striped\", full_width = FALSE) # save as .html kableExtra::save_kable(   slf_range_shift_ssp_mean_kable,    file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_range_shift_summed_area_table_ssp_mean_GFDL.html\"),   self_contained = TRUE,   bs_theme = \"simplex\"   )  # initialize webshot by  # webshot::install_phantomjs() # convert to pdf webshot::webshot(   url = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_range_shift_summed_area_table_ssp_mean_GFDL.html\"),   file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_range_shift_summed_area_table_ssp_mean_GFDL.jpg\"),   zoom = 2 )  # remove .html file.remove(file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_range_shift_summed_area_table_ssp_mean_GFDL.html\"))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Map regional ensemble predictions and intercept with global model","text":"Gallien, L., Douzet, R., Pratte, S., Zimmermann, N. E., & Thuiller, W. (2012). Invasive species distribution models – violating equilibrium assumption can create new insights. Global Ecology Biogeography, 21(11), 1126–1136. https://doi.org/10.1111/j.1466-8238.2012.00768.x Liu, C., White, M., & Newell, G. (2013). Selecting thresholds prediction species occurrence presence-data. Journal Biogeography, 40(4), 778–789. https://doi.org/10.1111/jbi.12058 Liu, C., Newell, G., & White, M. (2016). selection thresholds predicting species occurrence presence-data. Ecology Evolution, 6(1), 337–348. https://doi.org/10.1002/ece3.1878","code":""},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"add-country-admin-boundaries-to-risk-plots","dir":"Articles","previous_headings":"Appendix","what":"Add country admin boundaries to risk plots","title":"Map regional ensemble predictions and intercept with global model","text":"","code":"# load data global_countries <- sf::st_read(dsn = file.path(here::here(), \"data-raw\", \"ne_countries\", \"ne_10m_admin_0_countries.shp\"))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"section","dir":"Articles","previous_headings":"Appendix > Add country admin boundaries to risk plots","what":"1995","title":"Map regional ensemble predictions and intercept with global model","text":"","code":"# plot slf_binarized_1995_plot_withCountries <- slf_binarized_1995_plot +   geom_sf(data = global_countries, aes(geometry = geometry), fill = NA, color = \"black\", linewidth = 0.15) +    # re-crop to usual boundaries   coord_sf(xlim = c(-180.00013888885, 178.999859675084), ylim = c(-58.5001390148238, 82.99986041915))  # save ggsave(   slf_binarized_1995_plot_withCountries,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_binarized_summed_countries_1981-2010.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"section-1","dir":"Articles","previous_headings":"Appendix > Add country admin boundaries to risk plots","what":"2055","title":"Map regional ensemble predictions and intercept with global model","text":"analysis, plot raster mean 3 ssp scenarios.","code":"# plot slf_binarized_2055_plot_withCountries <- slf_binarized_2055_ssp_mean_plot +   geom_sf(data = global_countries, aes(geometry = geometry), fill = NA, color = \"black\", linewidth = 0.15) +    # re-crop to usual boundaries   coord_sf(xlim = c(-180.00013888885, 178.999859675084), ylim = c(-58.5001390148238, 82.99986041915))   # save ggsave(   slf_binarized_2055_plot_withCountries,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_binarized_summed_countries_2041-2070_ssp_mean_GFDL.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/120_create_suitability_maps.html","id":"create-patchwork-of-risk-plots","dir":"Articles","previous_headings":"Appendix","what":"create patchwork of risk plots","title":"Map regional ensemble predictions and intercept with global model","text":"","code":"slf_binarized_1995_plot_withCountries <- slf_binarized_1995_plot_withCountries +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank(),     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.1),     plot.tag = element_text(face = \"bold\", size = 20),     legend.title = element_text(face = \"bold\")     ) +   labs(tag = \"A\") +   scale_x_continuous(expand = c(0, 0)) +   scale_y_continuous(expand = c(0, 0))    slf_binarized_2055_plot_withCountries <- slf_binarized_2055_plot_withCountries +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank(),     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.1),     plot.tag = element_text(face = \"bold\", size = 20),     legend.title = element_text(face = \"bold\")     ) +   labs(tag = \"B\") +   scale_x_continuous(expand = c(0, 0)) +   scale_y_continuous(expand = c(0, 0))      slf_binarized_patchwork <- (slf_binarized_1995_plot_withCountries / slf_binarized_2055_plot_withCountries) +   plot_annotation(     title = \"Projected risk of Lycorma delicatula invasion globally under climate change\",     subtitle = \"(A) 1981-2010 (B) 2041-2070 | mean of ssp126, ssp370 and ssp85, GFDL-ESM4\"     ) +   plot_layout(axes = \"collect\", guides = \"collect\") &    theme(legend.position = \"bottom\")       #plot_layout(widths = unit(20, \"cm\")) ggsave(   slf_binarized_patchwork,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_binarized_risk_patchwork_ssp_mean.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/130_create_suitability_xy_plots_viticultural.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Plot shift in SLF suitability for important viticultural regions under climate change","text":"last vignette, created risk maps range shift maps first step visualizing comparing predictions made global regional ensemble models. apply maps drawing general trends SLF suitable area shift climate change. Downstream, also plan visualize suitability maps across geographical regions finer scale, viticulturally important countries provinces. vignette, focus making specific predictions SLF establishment risk scatter plots suitability values globally important viticultural regions global regional ensemble models. use quadrant scatter plot visualize movement regions across minimum threshold suitability value (MTSS value). plotting one model scale axis, can visualize agreement modeled scales. Gallien et al, 2012 originally defined method discerning “stage invasion” invasive populations according different scales SDM. apply method re-interpret method assessing risk establishment. two models completely agree suitability particular location, agreement modeled scales can give us confidence prediction. modeled scales disagree, might make different interpretations biological mechanism play. Fig. 1 Example quadrant plot assessing SLF risk across two different scales SDM. rate risk low extreme, based agreement modeled scales. rate suitability regional_ensemble (top left, high) higher risk suitability global model (bottom right, moderate) believe unique suitability regional-scale ensemble indicates risk adaptation new climatic niches (Gallien et al, 2012). regional-scale model detects suitability global model , SLF might adapting climatic niche outside global mean niche. MTSS threshold suitability used central crosshairs plot. plot set points presently future climate change scenarios. Movement across MTSS threshold either axis due climate change indicate climate change changing suitability regions SLF establishment. need transform suitability values MTSS threshold falls 0.5. allow visualize movement regions across minimum threshold suitability value. First, plot un-transformed version data transform plot data . use table calculate number regions move across MTSS threshold fall category climate change. Finally, save predicted suitability values wineries dataset downstream analysis. wineries.rda dataset contains locations 1,086 globally important viticultural regions.","code":"## ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── ## ✔ dplyr     1.1.4     ✔ readr     2.1.5 ## ✔ forcats   1.0.0     ✔ stringr   1.5.1 ## ✔ ggplot2   3.5.1     ✔ tibble    3.2.1 ## ✔ lubridate 1.9.3     ✔ tidyr     1.3.1 ## ✔ purrr     1.0.2      ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## ✖ dplyr::filter() masks stats::filter() ## ✖ dplyr::lag()    masks stats::lag() ## ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors"},{"path":"https://ieco-lab.github.io/slfSpread/articles/130_create_suitability_xy_plots_viticultural.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Plot shift in SLF suitability for important viticultural regions under climate change","text":"Note: setting global options document certain code chunks rendered final .html file. set eval = FALSE none code re-run (preventing files overwritten knitting) simply overwrite chunks plots. load aesthetic objects plotting.","code":"# general tools library(tidyverse)  #data manipulation library(here) #making directory pathways easier on different instances here::here() # here() starts at the root folder of this package. ## [1] \"C:/Users/tun83449/Documents/GitHub/slfSpread\" library(devtools)  # spatial data handling library(terra) library(CoordinateCleaner)  # plot aesthetics library(scales) library(patchwork) library(grid) library(kableExtra) library(webshot) library(webshot2) mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/models\") breaks <- c(0.0, 0.2, 0.4, 0.6, 0.8, 1.0)  labels <- c(0, 2, 4, 6, 8, 10)"},{"path":"https://ieco-lab.github.io/slfSpread/articles/130_create_suitability_xy_plots_viticultural.html","id":"load-rasters","dir":"Articles","previous_headings":"Setup","what":"load rasters","title":"Plot shift in SLF suitability for important viticultural regions under climate change","text":"Load summary files global regional ensemble models, contain thresholds. load global regional ensemble suitability maps. used extracting new xy suitability values plotting.","code":"# summary file to extract thresholds from  # global summary_global <- read_csv(file = file.path(mypath, \"slf_global_v3\", \"global_summary_all_iterations.csv\")) ## Rows: 52 Columns: 12 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (1): statistic ## dbl (11): iteration_1_summary, iteration_2_summary, iteration_3_summary, ite... ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. summary_regional_ensemble <- read_csv(file = file.path(mypath, \"slf_regional_ensemble_v1\", \"ensemble_threshold_values.csv\")) ## Rows: 10 Columns: 4 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr (3): thresh, time_period, CMIP6_model ## dbl (1): value ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. # global global_1995 <- terra::rast(x = file.path(mypath, \"slf_global_v3\", \"global_pred_suit_clamped_cloglog_globe_1981-2010_mean.asc\"))  global_2055 <- terra::rast(x = file.path(mypath, \"slf_global_v3\", \"global_pred_suit_clamped_cloglog_globe_2041-2070_GFDL_ssp_averaged.asc\"))   # regional_ensemble # historical regional_ensemble_1995 <- terra::rast(   x = file.path(mypath, \"slf_regional_ensemble_v1\", \"ensemble_regional_weighted_mean_globe_1981-2010.asc\")   ) # CMIP6 ## ssp 126 regional_ensemble_2055_126 <- terra::rast(   x = file.path(mypath, \"slf_regional_ensemble_v1\", \"ensemble_regional_weighted_mean_globe_2041-2070_GFDL_ssp126.asc\")   ) # ssp 370 regional_ensemble_2055_370 <- terra::rast(   x = file.path(mypath, \"slf_regional_ensemble_v1\", \"ensemble_regional_weighted_mean_globe_2041-2070_GFDL_ssp370.asc\")   ) # ssp 585 regional_ensemble_2055_585 <- terra::rast(   x = file.path(mypath, \"slf_regional_ensemble_v1\", \"ensemble_regional_weighted_mean_globe_2041-2070_GFDL_ssp585.asc\")   ) # ssp mean regional_ensemble_2055_ssp_mean <- terra::rast(   x = file.path(mypath, \"slf_regional_ensemble_v1\", \"ensemble_regional_weighted_mean_globe_2041-2070_GFDL_ssp_averaged.asc\")   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/130_create_suitability_xy_plots_viticultural.html","id":"tidy-wineries-dataset","dir":"Articles","previous_headings":"Setup","what":"tidy wineries dataset","title":"Plot shift in SLF suitability for important viticultural regions under climate change","text":"load dataset containing locations globally important viticultural regions. also de-duplicate records “many--many” joining matches downstream. De-duplicating removed 17 records. also remove species column, automatically created SDMtune::predict() upstream.","code":"load(file.path(here::here(), \"data\", \"wineries.rda\"))  IVR_locations <- wineries %>%   # tidy   dplyr::select(-c(Latitude, Longitude)) %>%   dplyr::filter(     !is.na(x),     !is.na(y)     ) %>%   dplyr::mutate(record_type = \"IVR_location\")  # remove duplicate coordinates IVR_locations <- CoordinateCleaner::clean_coordinates(   x = IVR_locations,   lon = \"x\",   lat = \"y\",   species = \"record_type\",   tests = \"duplicates\",   value = \"clean\" # just return same df without duplicates ) %>%   dplyr::select(-record_type)  # remove unnecessary obj rm(wineries)"},{"path":"https://ieco-lab.github.io/slfSpread/articles/130_create_suitability_xy_plots_viticultural.html","id":"import-and-tidy-xy-suitability","dir":"Articles","previous_headings":"Setup","what":"import and tidy xy suitability","title":"Plot shift in SLF suitability for important viticultural regions under climate change","text":"scatter plots based suitability IVR points global regional_ensemble models. already calculated xy suitability global model based points, using function slfSpread::predict_xy_suitability(). function work regional_ensemble calls model object, use predict ensemble suitability. , use terra::extract() perform action. load global model datasets create regional_ensemble datasets. also tidying datasets plots create. xy_suitabilities global models also contain less records IVR regions. ensure retrieving suitability values exact vineyards regional_ensemble, perform filtering join. IVR dataset now contain records global suitability values . Now clean remainder coordinates","code":"# historical xy_global_1995 <- read_csv(   file = file.path(mypath, \"slf_global_v3\", \"global_wineries_1981-2010_xy_pred_suit_clamped_cloglog_mean_20000m_buffer.csv\")   )   # CMIP6 ## ssp 126 xy_global_2055_126 <- read_csv(   file = file.path(mypath, \"slf_global_v3\", \"global_wineries_2041-2070_GFDL_ssp126_xy_pred_suit_clamped_cloglog_mean_20000m_buffer.csv\")   )  ## ssp 370 xy_global_2055_370 <- read_csv(   file = file.path(mypath, \"slf_global_v3\", \"global_wineries_2041-2070_GFDL_ssp370_xy_pred_suit_clamped_cloglog_mean_20000m_buffer.csv\")   )  ## ssp 585 xy_global_2055_585 <- read_csv(   file = file.path(mypath, \"slf_global_v3\", \"global_wineries_2041-2070_GFDL_ssp585_xy_pred_suit_clamped_cloglog_mean_20000m_buffer.csv\")   ) # de-duplicate just to make sure xy_global_1995 <- xy_global_1995 %>%   dplyr::mutate(species = \"Lycorma delicatula\") %>%   CoordinateCleaner::clean_coordinates(     x = .,     lon = \"x\",     lat = \"y\",     species = \"species\",     tests = \"duplicates\",     value = \"clean\"   ) %>%   dplyr::select(x, y, max_cloglog_suitability) %>%   # rename   dplyr::rename(\"max_cloglog_suit_hist\" = \"max_cloglog_suitability\")    # edits to IVR dataset # filter join of IVRs IVR_locations <- semi_join(IVR_locations, xy_global_1995, by = c(\"x\", \"y\"))  # add ID column IVR_locations <- IVR_locations %>%   dplyr::mutate(ID = row_number()) %>%   relocate(ID, x, y) if (FALSE) {    readr::write_rds(IVR_locations, file.path(here::here(), \"data\", \"wineries_tidied.rds\"))    }    #read it back in IVR_locations <- read_rds(file.path(here::here(), \"data\", \"wineries_tidied.rds\")) # ssp 126 xy_global_2055_126 <- xy_global_2055_126 %>%   CoordinateCleaner::clean_coordinates(     x = .,     lon = \"x\",     lat = \"y\",     species = \"Species\",     tests = \"duplicates\",     value = \"clean\"   ) %>%   dplyr::select(-Species)  # ssp 370 xy_global_2055_370 <- xy_global_2055_370 %>%   CoordinateCleaner::clean_coordinates(     x = .,     lon = \"x\",     lat = \"y\",     species = \"Species\",     tests = \"duplicates\",     value = \"clean\"   ) %>%   dplyr::select(-Species)  # ssp 585 xy_global_2055_585 <- xy_global_2055_585 %>%   CoordinateCleaner::clean_coordinates(     x = .,     lon = \"x\",     lat = \"y\",     species = \"Species\",     tests = \"duplicates\",     value = \"clean\"   ) %>%   dplyr::select(-Species)   # also rename columns xy_global_2055_126 <- xy_global_2055_126 %>%   dplyr::rename(\"max_cloglog_suit_ssp126\" = \"max_cloglog_suitability_20000m_buffer\")   xy_global_2055_370 <- xy_global_2055_370 %>%   dplyr::rename(\"max_cloglog_suit_ssp370\" = \"max_cloglog_suitability_20000m_buffer\")   xy_global_2055_585 <- xy_global_2055_585 %>%   dplyr::rename(\"max_cloglog_suit_ssp585\" = \"max_cloglog_suitability_20000m_buffer\")"},{"path":"https://ieco-lab.github.io/slfSpread/articles/130_create_suitability_xy_plots_viticultural.html","id":"take-mean-of-global-model-ssp-scenarios","dir":"Articles","previous_headings":"Setup","what":"take mean of global model ssp scenarios","title":"Plot shift in SLF suitability for important viticultural regions under climate change","text":"take mean suitability value within predicted suitability datasets. suitability values taken 20km buffer around viticultural area point account potentially large size viticultural areas. keep max values buffers. mean values across ssp scenarios.","code":"# first join datasets xy_global_2055_ssp_mean <- xy_global_2055_126 %>%   left_join(., xy_global_2055_370, join_by(x, y)) %>%   left_join(., xy_global_2055_585, join_by(x, y)) %>%   # take mean of columns   dplyr::mutate(max_suit_ssp_averaged = rowMeans(.[, 3:5])) %>%   dplyr::select(x, y, max_suit_ssp_averaged) write_csv(   x = xy_global_2055_ssp_mean,   file = file.path(mypath, \"slf_global_v3\", \"global_wineries_2041-2070_GFDL_ssp_mean_xy_pred_suit_clamped_cloglog_mean_20000m_buffer.csv\")     )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/130_create_suitability_xy_plots_viticultural.html","id":"retrieve-suitability-values-for-regional_ensemble","dir":"Articles","previous_headings":"Setup","what":"retrieve suitability values for regional_ensemble","title":"Plot shift in SLF suitability for important viticultural regions under climate change","text":"Now, retrieve suitability values regional_ensemble using 20km buffer method described . use buffer() zonal() terra package first create 20km buffers around point, take zonal statistics (max value) buffer zone. Instead returning coordinates map, join coordinates original IVR_locations dataset coordinates exact joining datasets. first convert dataset sv object create buffer region around point extraction raster Now, retrieve max suitability value within buffer IVRs predicted rasters.","code":"# first, convert to a vector sv in terra IVR_locations_sv <- terra::vect(     x = IVR_locations[, 1:3],     crs = \"EPSG:4326\",     geom = c(\"x\", \"y\")   )  # take a buffer region around each IVR location IVR_locations_buffer <- terra::buffer(   x = IVR_locations_sv,   width = 20000 # 20km ) # rasters to retrieve suitability from rasters <- list(regional_ensemble_1995, regional_ensemble_2055_126, regional_ensemble_2055_370, regional_ensemble_2055_585)  # column identifiers col_names <- c(\"hist\", \"ssp126\", \"ssp370\", \"ssp585\") # output file names output_names <- c(   \"regional_ensemble_v1_wineries_1981-2010\",   \"regional_ensemble_v1_wineries_2041-2070_GFDL_ssp126\",   \"regional_ensemble_v1_wineries_2041-2070_GFDL_ssp370\",   \"regional_ensemble_v1_wineries_2041-2070_GFDL_ssp585\"   )   # for loop to retrieve xy suitability for (a in seq_along(rasters)) {      # import   column_name <- paste0(\"max_cloglog_suit_\", col_names[a], \"_20000m\")   rast_hold <- rasters[[a]]      # function   xy_hold <- terra::zonal(     x = rast_hold, # raster of predictions we created     z = IVR_locations_buffer, # buffer zones     fun = \"max\",     na.rm = TRUE # remove NAs from buffer stats     # ID column     ) %>%     # re-join ID and xy coords     cbind(IVR_locations[, 1:3]) %>%     dplyr::relocate(ID, x, y)      # rename suit column   colnames(xy_hold[, 4]) <- column_name      # write to csv   write_csv(     x = xy_hold,     file = file.path(mypath, \"slf_regional_ensemble_v1\", paste0(output_names[a], \"_xy_pred_suit.csv\"))   )         # success message   cli::cli_alert_success(paste(\"xy suit for\", col_names[a], \"written to file\"))   # remove temp objects   rm(xy_hold)   rm(rast_hold)   rm(column_name)    }"},{"path":"https://ieco-lab.github.io/slfSpread/articles/130_create_suitability_xy_plots_viticultural.html","id":"take-mean-of-ssps","dir":"Articles","previous_headings":"Setup > retrieve suitability values for regional_ensemble","what":"take mean of ssps","title":"Plot shift in SLF suitability for important viticultural regions under climate change","text":"Now re-load data files just created","code":"# historical xy_regional_ensemble_1995 <- read_csv(file = file.path(mypath, \"slf_regional_ensemble_v1\", \"regional_ensemble_v1_wineries_1981-2010_xy_pred_suit.csv\")) # CMIP6 ## ssp 126 xy_regional_ensemble_2055_126 <- read_csv(file = file.path(mypath, \"slf_regional_ensemble_v1\", \"regional_ensemble_v1_wineries_2041-2070_GFDL_ssp126_xy_pred_suit.csv\")) ## ssp 370 xy_regional_ensemble_2055_370 <- read_csv(file = file.path(mypath, \"slf_regional_ensemble_v1\", \"regional_ensemble_v1_wineries_2041-2070_GFDL_ssp370_xy_pred_suit.csv\")) ## ssp 585 xy_regional_ensemble_2055_585 <- read_csv(file = file.path(mypath, \"slf_regional_ensemble_v1\", \"regional_ensemble_v1_wineries_2041-2070_GFDL_ssp585_xy_pred_suit.csv\")) # first join datasets xy_regional_ensemble_2055_ssp_mean <- xy_regional_ensemble_2055_126 %>%   left_join(., xy_regional_ensemble_2055_370, join_by(ID, x, y)) %>%   left_join(., xy_regional_ensemble_2055_370, join_by(ID, x, y)) %>%   # take mean of columns   dplyr::mutate(max_suit_ssp_averaged = rowMeans(.[, 4:6])) %>%   dplyr::select(ID, x, y, max_suit_ssp_averaged) write_csv(   x = xy_regional_ensemble_2055_ssp_mean,   file = file.path(mypath, \"slf_global_v3\", \"regional_ensemble_wineries_2041-2070_GFDL_ssp_mean_xy_pred_suit.csv\")   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/130_create_suitability_xy_plots_viticultural.html","id":"write-to-file","dir":"Articles","previous_headings":"Setup","what":"write to file","title":"Plot shift in SLF suitability for important viticultural regions under climate change","text":"Now, tidy save datasets .rds analysis.","code":"# global model datasets xy_global_1995 <- xy_global_1995 %>%   # add ID column   cbind(., IVR_locations[, 1]) %>%   dplyr::relocate(ID) %>%   # rename   dplyr::rename(\"xy_global_1995\" = \"max_cloglog_suit_hist\")    #  xy_global_2055_ssp_mean <- xy_global_2055_ssp_mean %>%   # add ID column   cbind(., IVR_locations[, 1]) %>%   dplyr::relocate(ID) %>%   dplyr::rename(\"xy_global_2055\" = \"max_suit_ssp_averaged\")     # regional_ensemble datasets xy_regional_ensemble_1995 <- xy_regional_ensemble_1995 %>%   # rename the column for future joining   dplyr::rename(\"xy_regional_ensemble_1995\" = \"max_suit_hist_20000m\")   xy_regional_ensemble_2055_ssp_mean <- xy_regional_ensemble_2055_ssp_mean %>%   # rename the column for future joining   dplyr::rename(\"xy_regional_ensemble_2055\" = \"max_suit_ssp_averaged\") # regional_ensemble readr::write_rds(   xy_regional_ensemble_1995,     file = file.path(here::here(), \"data\", \"regional_ensemble_wineries_1981-2010_xy_pred_suit.rds\")   )  readr::write_rds(   xy_regional_ensemble_2055_ssp_mean,     file = file.path(here::here(), \"data\", \"regional_ensemble_wineries_2041-2070_GFDL_ssp_mean_xy_pred_suit.rds\")   )   # save global datasets readr::write_rds(   xy_global_1995,     file = file.path(here::here(), \"data\", \"global_wineries_1981-2010_xy_pred_suit.rds\")   )  readr::write_rds(   xy_global_2055_ssp_mean,     file = file.path(here::here(), \"data\", \"global_wineries_2041-2070_GFDL_ssp_mean_xy_pred_suit.rds\")   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/130_create_suitability_xy_plots_viticultural.html","id":"transform-xy-suitability","dir":"Articles","previous_headings":"","what":"1. Transform xy suitability","title":"Plot shift in SLF suitability for important viticultural regions under climate change","text":"plot suitability values two different ways- plot raw xy suitability transform data MTSS threshold center scatter plot. way, movement across minimum suitability threshold easily visualized. transform 4 vectors suitability values, 2 per model, preparation plotting. created function slfSpread::rescale_cloglog_suitability() accomplish task. function uses vector exponential transformations specified value thresh apply exponential equation vector suitability values. applies equation y = c1 * c2^x + c3 vector, x input suitability values, y transformed version values, c1 c3 maximum inverse, c2 interpolated value input thresh. transformed suitability vector re-scaled thresh median (0.5) 0-1 scale values transformed fit scale. use internal function slfSpread::rescale_cloglog_suitability() re-scale suitability values.","code":"IVR_locations <- read_rds(file.path(here::here(), \"data\", \"wineries_tidied.rds\")) # global xy_global_1995 <- read_rds(file = file.path(here::here(), \"data\", \"global_wineries_1981-2010_xy_pred_suit.rds\")) xy_global_2055 <- read_rds(file = file.path(here::here(), \"data\", \"global_wineries_2041-2070_GFDL_ssp_mean_xy_pred_suit.rds\"))  # regional xy_regional_ensemble_1995 <- read_rds(file = file.path(here::here(), \"data\", \"regional_ensemble_wineries_1981-2010_xy_pred_suit.rds\")) xy_regional_ensemble_2055 <- read_rds(file = file.path(here::here(), \"data\", \"regional_ensemble_wineries_2041-2070_GFDL_ssp_mean_xy_pred_suit.rds\")) xy_global_1995_rescaled <- slfSpread::rescale_cloglog_suitability(   xy.predicted = xy_global_1995,   thresh = \"MTSS\",   exponential.file = file.path(here::here(), \"data-raw\", \"threshold_exponential_values.csv\"),   summary.file = summary_global,   rescale.name = \"xy_global_1995\",   rescale.thresholds = TRUE ) # separate data from thresholds xy_global_1995_rescaled_thresholds <- xy_global_1995_rescaled[[2]] xy_global_1995_rescaled <- xy_global_1995_rescaled[[1]]    xy_global_2055_rescaled <- slfSpread::rescale_cloglog_suitability(   xy.predicted = xy_global_2055,   thresh = \"MTSS\",  # the global model only has 1 MTSS thresh   exponential.file = file.path(here::here(), \"data-raw\", \"threshold_exponential_values.csv\"),   summary.file = summary_global,   rescale.name = \"xy_global_2055\",   rescale.thresholds = TRUE )  xy_global_2055_rescaled_thresholds <- xy_global_2055_rescaled[[2]] xy_global_2055_rescaled <- xy_global_2055_rescaled[[1]] xy_regional_ensemble_1995_rescaled <- slfSpread::rescale_cloglog_suitability(   xy.predicted = xy_regional_ensemble_1995,   thresh = \"MTSS\",   exponential.file = file.path(here::here(), \"data-raw\", \"threshold_exponential_values.csv\"),   summary.file = summary_regional_ensemble,   rescale.name = \"xy_regional_ensemble_1995\",   rescale.thresholds = TRUE )  xy_regional_ensemble_1995_rescaled_thresholds <- xy_regional_ensemble_1995_rescaled[[2]] xy_regional_ensemble_1995_rescaled <- xy_regional_ensemble_1995_rescaled[[1]]    xy_regional_ensemble_2055_rescaled <- slfSpread::rescale_cloglog_suitability(   xy.predicted = xy_regional_ensemble_2055,   thresh = \"MTSS.CC\", # the way the thresholds are calculated for the regional_ensemble model means that the threshold will be slightly different for climate change   exponential.file = file.path(here::here(), \"data-raw\", \"threshold_exponential_values.csv\"),   summary.file = summary_regional_ensemble,   rescale.name = \"xy_regional_ensemble_2055\",   rescale.thresholds = TRUE ) ## Warning in stri_detect_regex(string, pattern, negate = negate, opts_regex = ## opts(pattern)): argument is not an atomic vector; coercing xy_regional_ensemble_2055_rescaled_thresholds <- xy_regional_ensemble_2055_rescaled[[2]] xy_regional_ensemble_2055_rescaled <- xy_regional_ensemble_2055_rescaled[[1]] # global write_rds(   xy_global_1995_rescaled,    file = file.path(here::here(), \"data\", \"global_wineries_1981-2010_xy_pred_suit_rescaled.rds\")   ) write_rds(   xy_global_2055_rescaled,    file = file.path(here::here(), \"data\", \"global_wineries_2041-2070_GFDL_ssp_mean_xy_pred_suit_rescaled.rds\")   )  # regional write_rds(   xy_regional_ensemble_1995_rescaled,    file = file.path(here::here(), \"data\", \"regional_ensemble_wineries_1981-2010_xy_pred_suit_rescaled.rds\")   ) write_rds(   xy_regional_ensemble_2055_rescaled,    file = file.path(here::here(), \"data\", \"regional_ensemble_wineries_2041-2070_GFDL_ssp_mean_xy_pred_suit_rescaled.rds\")   ) # global write_rds(   xy_global_1995_rescaled_thresholds,    file = file.path(here::here(), \"data\", \"global_wineries_1981-2010_xy_pred_suit_rescaled_thresholds.rds\")   ) write_rds(   xy_global_2055_rescaled_thresholds,    file = file.path(here::here(), \"data\", \"global_wineries_2041-2070_GFDL_ssp_mean_xy_pred_suit_rescaled_thresholds.rds\")   )  # regional write_rds(   xy_regional_ensemble_1995_rescaled_thresholds,    file = file.path(here::here(), \"data\", \"regional_ensemble_wineries_1981-2010_xy_pred_suit_rescaled_thresholds.rds\")   ) write_rds(   xy_regional_ensemble_2055_rescaled_thresholds,    file = file.path(here::here(), \"data\", \"regional_ensemble_wineries_2041-2070_GFDL_ssp_mean_xy_pred_suit_rescaled_thresholds.rds\")   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/130_create_suitability_xy_plots_viticultural.html","id":"plot-untransformed-suitability-values","dir":"Articles","previous_headings":"","what":"2. Plot untransformed suitability values","title":"Plot shift in SLF suitability for important viticultural regions under climate change","text":"need baseline visualizing trends scatter plots, first plot un-transformed datasets.","code":"# join datasets for plotting xy_joined <- full_join(xy_global_1995, xy_regional_ensemble_1995, join_by(ID, x, y)) %>%   # join CC datasets   full_join(., xy_global_2055, join_by(ID, x, y)) %>%   full_join(., xy_regional_ensemble_2055, join_by(ID, x, y)) %>%   # order   dplyr::relocate(ID, x, y, xy_global_1995, xy_global_2055) # figure annotation title # \"suitability for Lycorma delicatula establishment in globally important viticultural areas, projected for climate change\"  # plot (xy_joined_plot <- ggplot(data = xy_joined) +    # threshold lines    # MTSS thresholds    geom_vline(xintercept = as.numeric(summary_global[42, ncol(summary_global)]), linetype = \"dashed\", linewidth = 0.7) + # global    geom_hline(yintercept = as.numeric(summary_regional_ensemble[3, 4]), linetype = \"dashed\", linewidth = 0.7) + # regional_ensemble- there are two MTSS thresholds for this model, but the difference is so small that you will never see it on the plot    # historical data    geom_point(      aes(x = xy_global_1995, y = xy_regional_ensemble_1995, shape = \"Present\"),       size = 2, stroke = 0.7, color = \"black\", fill = \"orchid1\"      ) +    # GFDL ssp370 data    geom_point(      aes(x = xy_global_2055, y = xy_regional_ensemble_2055, shape = \"2041-2070\\nGFDL-ESM4\\nmean ssp126/370/585\"),       size = 2, stroke = 0.7, color = \"black\", fill = \"purple3\"      ) +    # axes scaling    scale_x_continuous(name =  \"'global' model cloglog suitability\", limits = c(0, 1), breaks = breaks) +     scale_y_continuous(name =  \"'regional_ensemble' model cloglog suitability\", limits = c(0, 1), breaks = breaks) +    # aesthetics    scale_shape_manual(name = \"Time period\", values = c(21, 21)) +    guides(shape = guide_legend(nrow = 1, override.aes = list(size = 2.5), reverse = TRUE)) +    theme_bw() +    theme(legend.position = \"bottom\", panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +    coord_fixed(ratio = 1) ) ggsave(   xy_joined_plot,    filename = file.path(     here::here(), \"vignette-outputs\", \"figures\", \"IVR_xy_suitability_IVR_regions_global_regional_ensemble.jpg\"     ),   height = 8,    width = 8,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/130_create_suitability_xy_plots_viticultural.html","id":"plot-transformed-suitability-values","dir":"Articles","previous_headings":"","what":"3. plot transformed suitability values","title":"Plot shift in SLF suitability for important viticultural regions under climate change","text":"manually change scale values 1-10 scale plot risk confused measure suitability model. need create second dataset arrow segments indicating change. filter segments cross either threshold plot arrows. First, need isolate MTSS threshold values. Next, use case_when() (vectorized ifelse) calculate point shifts across suitability threshold due climate change. Now lets plot data.  plot shows projected change suitability viticultural regions climate change. arrows indicate region crossing suitability value, suitable SLF establishment unsuitable.","code":"# global xy_global_1995_rescaled <- read_rds(file = file.path(here::here(), \"data\", \"global_wineries_1981-2010_xy_pred_suit_rescaled.rds\"))  xy_global_2055_rescaled <- read_rds(file = file.path(here::here(), \"data\", \"global_wineries_2041-2070_GFDL_ssp_mean_xy_pred_suit_rescaled.rds\"))  # regional xy_regional_ensemble_1995_rescaled <- read_rds(file = file.path(here::here(), \"data\", \"regional_ensemble_wineries_1981-2010_xy_pred_suit_rescaled.rds\"))  xy_regional_ensemble_2055_rescaled <- read_rds(file = file.path(here::here(), \"data\", \"regional_ensemble_wineries_2041-2070_GFDL_ssp_mean_xy_pred_suit_rescaled.rds\")) # global xy_global_1995_rescaled_thresholds <- read_rds(file = file.path(here::here(), \"data\", \"global_wineries_1981-2010_xy_pred_suit_rescaled_thresholds.rds\"))  xy_global_2055_rescaled_thresholds <- read_rds(file = file.path(here::here(), \"data\", \"global_wineries_2041-2070_GFDL_ssp_mean_xy_pred_suit_rescaled_thresholds.rds\"))  # regional xy_regional_ensemble_1995_rescaled_thresholds <- read_rds(file = file.path(here::here(), \"data\", \"regional_ensemble_wineries_1981-2010_xy_pred_suit_rescaled_thresholds.rds\"))  xy_regional_ensemble_2055_rescaled_thresholds <- read_rds(file = file.path(here::here(), \"data\", \"regional_ensemble_wineries_2041-2070_GFDL_ssp_mean_xy_pred_suit_rescaled_thresholds.rds\")) # join datasets for plotting xy_joined_rescaled <- full_join(xy_global_1995_rescaled, xy_regional_ensemble_1995_rescaled, join_by(ID, x, y)) %>%   # join CC datasets   full_join(., xy_global_2055_rescaled, join_by(ID, x, y)) %>%   full_join(., xy_regional_ensemble_2055_rescaled, join_by(ID, x, y)) %>%   # order   dplyr::relocate(ID, x, y, xy_global_1995_rescaled, xy_global_2055_rescaled) %>%   dplyr::select(-c(xy_global_1995, xy_global_2055, xy_regional_ensemble_1995, xy_regional_ensemble_2055)) # global global_MTSS <- as.numeric(xy_global_1995_rescaled_thresholds[2, 2]) # regional ensemble regional_ensemble_MTSS_1995 <- as.numeric(xy_regional_ensemble_1995_rescaled_thresholds[2, 2]) regional_ensemble_MTSS_2055 <- as.numeric(xy_regional_ensemble_1995_rescaled_thresholds[4, 2]) xy_joined_rescaled_intersects <- xy_joined_rescaled %>%   dplyr::mutate(     crosses_threshold = dplyr::case_when(       # conditional for starting and ending points that overlap a the threshold       # x-axis       xy_global_1995_rescaled > global_MTSS & xy_global_2055_rescaled < global_MTSS ~ \"crosses\",       xy_global_1995_rescaled < global_MTSS & xy_global_2055_rescaled > global_MTSS ~ \"crosses\",       # y-axis       xy_regional_ensemble_1995_rescaled > regional_ensemble_MTSS_2055 & xy_regional_ensemble_2055_rescaled < regional_ensemble_MTSS_2055 ~ \"crosses\",        xy_regional_ensemble_1995_rescaled < regional_ensemble_MTSS_2055 & xy_regional_ensemble_2055_rescaled > regional_ensemble_MTSS_2055 ~ \"crosses\",       # else       .default = \"does not cross\"     )   )  # filter out the crosses xy_joined_rescaled_intersects <- dplyr::filter(   xy_joined_rescaled_intersects,   crosses_threshold == \"crosses\" ) # figure annotation title # \"Risk of Lycorma delicatula establishment in globally important viticultural areas, projected for climate change\"  # plot (xy_joined_rescaled_plot <- ggplot(data = xy_joined_rescaled) +    # threshold lines    # MTSS thresholds    geom_vline(xintercept = global_MTSS, linetype = \"dashed\", linewidth = 0.7) + # global    geom_hline(yintercept = regional_ensemble_MTSS_1995, linetype = \"dashed\", linewidth = 0.7) + # regional_ensemble- there are two MTSS thresholds for this model, but the difference is so small that you will never see it on the plot    # arrows indicating change    geom_segment(      data = xy_joined_rescaled_intersects,      aes(        x = xy_global_1995_rescaled,        xend = xy_global_2055_rescaled,        y = xy_regional_ensemble_1995_rescaled,        yend = xy_regional_ensemble_2055_rescaled      ),       arrow = grid::arrow(angle = 5.5, type = \"closed\"), alpha = 0.3, linewidth = 0.25, color = \"black\"    ) +    # historical data    geom_point(      aes(x = xy_global_1995_rescaled, y = xy_regional_ensemble_1995_rescaled, shape = \"Present\"),       size = 2, stroke = 0.7, color = \"black\", fill = \"orchid1\"      ) +    # GFDL ssp370 data    geom_point(      aes(x = xy_global_2055_rescaled, y = xy_regional_ensemble_2055_rescaled, shape = \"2041-2070\\nGFDL-ESM4\\nmean ssp126/370/585\"),       size = 2, stroke = 0.7, color = \"black\", fill = \"purple3\"      ) +    # axes scaling    scale_x_continuous(name = \"'global' model risk projection\", limits = c(0, 1), breaks = breaks, labels = labels) +     scale_y_continuous(name = \"'regional_ensemble' model risk projection\", limits = c(0, 1), breaks = breaks, labels = labels) +    # quadrant labels    # extreme risk, top right, quad4    geom_label(aes(x = 0.75, y = 0.9, label = \"extreme risk\"), fill = \"darkred\", color = \"azure\", size = 5) +    # high risk, top left, quad3    geom_label(aes(x = 0.25, y = 0.9, label = \"high risk\"), fill = \"darkorange\", color = \"azure\", size = 5) +    # moderate risk, bottom right, quad2    geom_label(aes(x = 0.75, y = 0.1, label = \"moderate risk\"), fill = \"gold\", color = \"azure\", size = 5) +    # low risk, bottom left, quad1    geom_label(aes(x = 0.25, y = 0.1, label = \"low risk\"), fill = \"azure4\", color = \"azure\", size = 5) +    # aesthetics    scale_shape_manual(name = \"Time period\", values = c(21, 21)) +    guides(shape = guide_legend(nrow = 1, override.aes = list(size = 2.5), reverse = TRUE)) +    theme_bw() +    theme(legend.position = \"bottom\", panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +    coord_fixed(ratio = 1) ) ## Warning in geom_label(aes(x = 0.75, y = 0.9, label = \"extreme risk\"), fill = \"darkred\", : All aesthetics have length 1, but the data has 1074 rows. ## ℹ Please consider using `annotate()` or provide this layer with data containing ##   a single row. ## Warning in geom_label(aes(x = 0.25, y = 0.9, label = \"high risk\"), fill = \"darkorange\", : All aesthetics have length 1, but the data has 1074 rows. ## ℹ Please consider using `annotate()` or provide this layer with data containing ##   a single row. ## Warning in geom_label(aes(x = 0.75, y = 0.1, label = \"moderate risk\"), fill = \"gold\", : All aesthetics have length 1, but the data has 1074 rows. ## ℹ Please consider using `annotate()` or provide this layer with data containing ##   a single row. ## Warning in geom_label(aes(x = 0.25, y = 0.1, label = \"low risk\"), fill = \"azure4\", : All aesthetics have length 1, but the data has 1074 rows. ## ℹ Please consider using `annotate()` or provide this layer with data containing ##   a single row. ggsave(   xy_joined_rescaled_plot,    filename = file.path(     here::here(), \"vignette-outputs\", \"figures\", \"IVR_risk_plot.jpg\"     ),   height = 8,    width = 8,   device = \"jpeg\",   dpi = \"retina\"   )  # I will also save the ggplot object as an rds because I need to facet it later write_rds(   xy_joined_rescaled_plot,   file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"figures-rds\", \"IVR_risk_plot.rds\")   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/130_create_suitability_xy_plots_viticultural.html","id":"create-summary-table-of-transformed-plot","dir":"Articles","previous_headings":"","what":"4. Create summary table of transformed plot","title":"Plot shift in SLF suitability for important viticultural regions under climate change","text":"now create summary table explain rescaled plots step 4. table depict quadrant placement point quadrant plot, climate change. , calculate total number movements quadrant. apply internal function slfSpread::calculate_risk_quadrant(). create summary table quadrant placement (thus level risk) point IVR_locations dataset. use calculate_risk_quadrant() accomplish . now table calculating number regions per quadrant, climate change!","code":"# create dataset and tidy IVR_locations_joined <- left_join(IVR_locations, xy_joined_rescaled, join_by(ID, x, y)) %>%   dplyr::relocate(ID, x, y)     # calculate risk quadrants IVR_locations_risk <- IVR_locations_joined %>%   dplyr::mutate(     risk_1995 = slfSpread::calculate_risk_quadrant(       suit.x = IVR_locations_joined$xy_global_1995_rescaled,       suit.y = IVR_locations_joined$xy_regional_ensemble_1995_rescaled,       thresh.x = global_MTSS, # this threshold remains the same       thresh.y = regional_ensemble_MTSS_1995     ),     risk_2055 = slfSpread::calculate_risk_quadrant(       suit.x = IVR_locations_joined$xy_global_2055_rescaled,       suit.y = IVR_locations_joined$xy_regional_ensemble_2055_rescaled,       thresh.x = global_MTSS,       thresh.y = regional_ensemble_MTSS_2055     ),     risk_shift = str_c(risk_1995, risk_2055, sep = \"-\")   ) risk_levels <- c(\"extreme\", \"high\", \"moderate\", \"low\") IVR_risk_table <- IVR_locations_risk %>%   # create counts and make into acrostic table   dplyr::group_by(risk_1995, risk_2055) %>%   dplyr::summarize(count = n()) %>%   pivot_wider(names_from = risk_2055, values_from = count) %>%   # tidy   dplyr::rename(\"rows_1995_cols_2055\" = \"risk_1995\") %>%   relocate(\"rows_1995_cols_2055\", \"extreme\", \"high\", \"moderate\") %>%   arrange(factor(.$rows_1995_cols_2055, levels = risk_levels)) %>%   # replace missing categories with 0   replace(is.na(.), 0) %>%   ungroup() ## `summarise()` has grouped output by 'risk_1995'. You can override using the ## `.groups` argument. # tidy IVR_risk_table <- IVR_risk_table %>%   # add totals column   tibble::add_column(\"total_present\" = rowSums(.[, 2:5])) %>%   # add row totals   tibble::add_row(rows_1995_cols_2055 = \"total_2055\", extreme = colSums(dplyr::select(., 2)), high = colSums(dplyr::select(., 3)), moderate = colSums(dplyr::select(., 4)), low = colSums(dplyr::select(., 5)), total_present = 1074) %>%   # convert to df   as.data.frame() write_csv(IVR_risk_table, file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"IVR_risk_table.csv\"))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/130_create_suitability_xy_plots_viticultural.html","id":"global-risk-shift-vs-regional-risk-shift","dir":"Articles","previous_headings":"","what":"5. global risk shift vs regional risk shift","title":"Plot shift in SLF suitability for important viticultural regions under climate change","text":"create table sum number points three different groups. goal understand regional model adds resolution calculation risk. sum number points suitable global model , unsuitable global model , unsuitable global model / suitable regional model. repeat operation time periods. analysis, found currently, 65.2% global IVRs low risk according global model. However, 26% total IVRs specifically quadrant 3 (high risk). means global model alone label 693 1074 IVRs low risk, actuality 287 41.4% high risk SLF establishment (MTSS threshold) spatially segment presence data ensemble regional-scale models. climate change, 893 1063 IVRs (82%) unsuitable global model alone used describe risk SLF. However, 341 39.1% unsuitable IVRs still suitable regional_scale models thus missed analysis risk using global-scale model. means regional-scale ensemble adding resolution nuance estimation risk SLF establishment.","code":"global_regional_risk_shift <- tibble(   time_period = c(1995, 1995, 1995, 2055, 2055, 2055),   quadrants = c(\"quad4_quad2\", \"quad3_quad1\", \"quad3\", \"quad4_quad2\", \"quad3_quad1\", \"quad3\"),   risk = c(\"extreme_moderate\", \"high_low\", \"high\", \"extreme_moderate\", \"high_low\", \"high\"),   model_suit = c(\"global_suit\", \"global_unsuit\", \"global_unsuit_regional_suit\", \"global_suit\", \"global_unsuit\", \"global_unsuit_regional_suit\"),   IVR_region_count = c(     # global suitable 1995     sum(IVR_locations_joined$xy_global_1995_rescaled >= global_MTSS),     # global unsuitable 1995     sum(IVR_locations_joined$xy_global_1995_rescaled < global_MTSS),     # global unsuitable and regional suitable 1995     sum(IVR_locations_joined$xy_global_1995_rescaled < global_MTSS & IVR_locations_joined$xy_regional_ensemble_1995_rescaled >= regional_ensemble_MTSS_1995),     # global suitable 2055     sum(IVR_locations_joined$xy_global_2055_rescaled >= global_MTSS),     # global unsuitable 2055     sum(IVR_locations_joined$xy_global_2055_rescaled < global_MTSS),     # global unsuitable and regional suitable 2055     sum(IVR_locations_joined$xy_global_2055_rescaled < global_MTSS & IVR_locations_joined$xy_regional_ensemble_2055_rescaled >= regional_ensemble_MTSS_2055)   ) ) # total # IVRs total_IVR <- sum(global_regional_risk_shift[1:2, 5])  global_regional_risk_shift <- mutate(   global_regional_risk_shift,    IVR_region_prop = IVR_region_count / total_IVR   )   # calculate % of unsuit (quad3 and quad 1) that are are in quad3 quad3_risk_prop <- tibble(   time_period = c(\"quad3_1995\", \"quad3_2055\"),   prop_total_unsuit_in_quad3 = c(     scales::label_percent(accuracy = 0.01) (abs(as.numeric((global_regional_risk_shift[3, 5]) / global_regional_risk_shift[2, 5]))),     scales::label_percent(accuracy = 0.01) (abs(as.numeric((global_regional_risk_shift[6, 5]) / global_regional_risk_shift[5, 5])))   ) )    # number and proportion of IVRs shifting with CC #global_regional_risk_shift_summary <- tibble( ##  \"risk_shift\" = c(\"global_unsuit_shift_1995_2055\", \"quad3_high_shift_diff_1995_2055\"), #  \"IVR_region_change_count\" = c( #    as.numeric(global_regional_risk_shift[2, 5]) - as.numeric(global_regional_risk_shift[5, 5]), #    as.numeric(global_regional_risk_shift[3, 5]) - as.numeric(global_regional_risk_shift[6, 5]) #  ), #  \"IVR_region_change_prop\" = c( #    as.numeric(global_regional_risk_shift[2, 6]) - as.numeric(global_regional_risk_shift[5, 6]), #    as.numeric(global_regional_risk_shift[3, 6]) - as.numeric(global_regional_risk_shift[6, 6]) #  ) #) %>%   # make percentages and change signs #  mutate( #    IVR_region_change_count = abs(IVR_region_change_count),  #   IVR_region_change_prop = scales::label_percent(accuracy = 0.01) (abs(IVR_region_change_prop)) #    ) # add % global_regional_risk_shift <- mutate(global_regional_risk_shift, IVR_region_prop = scales::label_percent(accuracy = 0.01) (IVR_region_prop))  # make kable global_regional_risk_shift <- kable(global_regional_risk_shift, \"html\", escape = FALSE) %>%    kable_styling(bootstrap_options = \"striped\", full_width = FALSE) %>%   # standardize col width   kableExtra::column_spec(1:2, width_min = '4cm') %>%   kableExtra::add_header_above(., header = c(\"IVR risk plot quadrant proportions\" = 6), bold = TRUE)   # save as .html kableExtra::save_kable(   global_regional_risk_shift,    file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"IVR_risk_plot_quadrant_props.html\"),   self_contained = TRUE   )  # initialize webshot by  # webshot::install_phantomjs() # convert to pdf webshot::webshot(   url = file.path(here::here(), \"vignette-outputs\", \"figures\", \"IVR_risk_plot_quadrant_props.html\"),   file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"IVR_risk_plot_quadrant_props.jpg\"),   zoom = 2 )    file.remove(file.path(here::here(), \"vignette-outputs\", \"figures\", \"IVR_risk_plot_quadrant_props.html\"))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/130_create_suitability_xy_plots_viticultural.html","id":"save-wineries-with-pred-suitability","dir":"Articles","previous_headings":"","what":"6. Save wineries with pred suitability","title":"Plot shift in SLF suitability for important viticultural regions under climate change","text":"now join risk levels dataset created original wineries_tidied dataset save . also add count risk levels can compared quantitatively. code extreme risk = 4, high = 3, moderate = 2, low = 1. , subtract risk level 1995 risk level 2055 quantify change risk level time calculate summary stats. now risk quadrant plots tables can use assess level SLF establishment risk viticulture.","code":"# add risk level counts wineries_tidied_suit <- IVR_locations_risk %>%   dplyr::mutate(     risk_1995_count = dplyr::case_when(       risk_1995 == \"extreme\" ~ 4,       risk_1995 == \"high\" ~ 3,       risk_1995 == \"moderate\" ~ 2,       risk_1995 == \"low\" ~ 1     ),     risk_2055_count = dplyr::case_when(       risk_2055 == \"extreme\" ~ 4,       risk_2055 == \"high\" ~ 3,       risk_2055 == \"moderate\" ~ 2,       risk_2055 == \"low\" ~ 1     ),     risk_shift_count = risk_2055_count - risk_1995_count   )  # rename columns wineries_tidied_suit <- wineries_tidied_suit %>%   dplyr::rename(     \"global_model_suit_hist\" = \"xy_global_1995_rescaled\",     \"regional_ensemble_model_suit_hist\" = \"xy_regional_ensemble_1995_rescaled\",     \"global_model_suit_2041-2070\" = \"xy_global_2055_rescaled\",     \"regional_ensemble_model_suit_2041-2070\" = \"xy_regional_ensemble_2055_rescaled\",     \"risk_level_hist\" = \"risk_1995\",     \"risk_level_2041-2070\" = \"risk_2055\",     \"risk_count_hist\" = \"risk_1995_count\",     \"risk_count_2041-2070\" = \"risk_2055_count\"   )  # rearrange columns wineries_tidied_suit <- wineries_tidied_suit %>%   dplyr::relocate(risk_count_hist, .after = risk_level_hist) %>%   dplyr::relocate(`risk_count_2041-2070`, .after = `risk_level_2041-2070`) %>%   dplyr::relocate(risk_shift_count, .after = risk_shift) # save  readr::write_csv(   x = wineries_tidied_suit,   file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"wineries_tidied_with_suit_risk.csv\")   )  readr::write_rds(   x = wineries_tidied_suit,   file = file.path(here::here(), \"data\", \"wineries_tidied_with_suit_risk.rds\")   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/130_create_suitability_xy_plots_viticultural.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Plot shift in SLF suitability for important viticultural regions under climate change","text":"Gallien, L., Douzet, R., Pratte, S., Zimmermann, N. E., & Thuiller, W. (2012). Invasive species distribution models – violating equilibrium assumption can create new insights. Global Ecology Biogeography, 21(11), 1126–1136. https://doi.org/10.1111/j.1466-8238.2012.00768.x Smith, T. 2021, August 11. Evaluating Invasion Stage SDMs - plantarum.ca. https://plantarum.ca/2021/08/11/invasion-stage/.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/131_create_suitability_xy_plots_SLF.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Plot stability of known SLF populations due climate change effects","text":"last vignette, created figures analyze suitability SLF establishment key viticultural regions globally. now apply framework analyze risk establishment currently known SLF populations. use infer stability populations climate change. use quadrant plot framework last vignette. Fig. 1 Example quadrant plot assessing SLF risk across two different scales SDM.","code":"## ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── ## ✔ dplyr     1.1.4     ✔ readr     2.1.5 ## ✔ forcats   1.0.0     ✔ stringr   1.5.1 ## ✔ ggplot2   3.5.1     ✔ tibble    3.2.1 ## ✔ lubridate 1.9.3     ✔ tidyr     1.3.1 ## ✔ purrr     1.0.2      ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## ✖ dplyr::filter() masks stats::filter() ## ✖ dplyr::lag()    masks stats::lag() ## ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors"},{"path":"https://ieco-lab.github.io/slfSpread/articles/131_create_suitability_xy_plots_SLF.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Plot stability of known SLF populations due climate change effects","text":"Note: setting global options document certain code chunks rendered final .html file. set eval = FALSE none code re-run (preventing files overwritten knitting) simply overwrite chunks plots. load aesthetic objects, including breaks. Load summary files global regional ensemble models, contain thresholds.","code":"# general tools library(tidyverse)  #data manipulation library(here) #making directory pathways easier on different instances here::here() # here() starts at the root folder of this package. ## [1] \"C:/Users/tun83449/Documents/GitHub/slfSpread\" library(devtools)  # spatial data handling library(terra) library(CoordinateCleaner)  # plot aesthetics library(scales) library(patchwork) library(grid) library(kableExtra) library(webshot) library(webshot2) mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/models\") breaks <- c(0.0, 0.2, 0.4, 0.6, 0.8, 1.0)  labels <- c(0, 2, 4, 6, 8, 10) # summary file to extract thresholds from  # global summary_global <- read_csv(file = file.path(mypath, \"slf_global_v3\", \"global_summary_all_iterations.csv\")) ## Rows: 52 Columns: 12 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (1): statistic ## dbl (11): iteration_1_summary, iteration_2_summary, iteration_3_summary, ite... ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. summary_regional_ensemble <- read_csv(file = file.path(mypath, \"slf_regional_ensemble_v1\", \"ensemble_threshold_values.csv\")) ## Rows: 10 Columns: 4 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr (3): thresh, time_period, CMIP6_model ## dbl (1): value ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."},{"path":"https://ieco-lab.github.io/slfSpread/articles/131_create_suitability_xy_plots_SLF.html","id":"load-rasters","dir":"Articles","previous_headings":"Setup","what":"load rasters","title":"Plot stability of known SLF populations due climate change effects","text":"Finally, load global regional ensemble suitability maps. used extracting new xy suitability values plotting.","code":"# global global_1995 <- terra::rast(x = file.path(mypath, \"slf_global_v3\", \"global_pred_suit_clamped_cloglog_globe_1981-2010_mean.asc\"))  global_2055 <- terra::rast(x = file.path(mypath, \"slf_global_v3\", \"global_pred_suit_clamped_cloglog_globe_2041-2070_GFDL_ssp_averaged.asc\"))   # regional_ensemble # historical regional_ensemble_1995 <- terra::rast(   x = file.path(mypath, \"slf_regional_ensemble_v1\", \"ensemble_regional_weighted_mean_globe_1981-2010.asc\")   ) # CMIP6 ## ssp 126 regional_ensemble_2055_126 <- terra::rast(   x = file.path(mypath, \"slf_regional_ensemble_v1\", \"ensemble_regional_weighted_mean_globe_2041-2070_GFDL_ssp126.asc\")   ) # ssp 370 regional_ensemble_2055_370 <- terra::rast(   x = file.path(mypath, \"slf_regional_ensemble_v1\", \"ensemble_regional_weighted_mean_globe_2041-2070_GFDL_ssp370.asc\")   ) # ssp 585 regional_ensemble_2055_585 <- terra::rast(   x = file.path(mypath, \"slf_regional_ensemble_v1\", \"ensemble_regional_weighted_mean_globe_2041-2070_GFDL_ssp585.asc\")   ) # ssp mean regional_ensemble_2055_ssp_mean <- terra::rast(   x = file.path(mypath, \"slf_regional_ensemble_v1\", \"ensemble_regional_weighted_mean_globe_2041-2070_GFDL_ssp_averaged.asc\")   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/131_create_suitability_xy_plots_SLF.html","id":"tidy-slf-populations-dataset","dir":"Articles","previous_headings":"Setup","what":"tidy slf populations dataset","title":"Plot stability of known SLF populations due climate change effects","text":"load dataset containing SLF populations. take steps de-duplicate slf populations dataset retrieving suitability values . load one xy_suitability files compare slf populations dataset points lost predict step, now slf populations dataset data points xy_suitability versions. Now records harmonized datasets, save file use downstream. main file predicting slf population suitability.","code":"slf_populations <- read_rds(file = file.path(here::here(), \"data\", \"slf_all_coords_final_2024-08-05.rds\")) slf_populations <- slf_populations %>%   # filter out NAs   dplyr::filter(     !is.na(x),     !is.na(y)     ) %>%    # remove duplicate coordinates   CoordinateCleaner::clean_coordinates(     x = .,     lon = \"x\",     lat = \"y\",     species = \"species\",     tests = \"duplicates\",     value = \"clean\" # just return same df without duplicates   ) # historical xy_global_1995 <- read_csv(   file = file.path(mypath, \"slf_global_v3\", \"global_slf_all_coords_1981-2010_xy_pred_suit_clamped_cloglog_mean.csv\")   ) # de-duplicate just to make sure xy_global_1995 <- xy_global_1995 %>%   CoordinateCleaner::clean_coordinates(     x = .,     lon = \"x\",     lat = \"y\",     species = \"Species\",     tests = \"duplicates\",     value = \"clean\"   ) %>%   dplyr::select(x, y, cloglog_suitability) %>%   # rename   dplyr::rename(\"cloglog_suit_hist\" = \"cloglog_suitability\")   # filter join of populations dataset slf_populations <- semi_join(slf_populations, xy_global_1995, by = c(\"x\", \"y\"))  # add ID column slf_populations <- slf_populations %>%   dplyr::mutate(ID = row_number()) %>%   relocate(ID) if (FALSE) {    readr::write_rds(slf_populations, file.path(here::here(), \"data\", \"slf_all_coords_final_2024-08-05_tidied.rds\"))    }  #read it back in slf_populations <- read_rds(file.path(here::here(), \"data\", \"slf_all_coords_final_2024-08-05_tidied.rds\"))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/131_create_suitability_xy_plots_SLF.html","id":"import-and-tidy-xy-suitability","dir":"Articles","previous_headings":"Setup","what":"import and tidy xy suitability","title":"Plot stability of known SLF populations due climate change effects","text":"scatter plots based suitability IVR points global regional_ensemble models. already calculated xy suitability global model based points, using function slfSpread::predict_xy_suitability(). function work regional_ensemble calls model object, use predict ensemble suitability. , use terra::extract() perform action. load global model datasets create regional_ensemble datasets. also tidying datasets plots create.","code":"# CMIP6 ## ssp 126 xy_global_2055_126 <- read_csv(   file = file.path(mypath, \"slf_global_v3\", \"global_slf_all_coords_2041-2070_GFDL_ssp126_xy_pred_suit_clamped_cloglog_mean.csv\")   )  ## ssp 370 xy_global_2055_370 <- read_csv(   file = file.path(mypath, \"slf_global_v3\", \"global_slf_all_coords_2041-2070_GFDL_ssp370_xy_pred_suit_clamped_cloglog_mean.csv\")   )  ## ssp 585 xy_global_2055_585 <- read_csv(   file = file.path(mypath, \"slf_global_v3\", \"global_slf_all_coords_2041-2070_GFDL_ssp585_xy_pred_suit_clamped_cloglog_mean.csv\")   ) # ssp 126 xy_global_2055_126 <- xy_global_2055_126 %>%   CoordinateCleaner::clean_coordinates(     x = .,     lon = \"x\",     lat = \"y\",     species = \"Species\",     tests = \"duplicates\",     value = \"clean\"   ) %>%   # tidy   dplyr::select(-Species) %>%   dplyr::rename(\"cloglog_suit_ssp126\" = \"cloglog_suitability\")   # ssp 370 xy_global_2055_370 <- xy_global_2055_370 %>%   CoordinateCleaner::clean_coordinates(     x = .,     lon = \"x\",     lat = \"y\",     species = \"Species\",     tests = \"duplicates\",     value = \"clean\"   ) %>%   # tidy   dplyr::select(-Species) %>%   dplyr::rename(\"cloglog_suit_ssp370\" = \"cloglog_suitability\")   # ssp 585 xy_global_2055_585 <- xy_global_2055_585 %>%   CoordinateCleaner::clean_coordinates(     x = .,     lon = \"x\",     lat = \"y\",     species = \"Species\",     tests = \"duplicates\",     value = \"clean\"   ) %>%   # tidy   dplyr::select(-Species) %>%   dplyr::rename(\"cloglog_suit_ssp585\" = \"cloglog_suitability\")"},{"path":"https://ieco-lab.github.io/slfSpread/articles/131_create_suitability_xy_plots_SLF.html","id":"take-mean-of-global-model-ssp-scenarios","dir":"Articles","previous_headings":"Setup","what":"take mean of global model ssp scenarios","title":"Plot stability of known SLF populations due climate change effects","text":"take mean suitability value within predicted suitability datasets create single prediction three ssp scenarios.","code":"# first join datasets xy_global_2055_ssp_mean <- xy_global_2055_126 %>%   left_join(., xy_global_2055_370, join_by(x, y)) %>%   left_join(., xy_global_2055_585, join_by(x, y)) %>%   # take mean of columns   dplyr::mutate(suit_ssp_averaged = rowMeans(.[, 3:5])) %>%   dplyr::select(x, y, suit_ssp_averaged) write_csv(   x = xy_global_2055_ssp_mean,   file = file.path(mypath, \"slf_global_v3\", \"global_slf_all_coords_2041-2070_GFDL_ssp_mean_xy_pred_suit_clamped_cloglog_mean.csv\")     )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/131_create_suitability_xy_plots_SLF.html","id":"retrieve-suitability-values-for-regional_ensemble","dir":"Articles","previous_headings":"Setup","what":"retrieve suitability values for regional_ensemble","title":"Plot stability of known SLF populations due climate change effects","text":"Now, retrieve suitability values regional_ensemble. Instead returning coordinates map, join coordinates original slf_populations dataset coordinates exact joining datasets. step much simpler last vignette using simple point-wise prediction method, instead buffer method used wineries datasets, coordinates represent exact population locations, rather centroid region.","code":"# 1995 xy_regional_ensemble_1995 <- terra::extract(   x = regional_ensemble_1995,   y = dplyr::select(slf_populations, x, y), # points   method = \"simple\",   xy = FALSE, # dont return coordinates   ID = TRUE )  # CMIP6 # ssp126 xy_regional_ensemble_2055_126 <- terra::extract(   x = regional_ensemble_2055_126,   y = dplyr::select(slf_populations, x, y), # points   method = \"simple\",   xy = FALSE, # dont return coordinates    ID = TRUE )  # ssp370 xy_regional_ensemble_2055_370 <- terra::extract(   x = regional_ensemble_2055_370,   y = dplyr::select(slf_populations, x, y), # points   method = \"simple\",   xy = FALSE, # dont return coordinates    ID = TRUE )  # ssp126 xy_regional_ensemble_2055_585 <- terra::extract(   x = regional_ensemble_2055_585,   y = dplyr::select(slf_populations, x, y), # points   method = \"simple\",   xy = FALSE, # dont return coordinates    ID = TRUE ) # joining object slf_coordinates <- dplyr::select(slf_populations, ID, x, y)  # perform join xy_regional_ensemble_1995 <- left_join(xy_regional_ensemble_1995, slf_coordinates, by = \"ID\") %>%    # tidy   dplyr::relocate(ID, x, y) %>%   dplyr::rename(\"cloglog_suit_hist\" = \"sum\") # CMIP6 ## ssp 126 xy_regional_ensemble_2055_126 <- left_join(xy_regional_ensemble_2055_126, slf_coordinates, by = \"ID\") %>%   dplyr::relocate(ID, x, y) %>%   dplyr::rename(\"cloglog_suit_ssp126\" = \"sum\") ## ssp370 xy_regional_ensemble_2055_370 <- left_join(xy_regional_ensemble_2055_370, slf_coordinates, by = \"ID\") %>%   dplyr::relocate(ID, x, y) %>%   dplyr::rename(\"cloglog_suit_ssp370\" = \"sum\") ## ssp 585 xy_regional_ensemble_2055_585 <- left_join(xy_regional_ensemble_2055_585, slf_coordinates, by = \"ID\") %>%   dplyr::relocate(ID, x, y) %>%   dplyr::rename(\"cloglog_suit_ssp585\" = \"sum\")"},{"path":"https://ieco-lab.github.io/slfSpread/articles/131_create_suitability_xy_plots_SLF.html","id":"take-mean-of-ssps","dir":"Articles","previous_headings":"Setup > retrieve suitability values for regional_ensemble","what":"take mean of ssps","title":"Plot stability of known SLF populations due climate change effects","text":"","code":"# first join datasets xy_regional_ensemble_2055_ssp_mean <- xy_regional_ensemble_2055_126 %>%   left_join(., xy_regional_ensemble_2055_370, join_by(ID, x, y)) %>%   left_join(., xy_regional_ensemble_2055_585, join_by(ID, x, y)) %>%   # take mean of columns   dplyr::mutate(suit_ssp_averaged = rowMeans(.[, 4:6])) %>%   dplyr::select(ID, x, y, suit_ssp_averaged) write_csv(   x = xy_regional_ensemble_2055_ssp_mean,   file = file.path(mypath, \"slf_regional_ensemble_v1\", \"regional_ensemble_wineries_2041-2070_GFDL_ssp_mean_xy_pred_suit.csv\")   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/131_create_suitability_xy_plots_SLF.html","id":"write-to-file","dir":"Articles","previous_headings":"Setup","what":"write to file","title":"Plot stability of known SLF populations due climate change effects","text":"Now, tidy save datasets .rds analysis.","code":"# global model datasets xy_global_1995 <- xy_global_1995 %>%   # add ID column   cbind(., slf_populations[, 1]) %>%   # rename the column for future joining   dplyr::rename(     \"ID\" = \"slf_populations[, 1]\",     \"xy_global_1995\" = \"cloglog_suit_hist\"     ) %>%   dplyr::relocate(ID)      xy_global_2055_ssp_mean <- xy_global_2055_ssp_mean %>%   # add ID column   cbind(., slf_populations[, 1]) %>%   dplyr::rename(     \"ID\" = \"slf_populations[, 1]\",     \"xy_global_2055\" = \"suit_ssp_averaged\"     ) %>%   dplyr::relocate(ID)    # regional_ensemble datasets xy_regional_ensemble_1995 <- xy_regional_ensemble_1995 %>%   # rename the column for future joining   dplyr::rename(\"xy_regional_ensemble_1995\" = \"cloglog_suit_hist\")   xy_regional_ensemble_2055_ssp_mean <- xy_regional_ensemble_2055_ssp_mean %>%   # rename the column for future joining   dplyr::rename(\"xy_regional_ensemble_2055\" = \"suit_ssp_averaged\") # save global datasets readr::write_rds(   xy_global_1995,     file = file.path(here::here(), \"data\", \"global_slf_all_coords_1981-2010_xy_pred_suit.rds\")   )  readr::write_rds(   xy_global_2055_ssp_mean,     file = file.path(here::here(), \"data\", \"global_slf_all_coords_2041-2070_GFDL_ssp_mean_xy_pred_suit.rds\")   )   # regional_ensemble readr::write_rds(   xy_regional_ensemble_1995,     file = file.path(here::here(), \"data\", \"regional_ensemble_slf_all_coords_1981-2010_xy_pred_suit.rds\")   )  readr::write_rds(   xy_regional_ensemble_2055_ssp_mean,     file = file.path(here::here(), \"data\", \"regional_ensemble_slf_all_coords_2041-2070_GFDL_ssp_mean_xy_pred_suit.rds\")   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/131_create_suitability_xy_plots_SLF.html","id":"transform-xy-suitability","dir":"Articles","previous_headings":"","what":"1. Transform xy suitability","title":"Plot stability of known SLF populations due climate change effects","text":"plot suitability values two different ways- plot raw xy suitability transform data MTSS threshold center scatter plot. way, movement across minimum suitability threshold easily visualized. transform 4 vectors suitability values, 2 per model, preparation plotting. created function slfSpread::rescale_cloglog_suitability() accomplish task. function uses vector exponential transformations specified value thresh apply exponential equation vector suitability values. applies equation y = c1 * c2^x + c3 vector, x input suitability values, y transformed version values, c1 c3 maximum inverse, c2 interpolated value input thresh. transformed suitability vector re-scaled thresh median (0.5) 0-1 scale values transformed fit scale.","code":"slf_populations <- read_rds(file.path(here::here(), \"data\", \"slf_all_coords_final_2024-08-05_tidied.rds\")) # global xy_global_1995 <- read_rds(file = file.path(here::here(), \"data\", \"global_slf_all_coords_1981-2010_xy_pred_suit.rds\")) xy_global_2055 <- read_rds(file = file.path(here::here(), \"data\", \"global_slf_all_coords_2041-2070_GFDL_ssp_mean_xy_pred_suit.rds\"))  # regional xy_regional_ensemble_1995 <- read_rds(file = file.path(here::here(), \"data\", \"regional_ensemble_slf_all_coords_1981-2010_xy_pred_suit.rds\")) xy_regional_ensemble_2055 <- read_rds(file = file.path(here::here(), \"data\", \"regional_ensemble_slf_all_coords_2041-2070_GFDL_ssp_mean_xy_pred_suit.rds\")) xy_global_1995_rescaled <- slfSpread::rescale_cloglog_suitability(   xy.predicted = xy_global_1995,   thresh = \"MTSS\",   exponential.file = file.path(here::here(), \"data-raw\", \"threshold_exponential_values.csv\"),   summary.file = summary_global,   rescale.name = \"xy_global_1995\",   rescale.thresholds = TRUE ) # separate data from thresholds xy_global_1995_rescaled_thresholds <- xy_global_1995_rescaled[[2]] xy_global_1995_rescaled <- xy_global_1995_rescaled[[1]]    xy_global_2055_rescaled <- slfSpread::rescale_cloglog_suitability(   xy.predicted = xy_global_2055,   thresh = \"MTSS\",  # the global model only has 1 MTSS thresh   exponential.file = file.path(here::here(), \"data-raw\", \"threshold_exponential_values.csv\"),   summary.file = summary_global,   rescale.name = \"xy_global_2055\",   rescale.thresholds = TRUE )  xy_global_2055_rescaled_thresholds <- xy_global_2055_rescaled[[2]] xy_global_2055_rescaled <- xy_global_2055_rescaled[[1]] xy_regional_ensemble_1995_rescaled <- slfSpread::rescale_cloglog_suitability(   xy.predicted = xy_regional_ensemble_1995,   thresh = \"MTSS\",   exponential.file = file.path(here::here(), \"data-raw\", \"threshold_exponential_values.csv\"),   summary.file = summary_regional_ensemble,   rescale.name = \"xy_regional_ensemble_1995\",   rescale.thresholds = TRUE )  xy_regional_ensemble_1995_rescaled_thresholds <- xy_regional_ensemble_1995_rescaled[[2]] xy_regional_ensemble_1995_rescaled <- xy_regional_ensemble_1995_rescaled[[1]]    xy_regional_ensemble_2055_rescaled <- slfSpread::rescale_cloglog_suitability(   xy.predicted = xy_regional_ensemble_2055,   thresh = \"MTSS.CC\", # the way the thresholds are calculated for the regional_ensemble model means that the threshold will be slightly different for climate change   exponential.file = file.path(here::here(), \"data-raw\", \"threshold_exponential_values.csv\"),   summary.file = summary_regional_ensemble,   rescale.name = \"xy_regional_ensemble_2055\",   rescale.thresholds = TRUE ) ## Warning in stri_detect_regex(string, pattern, negate = negate, opts_regex = ## opts(pattern)): argument is not an atomic vector; coercing xy_regional_ensemble_2055_rescaled_thresholds <- xy_regional_ensemble_2055_rescaled[[2]] xy_regional_ensemble_2055_rescaled <- xy_regional_ensemble_2055_rescaled[[1]] # global write_rds(   xy_global_1995_rescaled,    file = file.path(here::here(), \"data\", \"global_slf_all_coords_1981-2010_xy_pred_suit_rescaled.rds\")   ) write_rds(   xy_global_2055_rescaled,    file = file.path(here::here(), \"data\", \"global_slf_all_coords_2041-2070_GFDL_ssp_mean_xy_pred_suit_rescaled.rds\")   )  # regional write_rds(   xy_regional_ensemble_1995_rescaled,    file = file.path(here::here(), \"data\", \"regional_ensemble_slf_all_coords_1981-2010_xy_pred_suit_rescaled.rds\")   ) write_rds(   xy_regional_ensemble_2055_rescaled,    file = file.path(here::here(), \"data\", \"regional_ensemble_slf_all_coords_2041-2070_GFDL_ssp_mean_xy_pred_suit_rescaled.rds\")   ) # global write_rds(   xy_global_1995_rescaled_thresholds,    file = file.path(here::here(), \"data\", \"global_slf_all_coords_1981-2010_xy_pred_suit_rescaled_thresholds.rds\")   ) write_rds(   xy_global_2055_rescaled_thresholds,    file = file.path(here::here(), \"data\", \"global_slf_all_coords_2041-2070_GFDL_ssp_mean_xy_pred_suit_rescaled_thresholds.rds\")   )  # regional write_rds(   xy_regional_ensemble_1995_rescaled_thresholds,    file = file.path(here::here(), \"data\", \"regional_ensemble_slf_all_coords_1981-2010_xy_pred_suit_rescaled_thresholds.rds\")   ) write_rds(   xy_regional_ensemble_2055_rescaled_thresholds,    file = file.path(here::here(), \"data\", \"regional_ensemble_slf_all_coords_2041-2070_GFDL_ssp_mean_xy_pred_suit_rescaled_thresholds.rds\")   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/131_create_suitability_xy_plots_SLF.html","id":"plot-untransformed-suitability-values","dir":"Articles","previous_headings":"","what":"2. Plot untransformed suitability values","title":"Plot stability of known SLF populations due climate change effects","text":"need baseline visualizing trends scatter plots, first plot un-transformed datasets.","code":"# join datasets for plotting xy_joined <- full_join(xy_global_1995, xy_regional_ensemble_1995, by = c(\"x\", \"y\")) %>%   # join CC datasets   full_join(., xy_global_2055, by = c(\"x\", \"y\")) %>%   full_join(., xy_regional_ensemble_2055, by = c(\"x\", \"y\")) %>%   # order   dplyr::relocate(x, y, xy_global_1995, xy_global_2055) # figure annotation title # \"suitability of known Lycorma delicatula populations, projected for climate change\"  # plot (xy_joined_plot <- ggplot(data = xy_joined) +    # threshold lines    # MTSS thresholds    geom_vline(xintercept = as.numeric(summary_global[42, ncol(summary_global)]), linetype = \"dashed\", linewidth = 0.7) + # global    geom_hline(yintercept = as.numeric(summary_regional_ensemble[6, 4]), linetype = \"dashed\", linewidth = 0.7) + # regional_ensemble- there are two MTSS thresholds for this model, but the difference is so small that you will never see it on the plot    # historical data    geom_point(      aes(x = xy_global_1995, y = xy_regional_ensemble_1995, shape = \"Present\"),       size = 2, stroke = 0.7, color = \"black\", fill = \"white\"      ) +    # GFDL ssp370 data    geom_point(      aes(x = xy_global_2055, y = xy_regional_ensemble_2055, shape = \"2041-2070\\nGFDL-ESM4\\nmean ssp126/370/585\"),       size = 2, stroke = 0.7, color = \"black\", fill = \"wheat3\"      ) +    # axes scaling    scale_x_continuous(name =  \"'global' model cloglog suitability\", limits = c(0, 1), breaks = breaks) +     scale_y_continuous(name =  \"'regional_ensemble' model cloglog suitability\", limits = c(0, 1), breaks = breaks) +    # aesthetics    scale_shape_manual(name = \"Time period\", values = c(21, 21)) +    guides(shape = guide_legend(nrow = 1, override.aes = list(size = 2.5), reverse = TRUE)) +    theme_bw() +    theme(legend.position = \"bottom\", panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +    coord_fixed(ratio = 1) ) ggsave(   xy_joined_plot,    filename = file.path(     here::here(), \"vignette-outputs\", \"figures\", \"slf_populations_xy_suitability_global_regional_ensemble.jpg\"     ),   height = 8,    width = 8,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/131_create_suitability_xy_plots_SLF.html","id":"plot-transformed-suitability-values","dir":"Articles","previous_headings":"","what":"3. plot transformed suitability values","title":"Plot stability of known SLF populations due climate change effects","text":"manually change scale values 1-10 scale plot risk confused measure suitability model. need create second dataset arrow segments indicating change. filter segments cross either threshold plot arrows. First, need isolate MTSS threshold values.","code":"# global xy_global_1995_rescaled <- read_rds(file = file.path(here::here(), \"data\", \"global_slf_all_coords_1981-2010_xy_pred_suit_rescaled.rds\"))  xy_global_2055_rescaled <- read_rds(file = file.path(here::here(), \"data\", \"global_slf_all_coords_2041-2070_GFDL_ssp_mean_xy_pred_suit_rescaled.rds\"))  # regional xy_regional_ensemble_1995_rescaled <- read_rds(file = file.path(here::here(), \"data\", \"regional_ensemble_slf_all_coords_1981-2010_xy_pred_suit_rescaled.rds\"))  xy_regional_ensemble_2055_rescaled <- read_rds(file = file.path(here::here(), \"data\", \"regional_ensemble_slf_all_coords_2041-2070_GFDL_ssp_mean_xy_pred_suit_rescaled.rds\")) # global xy_global_1995_rescaled_thresholds <- read_rds(file = file.path(here::here(), \"data\", \"global_slf_all_coords_1981-2010_xy_pred_suit_rescaled_thresholds.rds\"))  xy_global_2055_rescaled_thresholds <- read_rds(file = file.path(here::here(), \"data\", \"global_slf_all_coords_2041-2070_GFDL_ssp_mean_xy_pred_suit_rescaled_thresholds.rds\"))  # regional xy_regional_ensemble_1995_rescaled_thresholds <- read_rds(file = file.path(here::here(), \"data\", \"regional_ensemble_slf_all_coords_1981-2010_xy_pred_suit_rescaled_thresholds.rds\"))  xy_regional_ensemble_2055_rescaled_thresholds <- read_rds(file = file.path(here::here(), \"data\", \"regional_ensemble_slf_all_coords_2041-2070_GFDL_ssp_mean_xy_pred_suit_rescaled_thresholds.rds\")) # join datasets for plotting xy_joined_rescaled <- full_join(xy_global_1995_rescaled, xy_regional_ensemble_1995_rescaled, by = c(\"x\", \"y\")) %>%   # join CC datasets   full_join(., xy_global_2055_rescaled, by = c(\"x\", \"y\")) %>%   full_join(., xy_regional_ensemble_2055_rescaled, by = c(\"x\", \"y\")) %>%   # order   dplyr::relocate(x, y, xy_global_1995_rescaled, xy_global_2055_rescaled) %>%   dplyr::select(-c(xy_global_1995, xy_global_2055, xy_regional_ensemble_1995, xy_regional_ensemble_2055))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/131_create_suitability_xy_plots_SLF.html","id":"find-points-that-shift-across-thresholds","dir":"Articles","previous_headings":"3. plot transformed suitability values","what":"find points that shift across thresholds","title":"Plot stability of known SLF populations due climate change effects","text":"","code":"# global global_MTSS <- as.numeric(xy_global_1995_rescaled_thresholds[2, 2]) # regional ensemble regional_ensemble_MTSS_1995 <- as.numeric(xy_regional_ensemble_1995_rescaled_thresholds[2, 2]) regional_ensemble_MTSS_2055 <- as.numeric(xy_regional_ensemble_2055_rescaled_thresholds[4, 2]) xy_joined_rescaled_intersects <- xy_joined_rescaled %>%   mutate(     crosses_threshold = case_when(       # conditional for starting and ending points that overlap a the threshold       # x-axis       xy_global_1995_rescaled > global_MTSS & xy_global_2055_rescaled < global_MTSS ~ \"crosses\",       xy_global_1995_rescaled < global_MTSS & xy_global_2055_rescaled > global_MTSS ~ \"crosses\",       # y-axis       xy_regional_ensemble_1995_rescaled > regional_ensemble_MTSS_2055 & xy_regional_ensemble_2055_rescaled < regional_ensemble_MTSS_2055 ~ \"crosses\",        xy_regional_ensemble_1995_rescaled < regional_ensemble_MTSS_2055 & xy_regional_ensemble_2055_rescaled > regional_ensemble_MTSS_2055 ~ \"crosses\",       # else       .default = \"does not cross\"     )   )  # filter out the crosses xy_joined_rescaled_intersects <- dplyr::filter(   xy_joined_rescaled_intersects,   crosses_threshold == \"crosses\" )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/131_create_suitability_xy_plots_SLF.html","id":"plot","dir":"Articles","previous_headings":"3. plot transformed suitability values","what":"plot","title":"Plot stability of known SLF populations due climate change effects","text":"Now lets plot data.","code":"# figure annotation title # \"Risk of Lycorma delicatula establishment in globally important viticultural areas, projected for climate change\"  # plot (xy_joined_rescaled_plot <- ggplot(data = xy_joined_rescaled) +    # threshold lines    # MTSS thresholds    geom_vline(xintercept = global_MTSS, linetype = \"dashed\", linewidth = 0.7) + # global    geom_hline(yintercept = regional_ensemble_MTSS_1995, linetype = \"dashed\", linewidth = 0.7) + # regional_ensemble- there are two MTSS thresholds for this model, but the difference is so small that you will never see it on the plot    # arrows indicating change    geom_segment(      data = xy_joined_rescaled_intersects,      aes(        x = xy_global_1995_rescaled,        xend = xy_global_2055_rescaled,        y = xy_regional_ensemble_1995_rescaled,        yend = xy_regional_ensemble_2055_rescaled      ),       arrow = grid::arrow(angle = 5.5, type = \"closed\"), alpha = 0.3, linewidth = 0.25, color = \"black\"    ) +    # historical data    geom_point(      aes(x = xy_global_1995_rescaled, y = xy_regional_ensemble_1995_rescaled, shape = \"Present\"),       size = 2, stroke = 0.7, color = \"black\", fill = \"white\"      ) +    # GFDL ssp370 data    geom_point(      aes(x = xy_global_2055_rescaled, y = xy_regional_ensemble_2055_rescaled, shape = \"2041-2070\\nGFDL-ESM4\\nmean ssp126/370/585\"),       size = 2, stroke = 0.7, color = \"black\", fill = \"wheat3\"      ) +    # axes scaling    scale_x_continuous(name = \"'global' model risk projection\", limits = c(0, 1), breaks = breaks, labels = labels) +     scale_y_continuous(name = \"'regional_ensemble' model risk projection\", limits = c(0, 1), breaks = breaks, labels = labels) +    # quadrant labels    # extreme risk, top right, quad4    geom_label(aes(x = 0.75, y = 0.9, label = \"extreme risk\"), fill = \"darkred\", color = \"azure\", size = 5) +    # high risk, top left, quad3    geom_label(aes(x = 0.25, y = 0.9, label = \"high risk\"), fill = \"darkorange\", color = \"azure\", size = 5) +    # moderate risk, bottom right, quad2    geom_label(aes(x = 0.75, y = 0.1, label = \"moderate risk\"), fill = \"gold\", color = \"azure\", size = 5) +    # low risk, bottom left, quad1    geom_label(aes(x = 0.25, y = 0.1, label = \"low risk\"), fill = \"azure4\", color = \"azure\", size = 5) +    # aesthetics    scale_shape_manual(name = \"Time period\", values = c(21, 21)) +    guides(shape = guide_legend(nrow = 1, override.aes = list(size = 2.5), reverse = TRUE)) +    theme_bw() +    theme(legend.position = \"bottom\", panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +    coord_fixed(ratio = 1) ) ## Warning in geom_label(aes(x = 0.75, y = 0.9, label = \"extreme risk\"), fill = \"darkred\", : All aesthetics have length 1, but the data has 803 rows. ## ℹ Please consider using `annotate()` or provide this layer with data containing ##   a single row. ## Warning in geom_label(aes(x = 0.25, y = 0.9, label = \"high risk\"), fill = \"darkorange\", : All aesthetics have length 1, but the data has 803 rows. ## ℹ Please consider using `annotate()` or provide this layer with data containing ##   a single row. ## Warning in geom_label(aes(x = 0.75, y = 0.1, label = \"moderate risk\"), fill = \"gold\", : All aesthetics have length 1, but the data has 803 rows. ## ℹ Please consider using `annotate()` or provide this layer with data containing ##   a single row. ## Warning in geom_label(aes(x = 0.25, y = 0.1, label = \"low risk\"), fill = \"azure4\", : All aesthetics have length 1, but the data has 803 rows. ## ℹ Please consider using `annotate()` or provide this layer with data containing ##   a single row. ggsave(   xy_joined_rescaled_plot,    filename = file.path(     here::here(), \"vignette-outputs\", \"figures\", \"slf_risk_plot.jpg\"     ),   height = 8,    width = 8,   device = \"jpeg\",   dpi = \"retina\"   )  # also save to rds write_rds(   xy_joined_rescaled_plot,   file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"figures-rds\", \"slf_risk_plot.rds\") )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/131_create_suitability_xy_plots_SLF.html","id":"create-summary-table-of-transformed-plot","dir":"Articles","previous_headings":"","what":"4. Create summary table of transformed plot","title":"Plot stability of known SLF populations due climate change effects","text":"now create summary table explain rescaled plots step 4. table depict quadrant placement point quadrant plot, climate change. , calculate total number movements quadrant. apply internal function slfSpread::calculate_risk_quadrant(). create summary table quadrant placement (thus level risk) point IVR_locations dataset. use calculate_risk_quadrant() accomplish .","code":"# create dataset and tidy slf_populations_joined <- left_join(slf_populations, xy_joined_rescaled, by = c(\"x\", \"y\")) %>%   relocate(ID, x, y)     # calculate risk quadrants slf_populations_risk <- slf_populations_joined %>%   mutate(     risk_1995 = slfSpread::calculate_risk_quadrant(       suit.x = slf_populations_joined$xy_global_1995_rescaled,       suit.y = slf_populations_joined$xy_regional_ensemble_1995_rescaled,       thresh.x = global_MTSS, # this threshold remains the same       thresh.y = regional_ensemble_MTSS_1995     ),     risk_2055 = slfSpread::calculate_risk_quadrant(       suit.x = slf_populations_joined$xy_global_2055_rescaled,       suit.y = slf_populations_joined$xy_regional_ensemble_2055_rescaled,       thresh.x = global_MTSS,       thresh.y = regional_ensemble_MTSS_2055     ),     risk_shift = str_c(risk_1995, risk_2055, sep = \"-\")   ) risk_levels <- c(\"extreme\", \"high\", \"moderate\", \"low\") slf_risk_table <- slf_populations_risk %>%   # create counts and make into acrostic table   dplyr::group_by(risk_1995, risk_2055) %>%   dplyr::summarize(count = n()) %>%   pivot_wider(names_from = risk_2055, values_from = count) %>%   # tidy   dplyr::rename(\"rows_1995_cols_2055\" = \"risk_1995\") %>%   relocate(\"rows_1995_cols_2055\", \"extreme\", \"high\", \"moderate\") %>%   arrange(factor(.$rows_1995_cols_2055, levels = risk_levels)) %>%   # replace missing categories with 0   replace(is.na(.), 0) %>%   ungroup() ## `summarise()` has grouped output by 'risk_1995'. You can override using the ## `.groups` argument. # tidy slf_risk_table <- slf_risk_table %>%   # add totals column   tibble::add_column(\"total_present\" = rowSums(.[, 2:5])) %>%   # add row totals   tibble::add_row(rows_1995_cols_2055 = \"total_2055\", extreme = colSums(dplyr::select(., 2)), high = colSums(dplyr::select(., 3)), moderate = colSums(dplyr::select(., 4)), low = colSums(dplyr::select(., 5)), total_present = 803) write_csv(   slf_risk_table,    file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"slf_risk_table.csv\")   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/131_create_suitability_xy_plots_SLF.html","id":"global-risk-shift-vs-regional-risk-shift","dir":"Articles","previous_headings":"","what":"5. global risk shift vs regional risk shift","title":"Plot stability of known SLF populations due climate change effects","text":"create table sum number points three different groups. goal understand regional model adds resolution calculation risk. , look sum number points suitable global model , unsuitable global model , unsuitable global model / suitable regional model. repeat operation time periods. analysis, found currently, 2.9% known (rarefied) SLF populations low risk according global model. However, 1.1% total populations specifically quadrant 3 (high risk). means global model alone label 22 769 slf populations low risk, actuality 9 40.9% high risk persisting (MTSS threshold) spatially segment presence data ensemble regional-scale models. climate change, 78 1063 populations (10%) unsuitable global model alone used describe risk SLF. However, 22 28% unsuitable populations still suitable regional_scale models thus missed analysis risk using global-scale model. means regional-scale ensemble adding resolution nuance estimation risk SLF establishment.","code":"global_regional_risk_shift <- tibble(   time_period = c(1995, 1995, 1995, 2055, 2055, 2055),   quadrants = c(\"quad4_quad2\", \"quad3_quad1\", \"quad3\", \"quad4_quad2\", \"quad3_quad1\", \"quad3\"),   risk = c(\"extreme_moderate\", \"high_low\", \"high\", \"extreme_moderate\", \"high_low\", \"high\"),   model_suit = c(\"global_suit\", \"global_unsuit\", \"global_unsuit_regional_suit\", \"global_suit\", \"global_unsuit\", \"global_unsuit_regional_suit\"),   slf_population_count = c(     # global suitable 1995     sum(slf_populations_joined$xy_global_1995_rescaled >= global_MTSS),     # global unsuitable 1995     sum(slf_populations_joined$xy_global_1995_rescaled < global_MTSS),     # global unsuitable and regional suitable 1995     sum(slf_populations_joined$xy_global_1995_rescaled < global_MTSS & slf_populations_joined$xy_regional_ensemble_1995_rescaled >= regional_ensemble_MTSS_1995),     # global suitable 2055     sum(slf_populations_joined$xy_global_2055_rescaled >= global_MTSS),     # global unsuitable 2055     sum(slf_populations_joined$xy_global_2055_rescaled < global_MTSS),     # global unsuitable and regional suitable 2055     sum(slf_populations_joined$xy_global_2055_rescaled < global_MTSS & slf_populations_joined$xy_regional_ensemble_2055_rescaled >= regional_ensemble_MTSS_2055)   ) ) # total # slf populations total_slf <- sum(global_regional_risk_shift[1:2, 5])  global_regional_risk_shift <- mutate(   global_regional_risk_shift,    slf_population_prop = slf_population_count / total_slf   )   # calculate % of unsuit (quad3 and quad 1) that are are in quad3 quad3_risk_prop <- tibble(   time_period = c(\"quad3_1995\", \"quad3_2055\"),   prop_total_unsuit_in_quad3 = c(     scales::label_percent(accuracy = 0.01) (abs(as.numeric((global_regional_risk_shift[3, 5]) / global_regional_risk_shift[2, 5]))),     scales::label_percent(accuracy = 0.01) (abs(as.numeric((global_regional_risk_shift[6, 5]) / global_regional_risk_shift[5, 5])))   ) ) # add % global_regional_risk_shift <- mutate(global_regional_risk_shift, slf_population_prop = scales::label_percent(accuracy = 0.01) (slf_population_prop))  # make kable global_regional_risk_shift <- kable(global_regional_risk_shift, \"html\", escape = FALSE) %>%    kableExtra::kable_styling(bootstrap_options = \"striped\", full_width = FALSE) %>%   kableExtra::add_header_above(., header = c(\"SLF risk plot quadrant proportions\" = 6), bold = TRUE)   # save as .html kableExtra::save_kable(   global_regional_risk_shift,    file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_risk_plot_quadrant_props.html\"),   self_contained = TRUE   )  # initialize webshot by  # webshot::install_phantomjs() # convert to pdf webshot::webshot(   url = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_risk_plot_quadrant_props.html\"),   file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_risk_plot_quadrant_props.jpg\"),   zoom = 2 )   # rm html file.remove(file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_risk_plot_quadrant_props.html\"))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/131_create_suitability_xy_plots_SLF.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Plot stability of known SLF populations due climate change effects","text":"Gallien, L., Douzet, R., Pratte, S., Zimmermann, N. E., & Thuiller, W. (2012). Invasive species distribution models – violating equilibrium assumption can create new insights. Global Ecology Biogeography, 21(11), 1126–1136. https://doi.org/10.1111/j.1466-8238.2012.00768.x Smith, T. 2021, August 11. Evaluating Invasion Stage SDMs - plantarum.ca. https://plantarum.ca/2021/08/11/invasion-stage/.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/140_plot_response_curves.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Plot response curves","text":"vignette, plot marginal univariate response curves global regional-scale models. plots help explore biological realism modeled scales. hypothesized regional models nuanced responses environmental variables global model, plots allow explore differences response curves models. regional models closely regional models trained smaller subset global data, thus may sensitive range covariates present region.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/140_plot_response_curves.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Plot response curves","text":"Note: setting global options document certain code chunks rendered final .html file. set eval = FALSE none code re-run (preventing files overwritten knitting) simply overwrite chunks plots. plots depict activity variables put MaxEnt models. create combined figure 3 models regional_ensemble","code":"# general tools library(tidyverse)  #data manipulation library(here) #making directory pathways easier on different instances here::here() # here::here() starts at the root folder of this package. ## [1] \"C:/Users/tun83449/Documents/GitHub/slfSpread\" library(devtools)  # SDMtune and dependencies library(SDMtune) # main package used to run SDMs library(dismo) # package underneath SDMtune library(rJava) library(plotROC) # plots ROCs  # spatial data handling library(raster)  library(terra)  library(sf)  library(viridis) library(patchwork) mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/models\") ensemble_colors <- c(   \"Rn (native)\" = \"#4daf4a\",   \"Ri.NAmerica\" =  \"#e41a1c\",   \"Ri.Asia\" = \"#377eb8\" )  marginal_plots_style <- list(   theme_bw(),   # labs   labs(     title = \"Marginal response of 'regional_ensemble' models\",     color = \"Model\",     caption = \"rug plots indicate presences\"     ),   ylab(\"cloglog_output\"),   # aes   scale_color_manual(     name = \"model\",     values = ensemble_colors,     aesthetics = \"color\"   ),   scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1), limits = c(0, 1)),   theme(legend.position = \"bottom\"),   geom_hline(aes(yintercept = 0), color = \"black\", linewidth = 0.5)  ) regional_native_model <- read_rds(file = file.path(mypath, \"slf_regional_native_v3\", \"regional_native_model.rds\"))  regional_invaded_model <- read_rds(file = file.path(mypath, \"slf_regional_invaded_v7\", \"regional_invaded_model.rds\"))  regional_invaded_asian_model <- read_rds(file = file.path(mypath, \"slf_regional_invaded_asian_v2\", \"regional_invaded_asian_model.rds\"))"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/140_plot_response_curves.html","id":"bio-11","dir":"Articles","previous_headings":"create marginal response plots","what":"Bio 11","title":"Plot response curves","text":"","code":"regional_native_marginal_bio11 <- SDMtune::plotResponse(   model = regional_native_model,   var = \"bio11\",   type = \"cloglog\",   fun = mean,   only_presence = TRUE,   marginal = TRUE,   rug = TRUE ) %>%   ggplot_build()   regional_invaded_marginal_bio11 <- SDMtune::plotResponse(   model = regional_invaded_model,   var = \"bio11\",   type = \"cloglog\",   fun = mean,   only_presence = TRUE,   marginal = TRUE,   rug = TRUE ) %>%   ggplot_build()  regional_invaded_asian_marginal_bio11 <- SDMtune::plotResponse(   model = regional_invaded_asian_model,   var = \"bio11\",   type = \"cloglog\",   fun = mean,   only_presence = TRUE,   marginal = TRUE,   rug = TRUE ) %>%   ggplot_build() # peak y trendline object  bio11_max_activity_values <- c(   native_bio_11 = regional_native_marginal_bio11$data[[1]][which.max(regional_native_marginal_bio11$data[[1]]$y), ]$x,   invaded_bio_11 = regional_invaded_marginal_bio11$data[[1]][which.max(regional_invaded_marginal_bio11$data[[1]]$y), ]$x,   invaded_asian_bio_11 = regional_invaded_asian_marginal_bio11$data[[1]][which.max(regional_invaded_asian_marginal_bio11$data[[1]]$y), ]$x ) bio11_marginal_combined <- ggplot() +   # native model data   geom_smooth(data = regional_native_marginal_bio11$data[[1]], aes(x = x, y = y, color = \"Rn (native)\"), se = FALSE, method = \"gam\") +   # invaded model data   geom_smooth(data = regional_invaded_marginal_bio11$data[[1]], aes(x = x, y = y, color = \"Ri.NAmerica\"), se = FALSE, method = \"gam\") +   # invaded_asian model data   geom_smooth(data = regional_invaded_asian_marginal_bio11$data[[1]], aes(x = x, y = y, color = \"Ri.Asia\"), se = FALSE, method = \"gam\") +   # plot peak trendline and labels   # Rn (native)   geom_vline(aes(xintercept = bio11_max_activity_values[[1]], color = \"Rn (native)\"), linetype = \"dashed\", linewidth = 0.5) +   # invaded   geom_vline(aes(xintercept = bio11_max_activity_values[[2]], color = \"Ri.NAmerica\"), linetype = \"dashed\", linewidth = 0.5) +   # Ri.Asia   geom_vline(aes(xintercept = bio11_max_activity_values[[3]], color = \"Ri.Asia\"), linetype = \"dashed\", linewidth = 0.5) +   # plot rug plots   # Rn (native)   geom_rug(aes(x = regional_native_marginal_bio11$data[[2]]$x, color = \"Rn (native)\"), sides = \"t\") +   # invaded   geom_rug(aes(x = regional_invaded_marginal_bio11$data[[2]]$x, color = \"Ri.NAmerica\"), sides = \"t\", alpha = 0.8) +   # Ri.Asia   geom_rug(aes(x = regional_invaded_asian_marginal_bio11$data[[2]]$x, color = \"Ri.Asia\"), sides = \"t\", alpha = 0.6) +   # default style   marginal_plots_style +   # labels   labs(     subtitle = \"Bio 11 (mean temperature of the coldest quarter)\",     x = \"mean temperature of the coldest quarter (C)\"     ) +   # aesthetics   xlim(-20, 20) ggsave(   bio11_marginal_combined,    filename = file.path(     here::here(), \"vignette-outputs\", \"figures\", \"regional_ensemble_bio11_marginal_resp_curve_cloglog.jpg\"     ),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/140_plot_response_curves.html","id":"bio-12","dir":"Articles","previous_headings":"create marginal response plots","what":"Bio 12","title":"Plot response curves","text":"","code":"regional_native_marginal_bio12 <- SDMtune::plotResponse(   model = regional_native_model,   var = \"bio12\",   type = \"cloglog\",   fun = mean,   only_presence = TRUE,   marginal = TRUE,   rug = TRUE ) %>%   ggplot_build()   regional_invaded_marginal_bio12 <- SDMtune::plotResponse(   model = regional_invaded_model,   var = \"bio12\",   type = \"cloglog\",   fun = mean,   only_presence = TRUE,   marginal = TRUE,   rug = TRUE ) %>%   ggplot_build()  regional_invaded_asian_marginal_bio12 <- SDMtune::plotResponse(   model = regional_invaded_asian_model,   var = \"bio12\",   type = \"cloglog\",   fun = mean,   only_presence = TRUE,   marginal = TRUE,   rug = TRUE ) %>%   ggplot_build() # peak y trendline object  bio12_max_activity_values <- c(   native_bio_12 = regional_native_marginal_bio12$data[[1]][which.max(regional_native_marginal_bio12$data[[1]]$y), ]$x,   invaded_bio_12 = regional_invaded_marginal_bio12$data[[1]][which.max(regional_invaded_marginal_bio12$data[[1]]$y), ]$x,   invaded_asian_bio_12 = regional_invaded_asian_marginal_bio12$data[[1]][which.max(regional_invaded_asian_marginal_bio12$data[[1]]$y), ]$x ) bio12_marginal_combined <- ggplot() +   # native model data   geom_smooth(data = regional_native_marginal_bio12$data[[1]], aes(x = x, y = y, color = \"Rn (native)\"), se = FALSE, method = \"gam\") +   # invaded model data   geom_smooth(data = regional_invaded_marginal_bio12$data[[1]], aes(x = x, y = y, color = \"Ri.NAmerica\"), se = FALSE, method = \"gam\") +   # Ri.Asia model data   geom_smooth(data = regional_invaded_asian_marginal_bio12$data[[1]], aes(x = x, y = y, color = \"Ri.Asia\"), se = FALSE, method = \"gam\") +   # plot peak trendline and labels   # Rn (native)   geom_vline(aes(xintercept = bio12_max_activity_values[[1]], color = \"Rn (native)\"), linetype = \"dashed\", linewidth = 0.5) +   # invaded   geom_vline(aes(xintercept = bio12_max_activity_values[[2]], color = \"Ri.NAmerica\"), linetype = \"dashed\", linewidth = 0.5) +   # Ri.Asia   geom_vline(aes(xintercept = bio12_max_activity_values[[3]], color = \"Ri.Asia\"), linetype = \"dashed\", linewidth = 0.5) +   # plot rug plots   # Rn (native)   geom_rug(aes(x = regional_native_marginal_bio12$data[[2]]$x, color = \"Rn (native)\"), sides = \"t\") +   # invaded   geom_rug(aes(x = regional_invaded_marginal_bio12$data[[2]]$x, color = \"Ri.NAmerica\"), sides = \"t\", alpha = 0.8) +   # Ri.Asia   geom_rug(aes(x = regional_invaded_asian_marginal_bio12$data[[2]]$x, color = \"Ri.Asia\"), sides = \"t\", alpha = 0.6) +   # default style   marginal_plots_style +   # labels   labs(     subtitle = \"Bio 12 (Annual Precipitation)\",     x = \"annual precipitation (mm)\"     ) +   # aesthetics   xlim(0, 4250) ggsave(   bio12_marginal_combined,    filename = file.path(     here::here(), \"vignette-outputs\", \"figures\", \"regional_ensemble_bio12_marginal_resp_curve_cloglog.jpg\"     ),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/140_plot_response_curves.html","id":"bio-15","dir":"Articles","previous_headings":"create marginal response plots","what":"Bio 15","title":"Plot response curves","text":"","code":"regional_native_marginal_bio15 <- SDMtune::plotResponse(   model = regional_native_model,   var = \"bio15\",   type = \"cloglog\",   fun = mean,   only_presence = TRUE,   marginal = TRUE,   rug = TRUE ) %>%   ggplot_build()   regional_invaded_marginal_bio15 <- SDMtune::plotResponse(   model = regional_invaded_model,   var = \"bio15\",   type = \"cloglog\",   fun = mean,   only_presence = TRUE,   marginal = TRUE,   rug = TRUE ) %>%   ggplot_build()  regional_invaded_asian_marginal_bio15 <- SDMtune::plotResponse(   model = regional_invaded_asian_model,   var = \"bio15\",   type = \"cloglog\",   fun = mean,   only_presence = TRUE,   marginal = TRUE,   rug = TRUE ) %>%   ggplot_build() # peak y trendline object  bio15_max_activity_values <- c(   native_bio_15 = regional_native_marginal_bio15$data[[1]][which.max(regional_native_marginal_bio15$data[[1]]$y), ]$x,   invaded_bio_15 = regional_invaded_marginal_bio15$data[[1]][which.max(regional_invaded_marginal_bio15$data[[1]]$y), ]$x,   invaded_asian_bio_15 = regional_invaded_asian_marginal_bio15$data[[1]][which.max(regional_invaded_asian_marginal_bio15$data[[1]]$y), ]$x ) bio15_marginal_combined <- ggplot() +   # native model data   geom_smooth(data = regional_native_marginal_bio15$data[[1]], aes(x = x, y = y, color = \"Rn (native)\"), se = FALSE, method = \"gam\") +   # invaded model data   geom_smooth(data = regional_invaded_marginal_bio15$data[[1]], aes(x = x, y = y, color = \"Ri.NAmerica\"), se = FALSE, method = \"gam\") +   # invaded_asian model data   geom_smooth(data = regional_invaded_asian_marginal_bio15$data[[1]], aes(x = x, y = y, color = \"Ri.Asia\"), se = FALSE, method = \"gam\") +   # plot peak trendline and labels   # Rn (native)   geom_vline(aes(xintercept = bio15_max_activity_values[[1]], color = \"Rn (native)\"), linetype = \"dashed\", linewidth = 0.5) +   # invaded   geom_vline(aes(xintercept = bio15_max_activity_values[[2]], color = \"Ri.NAmerica\"), linetype = \"dashed\", linewidth = 0.5) +   # Ri.Asia   geom_vline(aes(xintercept = bio15_max_activity_values[[3]], color = \"Ri.Asia\"), linetype = \"dashed\", linewidth = 0.5) +   # plot rug plots   # Rn (native)   geom_rug(aes(x = regional_native_marginal_bio15$data[[2]]$x, color = \"Rn (native)\"), sides = \"t\") +   # invaded   geom_rug(aes(x = regional_invaded_marginal_bio15$data[[2]]$x, color = \"Ri.NAmerica\"), sides = \"t\", alpha = 0.8) +   # Ri.Asia   geom_rug(aes(x = regional_invaded_asian_marginal_bio15$data[[2]]$x, color = \"Ri.Asia\"), sides = \"t\", alpha = 0.6) +   # default style   marginal_plots_style +   # labels   labs(     subtitle = \"Bio 15 (Precipitation Seasonality, CV)\",     x = \"precipitation seasonality (%)\"     ) +   # aesthetics   xlim(0, 120) ggsave(   bio15_marginal_combined,    filename = file.path(     here::here(), \"vignette-outputs\", \"figures\", \"regional_ensemble_bio15_marginal_resp_curve_cloglog.jpg\"     ),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/140_plot_response_curves.html","id":"bio-2","dir":"Articles","previous_headings":"create marginal response plots","what":"Bio 2","title":"Plot response curves","text":"","code":"regional_native_marginal_bio2 <- SDMtune::plotResponse(   model = regional_native_model,   var = \"bio2\",   type = \"cloglog\",   fun = mean,   only_presence = TRUE,   marginal = TRUE,   rug = TRUE ) %>%   ggplot_build()   regional_invaded_marginal_bio2 <- SDMtune::plotResponse(   model = regional_invaded_model,   var = \"bio2\",   type = \"cloglog\",   fun = mean,   only_presence = TRUE,   marginal = TRUE,   rug = TRUE ) %>%   ggplot_build()  regional_invaded_asian_marginal_bio2 <- SDMtune::plotResponse(   model = regional_invaded_asian_model,   var = \"bio2\",   type = \"cloglog\",   fun = mean,   only_presence = TRUE,   marginal = TRUE,   rug = TRUE ) %>%   ggplot_build() # peak y trendline object  bio2_max_activity_values <- c(   native_bio_2 = regional_native_marginal_bio2$data[[1]][which.max(regional_native_marginal_bio2$data[[1]]$y), ]$x,   invaded_bio_2 = regional_invaded_marginal_bio2$data[[1]][which.max(regional_invaded_marginal_bio2$data[[1]]$y), ]$x,   invaded_asian_bio_2 = regional_invaded_asian_marginal_bio2$data[[1]][which.max(regional_invaded_asian_marginal_bio2$data[[1]]$y), ]$x ) bio2_marginal_combined <- ggplot() +   # native model data   geom_smooth(data = regional_native_marginal_bio2$data[[1]], aes(x = x, y = y, color = \"Rn (native)\"), se = FALSE, method = \"gam\") +   # invaded model data   geom_smooth(data = regional_invaded_marginal_bio2$data[[1]], aes(x = x, y = y, color = \"Ri.NAmerica\"), se = FALSE, method = \"gam\") +   # invaded_asian model data   geom_smooth(data = regional_invaded_asian_marginal_bio2$data[[1]], aes(x = x, y = y, color = \"Ri.Asia\"), se = FALSE, method = \"gam\") +   # plot peak trendline and labels   # Rn (native)   geom_vline(aes(xintercept = bio2_max_activity_values[[1]], color = \"Rn (native)\"), linetype = \"dashed\", linewidth = 0.5) +   # invaded   geom_vline(aes(xintercept = bio2_max_activity_values[[2]], color = \"Ri.NAmerica\"), linetype = \"dashed\", linewidth = 0.5) +   # Ri.Asia   geom_vline(aes(xintercept = bio2_max_activity_values[[3]], color = \"Ri.Asia\"), linetype = \"dashed\", linewidth = 0.5) +   # plot rug plots   # Rn (native)   geom_rug(aes(x = regional_native_marginal_bio2$data[[2]]$x, color = \"Rn (native)\"), sides = \"t\") +   # invaded   geom_rug(aes(x = regional_invaded_marginal_bio2$data[[2]]$x, color = \"Ri.NAmerica\"), sides = \"t\", alpha = 0.8) +   # Ri.Asia   geom_rug(aes(x = regional_invaded_asian_marginal_bio2$data[[2]]$x, color = \"Ri.Asia\"), sides = \"t\", alpha = 0.6) +   # default style   marginal_plots_style +   # labels   labs(     subtitle = \"Bio 2 (Mean Diurnal Range)\",     x = \"mean diurnal range (C)\"     ) +   # aesthetics   xlim(0, 15) ggsave(   bio2_marginal_combined,    filename = file.path(     here::here(), \"vignette-outputs\", \"figures\", \"regional_ensemble_bio2_marginal_resp_curve_cloglog.jpg\"     ),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/140_plot_response_curves.html","id":"create-univariate-response-curves","dir":"Articles","previous_headings":"","what":"create univariate response curves","title":"Plot response curves","text":"smooth plots using GAM formula, methods Elith et al, 2011. note curves created using Beta multiplier 1.5.","code":"ensemble_colors <- c(   \"Rn (native)\" = \"#4daf4a\",   \"Ri.NAmerica\" =  \"#e41a1c\",   \"Ri.Asia\" = \"#377eb8\" )  univar_plots_style <- list(   theme_bw(),   # labs   labs(     title = \"Univariate response in 'regional_ensemble' models\",     color = \"Model\",     caption = \"rug plots indicate presences\"     ),   ylab(\"cloglog_output\"),   # aes   scale_color_manual(     name = \"model\",     values = ensemble_colors,     aesthetics = \"color\"   ),   scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1), limits = c(0, 1)),   theme(legend.position = \"bottom\"),   geom_hline(aes(yintercept = 0), color = \"black\", linewidth = 0.5)  )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/140_plot_response_curves.html","id":"bio-11-1","dir":"Articles","previous_headings":"create univariate response curves","what":"Bio 11","title":"Plot response curves","text":"","code":"regional_native_univar_bio11 <- SDMtune::plotResponse(   model = regional_native_model,   var = \"bio11\",   type = \"cloglog\",   fun = mean,   only_presence = TRUE,   marginal = FALSE,   rug = TRUE ) %>%   ggplot_build()   regional_invaded_univar_bio11 <- SDMtune::plotResponse(   model = regional_invaded_model,   var = \"bio11\",   type = \"cloglog\",   fun = mean,   only_presence = TRUE,   marginal = FALSE,   rug = TRUE ) %>%   ggplot_build()  regional_invaded_asian_univar_bio11 <- SDMtune::plotResponse(   model = regional_invaded_asian_model,   var = \"bio11\",   type = \"cloglog\",   fun = mean,   only_presence = TRUE,   marginal = FALSE,   rug = TRUE ) %>%   ggplot_build() # peak y trendline object  bio11_univar_max_activity_values <- c(   native_bio11 = regional_native_univar_bio11$data[[1]][which.max(regional_native_univar_bio11$data[[1]]$y), ]$x,   invaded_bio11 = regional_invaded_univar_bio11$data[[1]][which.max(regional_invaded_univar_bio11$data[[1]]$y), ]$x,   invaded_asian_bio11 = regional_invaded_asian_univar_bio11$data[[1]][which.max(regional_invaded_asian_univar_bio11$data[[1]]$y), ]$x ) bio11_univar_combined <- ggplot() +   # native model data   geom_smooth(data = regional_native_univar_bio11$data[[1]], aes(x = x, y = y, color = \"Rn (native)\"), se = FALSE, method = \"gam\") +   # invaded model data   geom_smooth(data = regional_invaded_univar_bio11$data[[1]], aes(x = x, y = y, color = \"Ri.NAmerica\"), se = FALSE, method = \"gam\") +   # Ri.Asia model data   geom_smooth(data = regional_invaded_asian_univar_bio11$data[[1]], aes(x = x, y = y, color = \"Ri.Asia\"), se = FALSE, method = \"gam\") +   # plot peak trendline and labels   # Rn (native)   geom_vline(aes(xintercept = bio11_univar_max_activity_values[[1]], color = \"Rn (native)\"), linetype = \"dashed\", linewidth = 0.5) +   # invaded   geom_vline(aes(xintercept = bio11_univar_max_activity_values[[2]], color = \"Ri.NAmerica\"), linetype = \"dashed\", linewidth = 0.5) +   # Ri.Asia   geom_vline(aes(xintercept = bio11_univar_max_activity_values[[3]], color = \"Ri.Asia\"), linetype = \"dashed\", linewidth = 0.5) +   # plot rug plots   # Rn (native)   geom_rug(aes(x = regional_native_univar_bio11$data[[2]]$x, color = \"Rn (native)\"), sides = \"t\") +   # invaded   geom_rug(aes(x = regional_invaded_univar_bio11$data[[2]]$x, color = \"Ri.NAmerica\"), sides = \"t\", alpha = 0.8) +   # Ri.Asia   geom_rug(aes(x = regional_invaded_asian_univar_bio11$data[[2]]$x, color = \"Ri.Asia\"), sides = \"t\", alpha = 0.6) +   # default style   univar_plots_style +   # labels   labs(     subtitle = \"Bio 11 (mean temperature of the coldest quarter)\",     x = \"mean temperature of the coldest quarter (C)\"     ) +   # aesthetics   xlim(-20, 20) ggsave(   bio11_univar_combined,    filename = file.path(     here::here(), \"vignette-outputs\", \"figures\", \"regional_ensemble_bio11_univar_resp_curve_cloglog.jpg\"     ),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   ) ## `geom_smooth()` using formula = 'y ~ s(x, bs = \"cs\")' ## Warning: Removed 26 rows containing non-finite outside the scale range ## (`stat_smooth()`). ## `geom_smooth()` using formula = 'y ~ s(x, bs = \"cs\")' ## `geom_smooth()` using formula = 'y ~ s(x, bs = \"cs\")' ## Warning: Removed 2 rows containing non-finite outside the scale range ## (`stat_smooth()`). ## Warning: Removed 11 rows containing missing values or values outside the scale range ## (`geom_smooth()`). ## Warning: Removed 31 rows containing missing values or values outside the scale range ## (`geom_smooth()`). ## Warning: Removed 21 rows containing missing values or values outside the scale range ## (`geom_smooth()`)."},{"path":"https://ieco-lab.github.io/slfSpread/articles/140_plot_response_curves.html","id":"bio-12-1","dir":"Articles","previous_headings":"create univariate response curves","what":"Bio 12","title":"Plot response curves","text":"","code":"regional_native_univar_bio12 <- SDMtune::plotResponse(   model = regional_native_model,   var = \"bio12\",   type = \"cloglog\",   fun = mean,   only_presence = TRUE,   marginal = FALSE,   rug = TRUE ) %>%   ggplot_build()   regional_invaded_univar_bio12 <- SDMtune::plotResponse(   model = regional_invaded_model,   var = \"bio12\",   type = \"cloglog\",   fun = mean,   only_presence = TRUE,   marginal = FALSE,   rug = TRUE ) %>%   ggplot_build()  regional_invaded_asian_univar_bio12 <- SDMtune::plotResponse(   model = regional_invaded_asian_model,   var = \"bio12\",   type = \"cloglog\",   fun = mean,   only_presence = TRUE,   marginal = FALSE,   rug = TRUE ) %>%   ggplot_build() # peak y trendline object  bio12_univar_max_activity_values <- c(   native_bio12 = regional_native_univar_bio12$data[[1]][which.max(regional_native_univar_bio12$data[[1]]$y), ]$x,   invaded_bio12 = regional_invaded_univar_bio12$data[[1]][which.max(regional_invaded_univar_bio12$data[[1]]$y), ]$x,   invaded_asian_bio12 = regional_invaded_asian_univar_bio12$data[[1]][which.max(regional_invaded_asian_univar_bio12$data[[1]]$y), ]$x ) bio12_univar_combined <- ggplot() +   # native model data   geom_smooth(data = regional_native_univar_bio12$data[[1]], aes(x = x, y = y, color = \"Rn (native)\"), se = FALSE, method = \"gam\") +   # invaded model data   geom_smooth(data = regional_invaded_univar_bio12$data[[1]], aes(x = x, y = y, color = \"Ri.NAmerica\"), se = FALSE, method = \"gam\") +   # invaded_asian model data   geom_smooth(data = regional_invaded_asian_univar_bio12$data[[1]], aes(x = x, y = y, color = \"Ri.Asia\"), se = FALSE, method = \"gam\") +   # plot peak trendline and labels   # Rn (native)   geom_vline(aes(xintercept = bio12_univar_max_activity_values[[1]], color = \"Rn (native)\"), linetype = \"dashed\", linewidth = 0.5) +   # invaded   geom_vline(aes(xintercept = bio12_univar_max_activity_values[[2]], color = \"Ri.NAmerica\"), linetype = \"dashed\", linewidth = 0.5) +   # Ri.Asia   geom_vline(aes(xintercept = bio12_univar_max_activity_values[[3]], color = \"Ri.Asia\"), linetype = \"dashed\", linewidth = 0.5) +   # plot rug plots   # Rn (native)   geom_rug(aes(x = regional_native_univar_bio12$data[[2]]$x, color = \"Rn (native)\"), sides = \"t\") +   # invaded   geom_rug(aes(x = regional_invaded_univar_bio12$data[[2]]$x, color = \"Ri.NAmerica\"), sides = \"t\", alpha = 0.8) +   # Ri.Asia   geom_rug(aes(x = regional_invaded_asian_univar_bio12$data[[2]]$x, color = \"Ri.Asia\"), sides = \"t\", alpha = 0.6) +   # default style   univar_plots_style +   # labels   labs(     subtitle = \"Bio 12 (Annual Precipitation)\",     x = \"annual precipitation (mm)\"     ) +   # aesthetics   xlim(0, 4250) ggsave(   bio12_univar_combined,    filename = file.path(     here::here(), \"vignette-outputs\", \"figures\", \"regional_ensemble_bio12_univar_resp_curve_cloglog.jpg\"     ),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/140_plot_response_curves.html","id":"bio-15-1","dir":"Articles","previous_headings":"create univariate response curves","what":"Bio 15","title":"Plot response curves","text":"","code":"regional_native_univar_bio15 <- SDMtune::plotResponse(   model = regional_native_model,   var = \"bio15\",   type = \"cloglog\",   fun = mean,   only_presence = TRUE,   marginal = FALSE,   rug = TRUE ) %>%   ggplot_build()   regional_invaded_univar_bio15 <- SDMtune::plotResponse(   model = regional_invaded_model,   var = \"bio15\",   type = \"cloglog\",   fun = mean,   only_presence = TRUE,   marginal = FALSE,   rug = TRUE ) %>%   ggplot_build()  regional_invaded_asian_univar_bio15 <- SDMtune::plotResponse(   model = regional_invaded_asian_model,   var = \"bio15\",   type = \"cloglog\",   fun = mean,   only_presence = TRUE,   marginal = FALSE,   rug = TRUE ) %>%   ggplot_build() # peak y trendline object  bio15_univar_max_activity_values <- c(   native_bio15 = regional_native_univar_bio15$data[[1]][which.max(regional_native_univar_bio15$data[[1]]$y), ]$x,   invaded_bio15 = regional_invaded_univar_bio15$data[[1]][which.max(regional_invaded_univar_bio15$data[[1]]$y), ]$x,   invaded_asian_bio15 = regional_invaded_asian_univar_bio15$data[[1]][which.max(regional_invaded_asian_univar_bio15$data[[1]]$y), ]$x ) bio15_univar_combined <- ggplot() +   # native model data   geom_smooth(data = regional_native_univar_bio15$data[[1]], aes(x = x, y = y, color = \"Rn (native)\"), se = FALSE, method = \"gam\") +   # invaded model data   geom_smooth(data = regional_invaded_univar_bio15$data[[1]], aes(x = x, y = y, color = \"Ri.NAmerica\"), se = FALSE, method = \"gam\") +   # invaded_asian model data   geom_smooth(data = regional_invaded_asian_univar_bio15$data[[1]], aes(x = x, y = y, color = \"Ri.Asia\"), se = FALSE, method = \"gam\") +   # plot peak trendline and labels   # Rn (native)   geom_vline(aes(xintercept = bio15_univar_max_activity_values[[1]], color = \"Rn (native)\"), linetype = \"dashed\", linewidth = 0.5) +   # invaded   geom_vline(aes(xintercept = bio15_univar_max_activity_values[[2]], color = \"Ri.NAmerica\"), linetype = \"dashed\", linewidth = 0.5) +   # Ri.Asia   geom_vline(aes(xintercept = bio15_univar_max_activity_values[[3]], color = \"Ri.Asia\"), linetype = \"dashed\", linewidth = 0.5) +   # plot rug plots   # Rn (native)   geom_rug(aes(x = regional_native_univar_bio15$data[[2]]$x, color = \"Rn (native)\"), sides = \"t\") +   # invaded   geom_rug(aes(x = regional_invaded_univar_bio15$data[[2]]$x, color = \"Ri.NAmerica\"), sides = \"t\", alpha = 0.8) +   # Ri.Asia   geom_rug(aes(x = regional_invaded_asian_univar_bio15$data[[2]]$x, color = \"Ri.Asia\"), sides = \"t\", alpha = 0.6) +   # default style   univar_plots_style +   # labels   labs(     subtitle = \"Bio 15 (Precipitation Seasonality, CV)\",     x = \"precipitation seasonality (%)\"     ) +   # aesthetics   xlim(0, 120) ggsave(   bio15_univar_combined,    filename = file.path(     here::here(), \"vignette-outputs\", \"figures\", \"regional_ensemble_bio15_univar_resp_curve_cloglog.jpg\"     ),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/140_plot_response_curves.html","id":"bio-2-1","dir":"Articles","previous_headings":"create univariate response curves","what":"Bio 2","title":"Plot response curves","text":"","code":"regional_native_univar_bio2 <- SDMtune::plotResponse(   model = regional_native_model,   var = \"bio2\",   type = \"cloglog\",   fun = mean,   only_presence = TRUE,   marginal = FALSE,   rug = TRUE ) %>%   ggplot_build()   regional_invaded_univar_bio2 <- SDMtune::plotResponse(   model = regional_invaded_model,   var = \"bio2\",   type = \"cloglog\",   fun = mean,   only_presence = TRUE,   marginal = FALSE,   rug = TRUE ) %>%   ggplot_build()  regional_invaded_asian_univar_bio2 <- SDMtune::plotResponse(   model = regional_invaded_asian_model,   var = \"bio2\",   type = \"cloglog\",   fun = mean,   only_presence = TRUE,   marginal = FALSE,   rug = TRUE ) %>%   ggplot_build() # peak y trendline object  bio2_univar_max_activity_values <- c(   native_bio2 = regional_native_univar_bio2$data[[1]][which.max(regional_native_univar_bio2$data[[1]]$y), ]$x,   invaded_bio2 = regional_invaded_univar_bio2$data[[1]][which.max(regional_invaded_univar_bio2$data[[1]]$y), ]$x,   invaded_asian_bio2 = regional_invaded_asian_univar_bio2$data[[1]][which.max(regional_invaded_asian_univar_bio2$data[[1]]$y), ]$x ) bio2_univar_combined <- ggplot() +   # native model data   geom_smooth(data = regional_native_univar_bio2$data[[1]], aes(x = x, y = y, color = \"Rn (native)\"), se = FALSE, method = \"gam\") +   # invaded model data   geom_smooth(data = regional_invaded_univar_bio2$data[[1]], aes(x = x, y = y, color = \"Ri.NAmerica\"), se = FALSE, method = \"gam\") +   # Ri.Asia model data   geom_smooth(data = regional_invaded_asian_univar_bio2$data[[1]], aes(x = x, y = y, color = \"Ri.Asia\"), se = FALSE, method = \"gam\") +   # plot peak trendline and labels   # Rn (native)   geom_vline(aes(xintercept = bio2_univar_max_activity_values[[1]], color = \"Rn (native)\"), linetype = \"dashed\", linewidth = 0.5) +   # invaded   geom_vline(aes(xintercept = bio2_univar_max_activity_values[[2]], color = \"Ri.NAmerica\"), linetype = \"dashed\", linewidth = 0.5) +   # Ri.Asia   geom_vline(aes(xintercept = bio2_univar_max_activity_values[[3]], color = \"Ri.Asia\"), linetype = \"dashed\", linewidth = 0.5) +   # plot rug plots   # Rn (native)   geom_rug(aes(x = regional_native_univar_bio2$data[[2]]$x, color = \"Rn (native)\"), sides = \"t\") +   # invaded   geom_rug(aes(x = regional_invaded_univar_bio2$data[[2]]$x, color = \"Ri.NAmerica\"), sides = \"t\", alpha = 0.8) +   # Ri.Asia   geom_rug(aes(x = regional_invaded_asian_univar_bio2$data[[2]]$x, color = \"Ri.Asia\"), sides = \"t\", alpha = 0.6) +   # default style   univar_plots_style +   # labels   labs(     subtitle = \"Bio 2 (Mean Diurnal Range)\",     x = \"mean diurnal range (C)\"     ) +   # aesthetics   xlim(0, 15) ggsave(   bio2_univar_combined,    filename = file.path(     here::here(), \"vignette-outputs\", \"figures\", \"regional_ensemble_bio2_univar_resp_curve_cloglog.jpg\"     ),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/140_plot_response_curves.html","id":"load-in-objects-and-setup","dir":"Articles","previous_headings":"Global Model","what":"Load in objects and setup","title":"Plot response curves","text":"","code":"univar_plots_style_global <- list(   theme_bw(),   # labs   labs(     title = \"Univariate response of 'global' model\",     caption = \"rug plot indicates presences\"     ),   ylab(\"cloglog_output\"),   # aes   scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1), limits = c(0, 1)),   geom_hline(aes(yintercept = 0), color = \"black\", linewidth = 0.5)  ) global_model <- read_rds(file = file.path(mypath, \"slf_global_v3\", \"global_model.rds\"))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/140_plot_response_curves.html","id":"create-marginal-plots","dir":"Articles","previous_headings":"Global Model","what":"Create marginal plots","title":"Plot response curves","text":"","code":"marginal_plots_style_global <- list(   theme_bw(),   # labs   labs(     title = \"Marginal response of 'global' model\",     caption = \"rug plot indicates presences\"     ),   ylab(\"cloglog_output\"),   # aes   scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1), limits = c(0, 1)),   geom_hline(aes(yintercept = 0), color = \"black\", linewidth = 0.5)  ) global_marginal_bio11 <- SDMtune::plotResponse(   model = global_model,   var = \"bio11\",   type = \"cloglog\",   fun = mean,   only_presence = TRUE,   marginal = TRUE,   rug = TRUE ) %>%   ggplot_build()   global_marginal_bio12 <- SDMtune::plotResponse(   model = global_model,   var = \"bio12\",   type = \"cloglog\",   fun = mean,   only_presence = TRUE,   marginal = TRUE,   rug = TRUE ) %>%   ggplot_build()  global_marginal_bio15 <- SDMtune::plotResponse(   model = global_model,   var = \"bio15\",   type = \"cloglog\",   fun = mean,   only_presence = TRUE,   marginal = TRUE,   rug = TRUE ) %>%   ggplot_build()              global_marginal_bio2 <- SDMtune::plotResponse(   model = global_model,   var = \"bio2\",   type = \"cloglog\",   fun = mean,   only_presence = TRUE,   marginal = TRUE,   rug = TRUE ) %>%   ggplot_build() # peak y trendline object  bio11_marginal_max_activity_global <- global_marginal_bio11$data[[1]][which.max(global_marginal_bio11$data[[1]]$y), ]$x  bio12_marginal_max_activity_global <- global_marginal_bio12$data[[1]][which.max(global_marginal_bio12$data[[1]]$y), ]$x  bio15_marginal_max_activity_global <- global_marginal_bio15$data[[1]][which.max(global_marginal_bio15$data[[1]]$y), ]$x  bio2_marginal_max_activity_global <- global_marginal_bio2$data[[1]][which.max(global_marginal_bio2$data[[1]]$y), ]$x"},{"path":"https://ieco-lab.github.io/slfSpread/articles/140_plot_response_curves.html","id":"plots","dir":"Articles","previous_headings":"Global Model > Create marginal plots","what":"plots","title":"Plot response curves","text":"","code":"bio11_marginal_global <- ggplot() +   geom_smooth(data = global_marginal_bio11$data[[1]], aes(x = x, y = y), color = \"orangered2\", se = FALSE, method = \"gam\") +   # plot peak trendline and labels   geom_vline(aes(xintercept = bio11_marginal_max_activity_global), color = \"orangered2\", linetype = \"dashed\", linewidth = 0.5) +   # plot rug   geom_rug(aes(x = global_marginal_bio11$data[[3]]$x), color = \"orangered2\", sides = \"t\") +   # default style   marginal_plots_style_global +   # labels   # labels   labs(     subtitle = \"Bio 11 (mean temperature of the coldest quarter)\",     x = \"mean temperature of the coldest quarter (C)\"     ) +   # aesthetics   xlim(-20, 20) ggsave(   bio11_marginal_global,    filename = file.path(     here::here(), \"vignette-outputs\", \"figures\", \"global_bio11_marginal_resp_curve_cloglog.jpg\"     ),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   ) bio12_marginal_global <- ggplot() +   geom_smooth(data = global_marginal_bio12$data[[1]], aes(x = x, y = y), color = \"orangered2\", se = FALSE, method = \"gam\") +   # plot peak trendline and labels   geom_vline(aes(xintercept = bio12_marginal_max_activity_global), color = \"orangered2\", linetype = \"dashed\", linewidth = 0.5) +   # plot rug   geom_rug(aes(x = global_marginal_bio12$data[[3]]$x), color = \"orangered2\", sides = \"t\") +   # default style   marginal_plots_style_global +   # labels   # labels   labs(     subtitle = \"Bio 12 (Annual Precipitation)\",     x = \"annual precipitation (mm)\"     ) +   # aesthetics   xlim(0, 4250) ggsave(   bio12_marginal_global,    filename = file.path(     here::here(), \"vignette-outputs\", \"figures\", \"global_bio12_marginal_resp_curve_cloglog.jpg\"     ),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   ) bio15_marginal_global <- ggplot() +   geom_smooth(data = global_marginal_bio15$data[[1]], aes(x = x, y = y), color = \"orangered2\", se = FALSE, method = \"gam\") +   # plot peak trendline and labels   geom_vline(aes(xintercept = bio15_marginal_max_activity_global), color = \"orangered2\", linetype = \"dashed\", linewidth = 0.5) +   # plot rug   geom_rug(aes(x = global_marginal_bio15$data[[3]]$x), color = \"orangered2\", sides = \"t\") +   # default style   marginal_plots_style_global +   # labels   labs(     subtitle = \"Bio 15 (Precipitation Seasonality, CV)\",     x = \"precipitation seasonality (%)\"     ) +   # aesthetics   xlim(0, 120) ggsave(   bio15_marginal_global,    filename = file.path(     here::here(), \"vignette-outputs\", \"figures\", \"global_bio15_marginal_resp_curve_cloglog.jpg\"     ),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   ) bio2_marginal_global <- ggplot() +   geom_smooth(data = global_marginal_bio2$data[[1]], aes(x = x, y = y), color = \"orangered2\", se = FALSE, method = \"gam\") +   # plot peak trendline and labels   geom_vline(aes(xintercept = bio2_marginal_max_activity_global), color = \"orangered2\", linetype = \"dashed\", linewidth = 0.5) +   # plot rug   geom_rug(aes(x = global_marginal_bio2$data[[3]]$x), color = \"orangered2\", sides = \"t\") +   # default style   marginal_plots_style_global +   # labels   labs(     subtitle = \"Bio 2 (Mean Diurnal Range)\",     x = \"mean diurnal range (C)\"     ) +   # aesthetics   xlim(0, 15) ggsave(   bio2_marginal_global,    filename = file.path(     here::here(), \"vignette-outputs\", \"figures\", \"global_bio2_marginal_resp_curve_cloglog.jpg\"     ),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/140_plot_response_curves.html","id":"create-univariate-plots","dir":"Articles","previous_headings":"Global Model","what":"Create univariate plots","title":"Plot response curves","text":"","code":"global_univar_bio11 <- SDMtune::plotResponse(   model = global_model,   var = \"bio11\",   type = \"cloglog\",   fun = mean,   only_presence = TRUE,   marginal = FALSE,   rug = TRUE ) %>%   ggplot_build()   global_univar_bio12 <- SDMtune::plotResponse(   model = global_model,   var = \"bio12\",   type = \"cloglog\",   fun = mean,   only_presence = TRUE,   marginal = FALSE,   rug = TRUE ) %>%   ggplot_build()  global_univar_bio15 <- SDMtune::plotResponse(   model = global_model,   var = \"bio15\",   type = \"cloglog\",   fun = mean,   only_presence = TRUE,   marginal = FALSE,   rug = TRUE ) %>%   ggplot_build()              global_univar_bio2 <- SDMtune::plotResponse(   model = global_model,   var = \"bio2\",   type = \"cloglog\",   fun = mean,   only_presence = TRUE,   marginal = FALSE,   rug = TRUE ) %>%   ggplot_build() # peak y trendline object  bio11_univar_max_activity_global <- global_univar_bio11$data[[1]][which.max(global_univar_bio11$data[[1]]$y), ]$x  bio12_univar_max_activity_global <- global_univar_bio12$data[[1]][which.max(global_univar_bio12$data[[1]]$y), ]$x  bio15_univar_max_activity_global <- global_univar_bio15$data[[1]][which.max(global_univar_bio15$data[[1]]$y), ]$x  bio2_univar_max_activity_global <- global_univar_bio2$data[[1]][which.max(global_univar_bio2$data[[1]]$y), ]$x"},{"path":"https://ieco-lab.github.io/slfSpread/articles/140_plot_response_curves.html","id":"plots-1","dir":"Articles","previous_headings":"Global Model > Create univariate plots","what":"plots","title":"Plot response curves","text":"","code":"bio11_univar_global <- ggplot() +   geom_smooth(data = global_univar_bio11$data[[1]], aes(x = x, y = y), color = \"orangered2\", se = FALSE, method = \"gam\") +   # plot peak trendline and labels   geom_vline(aes(xintercept = bio11_univar_max_activity_global), color = \"orangered2\", linetype = \"dashed\", linewidth = 0.5) +   # plot rug   geom_rug(aes(x = global_univar_bio11$data[[3]]$x), color = \"orangered2\", sides = \"t\") +   # default style   univar_plots_style_global +   # labels   # labels   labs(     subtitle = \"Bio 11 (mean temperature of the coldest quarter)\",     x = \"mean temperature of the coldest quarter (C)\"     ) +   # aesthetics   xlim(-20, 20) ggsave(   bio11_univar_global,    filename = file.path(     here::here(), \"vignette-outputs\", \"figures\", \"global_bio11_univar_resp_curve_cloglog.jpg\"     ),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   ) bio12_univar_global <- ggplot() +   geom_smooth(data = global_univar_bio12$data[[1]], aes(x = x, y = y), color = \"orangered2\", se = FALSE, method = \"gam\") +   # plot peak trendline and labels   geom_vline(aes(xintercept = bio12_univar_max_activity_global), color = \"orangered2\", linetype = \"dashed\", linewidth = 0.5) +   # plot rug   geom_rug(aes(x = global_univar_bio12$data[[3]]$x), color = \"orangered2\", sides = \"t\") +   # default style   univar_plots_style_global +   # labels   # labels   labs(     subtitle = \"Bio 12 (Annual Precipitation)\",     x = \"annual precipitation (mm)\"     ) +   # aesthetics   xlim(0, 4250) ggsave(   bio12_univar_global,    filename = file.path(     here::here(), \"vignette-outputs\", \"figures\", \"global_bio12_univar_resp_curve_cloglog.jpg\"     ),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   ) bio15_univar_global <- ggplot() +   geom_smooth(data = global_univar_bio15$data[[1]], aes(x = x, y = y), color = \"orangered2\", se = FALSE, method = \"gam\") +   # plot peak trendline and labels   geom_vline(aes(xintercept = bio15_univar_max_activity_global), color = \"orangered2\", linetype = \"dashed\", linewidth = 0.5) +   # plot rug   geom_rug(aes(x = global_univar_bio15$data[[3]]$x), color = \"orangered2\", sides = \"t\") +   # default style   univar_plots_style_global +   # labels   labs(     subtitle = \"Bio 15 (Precipitation Seasonality, CV)\",     x = \"precipitation seasonality (%)\"     ) +   # aesthetics   xlim(0, 120) ggsave(   bio15_univar_global,    filename = file.path(     here::here(), \"vignette-outputs\", \"figures\", \"global_bio15_univar_resp_curve_cloglog.jpg\"     ),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   ) bio2_univar_global <- ggplot() +   geom_smooth(data = global_univar_bio2$data[[1]], aes(x = x, y = y), color = \"orangered2\", se = FALSE, method = \"gam\") +   # plot peak trendline and labels   geom_vline(aes(xintercept = bio2_univar_max_activity_global), color = \"orangered2\", linetype = \"dashed\", linewidth = 0.5) +   # plot rug   geom_rug(aes(x = global_univar_bio2$data[[3]]$x), color = \"orangered2\", sides = \"t\") +   # default style   univar_plots_style_global +   # labels   labs(     subtitle = \"Bio 2 (Mean Diurnal Range)\",     x = \"mean diurnal range (C)\"     ) +   # aesthetics   xlim(0, 15) ggsave(   bio2_univar_global,    filename = file.path(     here::here(), \"vignette-outputs\", \"figures\", \"global_bio2_univar_resp_curve_cloglog.jpg\"     ),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/140_plot_response_curves.html","id":"marginal-response","dir":"Articles","previous_headings":"Combine ensemble and global models","what":"marginal response","title":"Plot response curves","text":"","code":"ensemble_global_colors <- c(   \"Rn (native)\" = \"#4daf4a\",   \"Ri.NAmerica\" =  \"#e41a1c\",   \"Ri.Asia\" = \"#377eb8\",   \"global\" = \"black\" )  marginal_plots_style <- list(   theme_bw(),   # labs   labs(     title = \"Marginal response of 'regional_ensemble' and global models\",     color = \"Model\",     caption = \"rug plots indicate presences\"     ),   ylab(\"cloglog_output\"),   # aes   scale_color_manual(     name = \"model\",     values = ensemble_global_colors,     aesthetics = \"color\"   ),   scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1), limits = c(0, 1)),   theme(legend.position = \"bottom\"),   geom_hline(aes(yintercept = 0), color = \"black\", linewidth = 0.5)  )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/140_plot_response_curves.html","id":"bio-11-2","dir":"Articles","previous_headings":"Combine ensemble and global models","what":"Bio 11","title":"Plot response curves","text":"","code":"bio11_marginal_combined <- ggplot() +   # global model   geom_smooth(data = global_marginal_bio11$data[[1]], aes(x = x, y = y, color = \"global\"), se = FALSE, method = \"gam\") +   # native model data   geom_smooth(data = regional_native_marginal_bio11$data[[1]], aes(x = x, y = y, color = \"Rn (native)\"), se = FALSE, method = \"gam\") +   # invaded model data   geom_smooth(data = regional_invaded_marginal_bio11$data[[1]], aes(x = x, y = y, color = \"Ri.NAmerica\"), se = FALSE, method = \"gam\") +   # Ri.Asia model data   geom_smooth(data = regional_invaded_asian_marginal_bio11$data[[1]], aes(x = x, y = y, color = \"Ri.Asia\"), se = FALSE, method = \"gam\") +   # plot peak trendline and labels   # global   geom_vline(aes(xintercept = bio11_marginal_max_activity_global, color = \"global\"), linetype = \"dashed\", linewidth = 0.5) +   # Rn (native)   geom_vline(aes(xintercept = bio11_max_activity_values[[1]], color = \"Rn (native)\"), linetype = \"dashed\", linewidth = 0.5) +   # invaded   geom_vline(aes(xintercept = bio11_max_activity_values[[2]], color = \"Ri.NAmerica\"), linetype = \"dashed\", linewidth = 0.5) +   # Ri.Asia   geom_vline(aes(xintercept = bio11_max_activity_values[[3]], color = \"Ri.Asia\"), linetype = \"dashed\", linewidth = 0.5) +   # plot rug plots   # global is just all presences so it does not need a rug plot   # Rn (native)   geom_rug(aes(x = regional_native_marginal_bio11$data[[2]]$x, color = \"Rn (native)\"), sides = \"t\") +   # invaded   geom_rug(aes(x = regional_invaded_marginal_bio11$data[[2]]$x, color = \"Ri.NAmerica\"), sides = \"t\", alpha = 0.8) +   # Ri.Asia   geom_rug(aes(x = regional_invaded_asian_marginal_bio11$data[[2]]$x, color = \"Ri.Asia\"), sides = \"t\", alpha = 0.6) +   # default style   marginal_plots_style +   # labels   labs(     subtitle = \"Bio 11 (mean temperature of the coldest quarter)\",     x = \"Bio 11: mean temperature of the coldest quarter (C)\"     ) +   # aesthetics   xlim(-20, 20) ggsave(   bio11_marginal_combined,    filename = file.path(     here::here(), \"vignette-outputs\", \"figures\", \"regional_ensemble_global_bio11_marginal_resp_curve_cloglog.jpg\"     ),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/140_plot_response_curves.html","id":"bio-12-2","dir":"Articles","previous_headings":"Combine ensemble and global models","what":"Bio 12","title":"Plot response curves","text":"","code":"bio12_marginal_combined <- ggplot() +   # global model   geom_smooth(data = global_marginal_bio12$data[[1]], aes(x = x, y = y, color = \"global\"), se = FALSE, method = \"gam\") +   # Rn (native) model data   geom_smooth(data = regional_native_marginal_bio12$data[[1]], aes(x = x, y = y, color = \"Rn (native)\"), se = FALSE, method = \"gam\") +   # invaded model data   geom_smooth(data = regional_invaded_marginal_bio12$data[[1]], aes(x = x, y = y, color = \"Ri.NAmerica\"), se = FALSE, method = \"gam\") +   # Ri.Asia model data   geom_smooth(data = regional_invaded_asian_marginal_bio12$data[[1]], aes(x = x, y = y, color = \"Ri.Asia\"), se = FALSE, method = \"gam\") +   # plot peak trendline and labels   # global   geom_vline(aes(xintercept = bio12_marginal_max_activity_global, color = \"global\"), linetype = \"dashed\", linewidth = 0.5) +   # Rn (native)   geom_vline(aes(xintercept = bio12_max_activity_values[[1]], color = \"Rn (native)\"), linetype = \"dashed\", linewidth = 0.5) +   # invaded   geom_vline(aes(xintercept = bio12_max_activity_values[[2]], color = \"Ri.NAmerica\"), linetype = \"dashed\", linewidth = 0.5) +   # Ri.Asia   geom_vline(aes(xintercept = bio12_max_activity_values[[3]], color = \"Ri.Asia\"), linetype = \"dashed\", linewidth = 0.5) +   # plot rug plots   # Rn (native)   geom_rug(aes(x = regional_native_marginal_bio12$data[[2]]$x, color = \"Rn (native)\"), sides = \"t\") +   # invaded   geom_rug(aes(x = regional_invaded_marginal_bio12$data[[2]]$x, color = \"Ri.NAmerica\"), sides = \"t\", alpha = 0.8) +   # Ri.Asia   geom_rug(aes(x = regional_invaded_asian_marginal_bio12$data[[2]]$x, color = \"Ri.Asia\"), sides = \"t\", alpha = 0.6) +   # default style   marginal_plots_style +   # labels   labs(     subtitle = \"Bio 12 (Annual Precipitation)\",     x = \"Bio 12: annual precipitation (mm)\"     ) +   # aesthetics   xlim(0, 4250) ggsave(   bio12_marginal_combined,    filename = file.path(     here::here(), \"vignette-outputs\", \"figures\", \"regional_ensemble_global_bio12_marginal_resp_curve_cloglog.jpg\"     ),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/140_plot_response_curves.html","id":"bio-15-2","dir":"Articles","previous_headings":"Combine ensemble and global models","what":"Bio 15","title":"Plot response curves","text":"","code":"bio15_marginal_combined <- ggplot() +   # global model   geom_smooth(data = global_marginal_bio15$data[[1]], aes(x = x, y = y, color = \"global\"), se = FALSE, method = \"gam\") +   # Rn (native) model data   geom_smooth(data = regional_native_marginal_bio15$data[[1]], aes(x = x, y = y, color = \"Rn (native)\"), se = FALSE, method = \"gam\") +   # invaded model data   geom_smooth(data = regional_invaded_marginal_bio15$data[[1]], aes(x = x, y = y, color = \"Ri.NAmerica\"), se = FALSE, method = \"gam\") +   # Ri.Asia model data   geom_smooth(data = regional_invaded_asian_marginal_bio15$data[[1]], aes(x = x, y = y, color = \"Ri.Asia\"), se = FALSE, method = \"gam\") +   # plot peak trendline and labels   # global   geom_vline(aes(xintercept = bio15_marginal_max_activity_global, color = \"global\"), linetype = \"dashed\", linewidth = 0.5) +   # Rn (native)   geom_vline(aes(xintercept = bio15_max_activity_values[[1]], color = \"Rn (native)\"), linetype = \"dashed\", linewidth = 0.5) +   # invaded   geom_vline(aes(xintercept = bio15_max_activity_values[[2]], color = \"Ri.NAmerica\"), linetype = \"dashed\", linewidth = 0.5) +   # Ri.Asia   geom_vline(aes(xintercept = bio15_max_activity_values[[3]], color = \"Ri.Asia\"), linetype = \"dashed\", linewidth = 0.5) +   # plot rug plots   # Rn (native)   geom_rug(aes(x = regional_native_marginal_bio15$data[[2]]$x, color = \"Rn (native)\"), sides = \"t\") +   # invaded   geom_rug(aes(x = regional_invaded_marginal_bio15$data[[2]]$x, color = \"Ri.NAmerica\"), sides = \"t\", alpha = 0.8) +   # Ri.Asia   geom_rug(aes(x = regional_invaded_asian_marginal_bio15$data[[2]]$x, color = \"Ri.Asia\"), sides = \"t\", alpha = 0.6) +   # default style   marginal_plots_style +   # labels   labs(     subtitle = \"Bio 15 (Precipitation Seasonality, CV)\",     x = \"Bio 15: precipitation seasonality (%)\"     ) +   # aesthetics   xlim(0, 120) ggsave(   bio15_marginal_combined,    filename = file.path(     here::here(), \"vignette-outputs\", \"figures\", \"regional_ensemble_global_bio15_marginal_resp_curve_cloglog.jpg\"     ),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/140_plot_response_curves.html","id":"bio-2-2","dir":"Articles","previous_headings":"Combine ensemble and global models","what":"Bio 2","title":"Plot response curves","text":"","code":"bio2_marginal_combined <- ggplot() +   # global model   geom_smooth(data = global_marginal_bio2$data[[1]], aes(x = x, y = y, color = \"global\"), se = FALSE, method = \"gam\") +   # Rn (native) model data   geom_smooth(data = regional_native_marginal_bio2$data[[1]], aes(x = x, y = y, color = \"Rn (native)\"), se = FALSE, method = \"gam\") +   # invaded model data   geom_smooth(data = regional_invaded_marginal_bio2$data[[1]], aes(x = x, y = y, color = \"Ri.NAmerica\"), se = FALSE, method = \"gam\") +   # Ri.Asia model data   geom_smooth(data = regional_invaded_asian_marginal_bio2$data[[1]], aes(x = x, y = y, color = \"Ri.Asia\"), se = FALSE, method = \"gam\") +   # plot peak trendline and labels   # global   geom_vline(aes(xintercept = bio2_marginal_max_activity_global, color = \"global\"), linetype = \"dashed\", linewidth = 0.5) +   # Rn (native)   geom_vline(aes(xintercept = bio2_max_activity_values[[1]], color = \"Rn (native)\"), linetype = \"dashed\", linewidth = 0.5) +   # invaded   geom_vline(aes(xintercept = bio2_max_activity_values[[2]], color = \"Ri.NAmerica\"), linetype = \"dashed\", linewidth = 0.5) +   # Ri.Asia   geom_vline(aes(xintercept = bio2_max_activity_values[[3]], color = \"Ri.Asia\"), linetype = \"dashed\", linewidth = 0.5) +   # plot rug plots   # Rn (native)   geom_rug(aes(x = regional_native_marginal_bio2$data[[2]]$x, color = \"Rn (native)\"), sides = \"t\") +   # invaded   geom_rug(aes(x = regional_invaded_marginal_bio2$data[[2]]$x, color = \"Ri.NAmerica\"), sides = \"t\", alpha = 0.8) +   # Ri.Asia   geom_rug(aes(x = regional_invaded_asian_marginal_bio2$data[[2]]$x, color = \"Ri.Asia\"), sides = \"t\", alpha = 0.6) +   # default style   marginal_plots_style +   # labels   labs(     subtitle = \"Bio 2 (Mean Diurnal Range)\",     x = \"Bio 2: mean diurnal range (C)\"     ) +   # aesthetics   xlim(0, 15) ggsave(   bio2_marginal_combined,    filename = file.path(     here::here(), \"vignette-outputs\", \"figures\", \"regional_ensemble_global_bio2_marginal_resp_curve_cloglog.jpg\"     ),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   ) # bio 11 write_rds(   bio11_marginal_combined,   file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"figures-rds\", \"regional_ensemble_global_bio11_marginal_resp_curve_cloglog.rds\") ) # bio 12 write_rds(   bio12_marginal_combined,   file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"figures-rds\", \"regional_ensemble_global_bio12_marginal_resp_curve_cloglog.rds\") ) # bio 15 write_rds(   bio15_marginal_combined,   file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"figures-rds\", \"regional_ensemble_global_bio15_marginal_resp_curve_cloglog.rds\") ) # bio 2 write_rds(   bio2_marginal_combined,   file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"figures-rds\", \"regional_ensemble_global_bio2_marginal_resp_curve_cloglog.rds\") )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/140_plot_response_curves.html","id":"create-univariate-response-curves-1","dir":"Articles","previous_headings":"","what":"create univariate response curves","title":"Plot response curves","text":"","code":"ensemble_colors <- c(   \"Rn (native)\" = \"#4daf4a\",   \"Ri.NAmerica\" =  \"#e41a1c\",   \"Ri.Asia\" = \"#377eb8\",   \"global\" = \"black\" )  univar_plots_style <- list(   theme_bw(),   # labs   labs(     title = \"Univariate response in 'regional_ensemble' and 'global' models\",     color = \"Model\",     caption = \"rug plots indicate presences\"     ),   ylab(\"cloglog_output\"),   # aes   scale_color_manual(     name = \"model\",     values = ensemble_colors,     aesthetics = \"color\"   ),   scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1), limits = c(0, 1)),   theme(legend.position = \"bottom\"),   geom_hline(aes(yintercept = 0), color = \"black\", linewidth = 0.5)  )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/140_plot_response_curves.html","id":"bio-11-3","dir":"Articles","previous_headings":"create univariate response curves","what":"Bio 11","title":"Plot response curves","text":"","code":"bio11_univar_combined <- ggplot() +   # global   geom_smooth(data = global_univar_bio11$data[[1]], aes(x = x, y = y, color = \"global\"), se = FALSE, method = \"gam\") +   # Rn (native) model data   geom_smooth(data = regional_native_univar_bio11$data[[1]], aes(x = x, y = y, color = \"Rn (native)\"), se = FALSE, method = \"gam\") +   # invaded model data   geom_smooth(data = regional_invaded_univar_bio11$data[[1]], aes(x = x, y = y, color = \"Ri.NAmerica\"), se = FALSE, method = \"gam\") +   # Ri.Asia model data   geom_smooth(data = regional_invaded_asian_univar_bio11$data[[1]], aes(x = x, y = y, color = \"Ri.Asia\"), se = FALSE, method = \"gam\") +   # plot peak trendline and labels   # global    geom_vline(aes(xintercept = bio11_univar_max_activity_global, color = \"global\"), linetype = \"dashed\", linewidth = 0.5) +   # Rn (native)   geom_vline(aes(xintercept = bio11_univar_max_activity_values[[1]], color = \"Rn (native)\"), linetype = \"dashed\", linewidth = 0.5) +   # invaded   geom_vline(aes(xintercept = bio11_univar_max_activity_values[[2]], color = \"Ri.NAmerica\"), linetype = \"dashed\", linewidth = 0.5) +   # Ri.Asia   geom_vline(aes(xintercept = bio11_univar_max_activity_values[[3]], color = \"Ri.Asia\"), linetype = \"dashed\", linewidth = 0.5) +   # plot rug plots   # Rn (native)   geom_rug(aes(x = regional_native_univar_bio11$data[[2]]$x, color = \"Rn (native)\"), sides = \"t\") +   # invaded   geom_rug(aes(x = regional_invaded_univar_bio11$data[[2]]$x, color = \"Ri.NAmerica\"), sides = \"t\", alpha = 0.8) +   # Ri.Asia   geom_rug(aes(x = regional_invaded_asian_univar_bio11$data[[2]]$x, color = \"Ri.Asia\"), sides = \"t\", alpha = 0.6) +   # default style   univar_plots_style +   # labels   labs(     subtitle = \"Bio 11 (mean temperature of the coldest quarter)\",     x = \"Bio 11: mean temperature of the coldest quarter (C)\"     ) +   # aesthetics   xlim(-20, 20) ggsave(   bio11_univar_combined,    filename = file.path(     here::here(), \"vignette-outputs\", \"figures\", \"regional_ensemble_global_bio11_univar_resp_curve_cloglog.jpg\"     ),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/140_plot_response_curves.html","id":"bio-12-3","dir":"Articles","previous_headings":"create univariate response curves","what":"Bio 12","title":"Plot response curves","text":"","code":"bio12_univar_combined <- ggplot() +   # global   geom_smooth(data = global_univar_bio12$data[[1]], aes(x = x, y = y, color = \"global\"), se = FALSE, method = \"gam\") +   # Rn (native) model data   geom_smooth(data = regional_native_univar_bio12$data[[1]], aes(x = x, y = y, color = \"Rn (native)\"), se = FALSE, method = \"gam\") +   # invaded model data   geom_smooth(data = regional_invaded_univar_bio12$data[[1]], aes(x = x, y = y, color = \"Ri.NAmerica\"), se = FALSE, method = \"gam\") +   # Ri.Asia model data   geom_smooth(data = regional_invaded_asian_univar_bio12$data[[1]], aes(x = x, y = y, color = \"Ri.Asia\"), se = FALSE, method = \"gam\") +   # plot peak trendline and labels   # global   geom_vline(aes(xintercept = bio12_univar_max_activity_global, color = \"global\"), linetype = \"dashed\", linewidth = 0.5) +   # Rn (native)   geom_vline(aes(xintercept = bio12_univar_max_activity_values[[1]], color = \"Rn (native)\"), linetype = \"dashed\", linewidth = 0.5) +   # invaded   geom_vline(aes(xintercept = bio12_univar_max_activity_values[[2]], color = \"Ri.NAmerica\"), linetype = \"dashed\", linewidth = 0.5) +   # Ri.Asia   geom_vline(aes(xintercept = bio12_univar_max_activity_values[[3]], color = \"Ri.Asia\"), linetype = \"dashed\", linewidth = 0.5) +   # plot rug plots   # Rn (native)   geom_rug(aes(x = regional_native_univar_bio12$data[[2]]$x, color = \"Rn (native)\"), sides = \"t\") +   # invaded   geom_rug(aes(x = regional_invaded_univar_bio12$data[[2]]$x, color = \"Ri.NAmerica\"), sides = \"t\", alpha = 0.8) +   # Ri.Asia   geom_rug(aes(x = regional_invaded_asian_univar_bio12$data[[2]]$x, color = \"Ri.Asia\"), sides = \"t\", alpha = 0.6) +   # default style   univar_plots_style +   # labels   labs(     subtitle = \"Bio 12 (Annual Precipitation)\",     x = \"Bio 12: annual precipitation (mm)\"     ) +   # aesthetics   xlim(0, 4250) ggsave(   bio12_univar_combined,    filename = file.path(     here::here(), \"vignette-outputs\", \"figures\", \"regional_ensemble_global_bio12_univar_resp_curve_cloglog.jpg\"     ),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/140_plot_response_curves.html","id":"bio-15-3","dir":"Articles","previous_headings":"create univariate response curves","what":"Bio 15","title":"Plot response curves","text":"","code":"bio15_univar_combined <- ggplot() +   # global   geom_smooth(data = global_univar_bio15$data[[1]], aes(x = x, y = y, color = \"global\"), se = FALSE, method = \"gam\") +   # native model data   geom_smooth(data = regional_native_univar_bio15$data[[1]], aes(x = x, y = y, color = \"Rn (native)\"), se = FALSE, method = \"gam\") +   # invaded model data   geom_smooth(data = regional_invaded_univar_bio15$data[[1]], aes(x = x, y = y, color = \"Ri.NAmerica\"), se = FALSE, method = \"gam\") +   # Ri.Asia model data   geom_smooth(data = regional_invaded_asian_univar_bio15$data[[1]], aes(x = x, y = y, color = \"Ri.Asia\"), se = FALSE, method = \"gam\") +   # plot peak trendline and labels   # global   geom_vline(aes(xintercept = bio15_univar_max_activity_global, color = \"global\"), linetype = \"dashed\", linewidth = 0.5) +   # Rn (native)   geom_vline(aes(xintercept = bio15_univar_max_activity_values[[1]], color = \"Rn (native)\"), linetype = \"dashed\", linewidth = 0.5) +   # invaded   geom_vline(aes(xintercept = bio15_univar_max_activity_values[[2]], color = \"Ri.NAmerica\"), linetype = \"dashed\", linewidth = 0.5) +   # Ri.Asia   geom_vline(aes(xintercept = bio15_univar_max_activity_values[[3]], color = \"Ri.Asia\"), linetype = \"dashed\", linewidth = 0.5) +   # plot rug plots   # Rn (native)   geom_rug(aes(x = regional_native_univar_bio15$data[[2]]$x, color = \"Rn (native)\"), sides = \"t\") +   # invaded   geom_rug(aes(x = regional_invaded_univar_bio15$data[[2]]$x, color = \"Ri.NAmerica\"), sides = \"t\", alpha = 0.8) +   # Ri.Asia   geom_rug(aes(x = regional_invaded_asian_univar_bio15$data[[2]]$x, color = \"Ri.Asia\"), sides = \"t\", alpha = 0.6) +   # default style   univar_plots_style +   # labels   labs(     subtitle = \"Bio 15 (Precipitation Seasonality, CV)\",     x = \"Bio 15: precipitation seasonality (%)\"     ) +   # aesthetics   xlim(0, 120) ggsave(   bio15_univar_combined,    filename = file.path(     here::here(), \"vignette-outputs\", \"figures\", \"regional_ensemble_global_bio15_univar_resp_curve_cloglog.jpg\"     ),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/140_plot_response_curves.html","id":"bio-2-3","dir":"Articles","previous_headings":"create univariate response curves","what":"Bio 2","title":"Plot response curves","text":"","code":"bio2_univar_combined <- ggplot() +   # global   geom_smooth(data = global_univar_bio2$data[[1]], aes(x = x, y = y, color = \"global\"), se = FALSE, method = \"gam\") +   # Rn (native) model data   geom_smooth(data = regional_native_univar_bio2$data[[1]], aes(x = x, y = y, color = \"Rn (native)\"), se = FALSE, method = \"gam\") +   # invaded model data   geom_smooth(data = regional_invaded_univar_bio2$data[[1]], aes(x = x, y = y, color = \"Ri.NAmerica\"), se = FALSE, method = \"gam\") +   # Ri.Asia model data   geom_smooth(data = regional_invaded_asian_univar_bio2$data[[1]], aes(x = x, y = y, color = \"Ri.Asia\"), se = FALSE, method = \"gam\") +   # plot peak trendline and labels   # global   geom_vline(aes(xintercept = bio15_univar_max_activity_global, color = \"global\"), linetype = \"dashed\", linewidth = 0.5) +   # Rn (native)   geom_vline(aes(xintercept = bio2_univar_max_activity_values[[1]], color = \"Rn (native)\"), linetype = \"dashed\", linewidth = 0.5) +   # invaded   geom_vline(aes(xintercept = bio2_univar_max_activity_values[[2]], color = \"Ri.NAmerica\"), linetype = \"dashed\", linewidth = 0.5) +   # Ri.Asia   geom_vline(aes(xintercept = bio2_univar_max_activity_values[[3]], color = \"Ri.Asia\"), linetype = \"dashed\", linewidth = 0.5) +   # plot rug plots   # Rn (native)   geom_rug(aes(x = regional_native_univar_bio2$data[[2]]$x, color = \"Rn (native)\"), sides = \"t\") +   # invaded   geom_rug(aes(x = regional_invaded_univar_bio2$data[[2]]$x, color = \"Ri.NAmerica\"), sides = \"t\", alpha = 0.8) +   # Ri.Asia   geom_rug(aes(x = regional_invaded_asian_univar_bio2$data[[2]]$x, color = \"Ri.Asia\"), sides = \"t\", alpha = 0.6) +   # default style   univar_plots_style +   # labels   labs(     subtitle = \"Bio 2 (Mean Diurnal Range)\",     x = \"Bio 2: mean diurnal range (C)\"     ) +   # aesthetics   xlim(0, 15) ggsave(   bio2_univar_combined,    filename = file.path(     here::here(), \"vignette-outputs\", \"figures\", \"regional_ensemble_global_bio2_univar_resp_curve_cloglog.jpg\"     ),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   ) # bio 11 write_rds(   bio11_univar_combined,   file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"figures-rds\", \"regional_ensemble_global_bio11_univar_resp_curve_cloglog.rds\") ) # bio 12 write_rds(   bio12_univar_combined,   file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"figures-rds\", \"regional_ensemble_global_bio12_univar_resp_curve_cloglog.rds\") ) # bio 15 write_rds(   bio15_univar_combined,   file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"figures-rds\", \"regional_ensemble_global_bio15_univar_resp_curve_cloglog.rds\") ) # bio 2 write_rds(   bio2_univar_combined,   file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"figures-rds\", \"regional_ensemble_global_bio2_univar_resp_curve_cloglog.rds\") )"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/140_plot_response_curves.html","id":"univariate-response-curves","dir":"Articles","previous_headings":"Patchwork together plots","what":"univariate response curves","title":"Plot response curves","text":"","code":"# bio 11 bio11_univar_combined <- read_rds(file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"figures-rds\", \"regional_ensemble_global_bio11_univar_resp_curve_cloglog.rds\") ) # bio 12 bio12_univar_combined <- read_rds(file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"figures-rds\", \"regional_ensemble_global_bio12_univar_resp_curve_cloglog.rds\") ) # bio 15 bio15_univar_combined <- read_rds(file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"figures-rds\", \"regional_ensemble_global_bio15_univar_resp_curve_cloglog.rds\") ) # bio 2 bio2_univar_combined <- read_rds(file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"figures-rds\", \"regional_ensemble_global_bio2_univar_resp_curve_cloglog.rds\") ) bio2_univar_combined  <- bio2_univar_combined +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.9),     plot.tag = element_text(face = \"bold\", size = 25)     ) +   labs(tag = \"A\")     bio11_univar_combined <- bio11_univar_combined +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.9),     plot.tag = element_text(face = \"bold\", size = 25)     ) +   labs(tag = \"B\")     bio12_univar_combined <- bio12_univar_combined +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.9),     plot.tag = element_text(face = \"bold\", size = 25)     ) +   labs(tag = \"C\")       bio15_univar_combined <- bio15_univar_combined +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.9),     plot.tag = element_text(face = \"bold\", size = 25)     ) +   labs(tag = \"D\")      univar_combined_patchwork <- (bio2_univar_combined + bio11_univar_combined + bio12_univar_combined + bio15_univar_combined) +   plot_annotation(title = \"Univariate response of 'regional_ensemble' and 'global' models\") +   plot_layout(axes = \"collect_y\", axis_titles = \"collect_y\", guides = \"collect\") & # collect y axis and legends   theme(legend.position = \"bottom\") ggsave(   univar_combined_patchwork,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"regional_ensemble_global_combined_univar_resp_curve_cloglog.jpg\"),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   ) univar_combined_patchwork_pt1 <- (bio2_univar_combined + bio11_univar_combined) +   plot_annotation(title = \"Univariate response of 'regional_ensemble' and 'global' models\") +   plot_layout(axes = \"collect_y\", axis_titles = \"collect_y\", guides = \"collect\", nrow = 2) & # collect y axis and legends   theme(legend.position = \"bottom\")   # save ggsave(   univar_combined_patchwork_pt1,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"regional_ensemble_global_combined_univar_resp_curve_cloglog_half1.jpg\"),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   ) univar_combined_patchwork_pt2 <- (bio12_univar_combined + bio15_univar_combined) +   plot_annotation(title = \"Univariate response of 'regional_ensemble' and 'global' models\") +   plot_layout(axes = \"collect_y\", axis_titles = \"collect_y\", guides = \"collect\", nrow = 2) & # collect y axis and legends   theme(legend.position = \"bottom\")   # save ggsave(   univar_combined_patchwork_pt2,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"regional_ensemble_global_combined_univar_resp_curve_cloglog_half2.jpg\"),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   ) bio11_univar_combined <- bio11_univar_combined +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     ) +   labs(tag = \"A\")     bio15_univar_combined  <- bio15_univar_combined +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     ) +   labs(tag = \"B\")       univar_combined_patchwork_main <- (bio11_univar_combined / bio15_univar_combined) +   plot_annotation(title = \"Univariate response of 'regional_ensemble' and 'global' models\") +   plot_layout(axes = \"collect_y\", axis_titles = \"collect_y\", guides = \"collect\") & # collect y axis and legends   theme(legend.position = \"bottom\") ggsave(   univar_combined_patchwork_main,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"regional_ensemble_global_combined_univar_resp_curve_cloglog_main.jpg\"),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   ) bio12_univar_combined <- bio12_univar_combined +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     ) +   labs(tag = \"A\")     bio2_univar_combined  <- bio2_univar_combined +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     ) +   labs(tag = \"B\")      univar_combined_patchwork_supp <- (bio12_univar_combined / bio2_univar_combined) +   plot_annotation(title = \"Univariate response of 'regional_ensemble' and 'global' models\") +   plot_layout(axes = \"collect_y\", axis_titles = \"collect_y\", guides = \"collect\") & # collect y axis and legends   theme(legend.position = \"bottom\") ggsave(   univar_combined_patchwork_supp,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"regional_ensemble_global_combined_univar_resp_curve_cloglog_supp.jpg\"),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/140_plot_response_curves.html","id":"marginal","dir":"Articles","previous_headings":"Patchwork together plots","what":"marginal","title":"Plot response curves","text":"","code":"# bio 11 bio11_marginal_combined <- read_rds(file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"figures-rds\", \"regional_ensemble_global_bio11_marginal_resp_curve_cloglog.rds\") ) # bio 12 bio12_marginal_combined <- read_rds(file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"figures-rds\", \"regional_ensemble_global_bio12_marginal_resp_curve_cloglog.rds\") ) # bio 15 bio15_marginal_combined <- read_rds(file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"figures-rds\", \"regional_ensemble_global_bio15_marginal_resp_curve_cloglog.rds\") ) # bio 2 bio2_marginal_combined <- read_rds(file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"figures-rds\", \"regional_ensemble_global_bio2_marginal_resp_curve_cloglog.rds\") ) bio11_marginal_combined <- bio11_marginal_combined +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.9),     plot.tag = element_text(face = \"bold\")     ) +   labs(tag = \"A\")     bio12_marginal_combined <- bio12_marginal_combined +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.9),     plot.tag = element_text(face = \"bold\")     ) +   labs(tag = \"B\")       bio15_marginal_combined <- bio15_marginal_combined +    theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.9),     plot.tag = element_text(face = \"bold\")     ) +   labs(tag = \"C\")    bio2_marginal_combined  <- bio2_marginal_combined +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     plot.tag.location = \"panel\",     plot.tag.position = c(0.05, 0.9),     plot.tag = element_text(face = \"bold\")     ) +   labs(tag = \"D\")      marginal_combined_patchwork <- (bio11_marginal_combined + bio12_marginal_combined + bio15_marginal_combined + bio2_marginal_combined) +   plot_annotation(title = \"Marginal response of 'regional_ensemble' and 'global' models\") +   plot_layout(axes = \"collect_y\", axis_titles = \"collect_y\", guides = \"collect\") & # collect y axis and legends   theme(legend.position = \"bottom\") ggsave(   marginal_combined_patchwork,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"regional_ensemble_global_combined_marginal_resp_curve_cloglog.jpg\"),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/140_plot_response_curves.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Plot response curves","text":"Elith, J., Kearney, M., & Phillips, S. (2010). art modelling range-shifting species. Methods Ecology Evolution, 1(4), 330–342. https://doi.org/10.1111/j.2041-210X.2010.00036.x","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/141_plot_AUC_var_cont.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Plot AUC curves and variable contribution graphs","text":"plots depict activity variables put MaxEnt models. create combined figure 3 models regional_ensemble","code":"# general tools library(tidyverse)  #data manipulation library(here) #making directory pathways easier on different instances here::here() # here::here() starts at the root folder of this package. ## [1] \"C:/Users/tun83449/Documents/GitHub/slfSpread\" library(devtools)  # SDMtune and dependencies library(SDMtune) # main package used to run SDMs library(dismo) # package underneath SDMtune library(rJava) # for running MaxEnt library(plotROC) # plots ROCs mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/models\") ensemble_colors <- c(   \"Rn (native)\" = \"#4daf4a\",   \"Ri.NAmerica\" =  \"#e41a1c\",   \"Ri.Asia\" = \"#377eb8\" ) regional_native_model <- read_rds(file = file.path(mypath, \"slf_regional_native_v3\", \"regional_native_model.rds\"))  regional_invaded_model <- read_rds(file = file.path(mypath, \"slf_regional_invaded_v7\", \"regional_invaded_model.rds\"))  regional_invaded_asian_model <- read_rds(file = file.path(mypath, \"slf_regional_invaded_asian_v2\", \"regional_invaded_asian_model.rds\")) regional_native_test <- read_rds(file = file.path(mypath, \"slf_regional_native_v3\", \"regional_native_test.rds\"))  regional_invaded_test <- read_rds(file = file.path(mypath, \"slf_regional_invaded_v7\", \"regional_invaded_test.rds\"))  regional_invaded_asian_test <- read_rds(file = file.path(mypath, \"slf_regional_invaded_asian_v2\", \"regional_invaded_asian_test.rds\"))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/141_plot_AUC_var_cont.html","id":"roc-regional-ensemble","dir":"Articles","previous_headings":"","what":"ROC regional ensemble","title":"Plot AUC curves and variable contribution graphs","text":"","code":"regional_native_ROC <- SDMtune::plotROC(   model = regional_native_model,   test = regional_native_test ) %>%   ggplot_build()   regional_invaded_ROC <- SDMtune::plotROC(   model = regional_invaded_model,   test = regional_invaded_test ) %>%   ggplot_build()  regional_invaded_asian_ROC <- SDMtune::plotROC(   model = regional_invaded_asian_model,   test = regional_invaded_asian_test ) %>%   ggplot_build() ROC_ensemble <- ggplot() +   # native model data   geom_line(data = regional_native_ROC$data[[1]], aes(x = x, y = y, color = \"Rn (native)\", group = group, linetype = as.factor(group)), linewidth = 0.8) +   # invaded model data   geom_line(data = regional_invaded_ROC$data[[1]], aes(x = x, y = y, color = \"Ri.NAmerica\", group = group, linetype = as.factor(group)), linewidth = 0.8) +   # invaded_asian model data   geom_line(data = regional_invaded_asian_ROC$data[[1]], aes(x = x, y = y, color = \"Ri.Asia\", group = group, linetype = as.factor(group)), linewidth = 0.8) +   # midpoint line   geom_abline(slope = 1, linetype = \"dashed\") +   # scales   scale_x_continuous(name = \"False positive rate (1 - specificity)\", breaks = c(0, 0.25, 0.5, 0.75, 1), limits = c(0, 1)) +   scale_y_continuous(name = \"True positive rate (sensitivity)\", breaks = c(0, 0.25, 0.5, 0.75, 1), limits = c(0, 1)) +   labs(     title = \"ROC curve (true vs false positive rate) for 'regional_ensemble' models\"     ) +   theme_bw() +   # aes   scale_color_manual(     name = \"model\",     values = ensemble_colors,     aesthetics = \"color\"   ) +   scale_linetype_manual(     name = \"Data segment\",     values = c(\"solid\", \"dotted\"),     labels = c(\"Test\", \"Train\"),     guide = guide_legend(reverse = TRUE)   ) +   theme(legend.position = \"bottom\") +   coord_fixed(ratio = 1) ggsave(   ROC_ensemble,    filename = file.path(     here::here(), \"vignette-outputs\", \"figures\", \"ROC_plot_regional_ensemble.jpg\"     ),   height = 8,    width = 8,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/141_plot_AUC_var_cont.html","id":"variable-importance","dir":"Articles","previous_headings":"","what":"Variable importance","title":"Plot AUC curves and variable contribution graphs","text":"","code":"regional_native_var_imp <- read.csv(file = file.path(mypath, \"slf_regional_native_v3\", \"regional_native_variable_importance.csv\"))  regional_invaded_var_imp <- read.csv(file = file.path(mypath, \"slf_regional_invaded_v7\", \"regional_invaded_variable_importance.csv\"))  regional_invaded_asian_var_imp <- read.csv(file = file.path(mypath, \"slf_regional_invaded_asian_v2\", \"regional_invaded_asian_variable_importance.csv\")) regional_native_var_imp_plot <- SDMtune::plotVarImp(   df = regional_native_var_imp ) %>%   ggplot_build()  # change groups regional_native_var_imp_plot[[\"data\"]][[1]][[\"x\"]] <- c(1, 4, 2, 3)    regional_invaded_var_imp_plot <- SDMtune::plotVarImp(   df = regional_invaded_var_imp ) %>%   ggplot_build()  # change groups regional_invaded_var_imp_plot[[\"data\"]][[1]][[\"x\"]] <- c(1, 2, 3, 4)    regional_invaded_asian_var_imp_plot <- SDMtune::plotVarImp(   df = regional_invaded_asian_var_imp ) %>%   ggplot_build()  # change groups regional_invaded_asian_var_imp_plot[[\"data\"]][[1]][[\"x\"]] <- c(1, 2, 4, 3) var_imp_ensemble <- ggplot() +   # native model data   geom_col(data = regional_native_var_imp_plot$data[[1]], aes(x = x + 0.2, y = y, fill = \"Rn (native)\"), color = \"black\", width = 0.2) +   # invaded model data   geom_col(data = regional_invaded_var_imp_plot$data[[1]], aes(x = x, y = y, fill = \"Ri.NAmerica\"), color = \"black\", width = 0.2) +   # invaded_asian model data   geom_col(data = regional_invaded_asian_var_imp_plot$data[[1]], aes(x = x - 0.2, y = y, fill = \"Ri.Asia\"), color = \"black\", width = 0.2) +   labs(     title = \"Variable Importance for 'regional_ensemble' models\",     x = \"\",     y = \"Permutation importance\"     ) +   scale_x_continuous(     breaks = c(1, 2, 3, 4),     labels = c(\"bio 2\", \"bio 12\", \"bio 11\", \"bio 15\")   ) +   scale_y_continuous(labels = scales::percent) +     # aes   theme_bw() +   scale_fill_manual(     name = \"model\",     values = ensemble_colors,     aesthetics = \"fill\"   ) +   theme(legend.position = \"bottom\") +   coord_flip() ggsave(   var_imp_ensemble,    filename = file.path(     here::here(), \"vignette-outputs\", \"figures\", \"Variable_importance_regional_ensemble.jpg\"     ),   height = 8,    width = 8,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/141_plot_AUC_var_cont.html","id":"roc","dir":"Articles","previous_headings":"Add global model to AUC and var imp plots","what":"ROC","title":"Plot AUC curves and variable contribution graphs","text":"","code":"global_model <- read_rds(file = file.path(mypath, \"slf_global_v3\", \"global_model.rds\")) global_test <- read_rds(file = file.path(mypath, \"slf_global_v3\", \"global_test.rds\"))  ensemble_colors <- c(   \"Rn (native)\" = \"#4daf4a\",   \"Ri.NAmerica\" =  \"#e41a1c\",   \"Ri.Asia\" = \"#377eb8\",   \"global\" = \"black\" ) global_ROC <- SDMtune::plotROC(   model = global_model@models[[5]], #pick one because they did not vary too much   test = global_test ) %>%   ggplot_build() ROC_ensemble_global <- ggplot() +   # global   geom_line(data = global_ROC$data[[1]], aes(x = x, y = y, color = \"global\", group = group, linetype = as.factor(group)), linewidth = 0.8) +   # native model data   geom_line(data = regional_native_ROC$data[[1]], aes(x = x, y = y, color = \"Rn (native)\", group = group, linetype = as.factor(group)), linewidth = 0.8) +   # invaded model data   geom_line(data = regional_invaded_ROC$data[[1]], aes(x = x, y = y, color = \"Ri.NAmerica\", group = group, linetype = as.factor(group)), linewidth = 0.8) +   # invaded_asian model data   geom_line(data = regional_invaded_asian_ROC$data[[1]], aes(x = x, y = y, color = \"Ri.Asia\", group = group, linetype = as.factor(group)), linewidth = 0.8) +   # midpoint line   geom_abline(slope = 1, linetype = \"dashed\") +   # scales   scale_x_continuous(name = \"False positive rate (1 - specificity)\", breaks = c(0, 0.25, 0.5, 0.75, 1), limits = c(0, 1)) +   scale_y_continuous(name = \"True positive rate (sensitivity)\", breaks = c(0, 0.25, 0.5, 0.75, 1), limits = c(0, 1)) +   labs(     title = \"ROC curve (true vs false positive rate) for 'regional_ensemble' and 'global' models\"     ) +   theme_bw() +   # aes   scale_color_manual(     name = \"model\",     values = ensemble_colors,     aesthetics = \"color\"   ) +   scale_linetype_manual(     name = \"Data segment\",     values = c(\"solid\", \"dotted\"),     labels = c(\"Test\", \"Train\"),     guide = guide_legend(reverse = TRUE)   ) +   theme(legend.position = \"bottom\") +   coord_fixed(ratio = 1) ggsave(   ROC_ensemble_global,    filename = file.path(     here::here(), \"vignette-outputs\", \"figures\", \"ROC_plot_regional_ensemble_global.jpg\"     ),   height = 8,    width = 8,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/141_plot_AUC_var_cont.html","id":"var-imp-plots","dir":"Articles","previous_headings":"Add global model to AUC and var imp plots","what":"var imp plots","title":"Plot AUC curves and variable contribution graphs","text":"","code":"global_var_imp <- read.csv(file = file.path(mypath, \"slf_global_v3\", \"global_variable_importance.csv\")) global_var_imp_plot <- SDMtune::plotVarImp(   df = global_var_imp ) %>%   ggplot_build() var_imp_ensemble <- ggplot() +   # native model data   geom_col(data = global_var_imp_plot$data[[1]], aes(x = x - 0.4, y = y, fill = \"global\"), color = \"black\", width = 0.2) +   # native model data   geom_col(data = regional_native_var_imp_plot$data[[1]], aes(x = x - 0.2, y = y, fill = \"Rn (native)\"), color = \"black\", width = 0.2) +   # invaded model data   geom_col(data = regional_invaded_var_imp_plot$data[[1]], aes(x = x, y = y, fill = \"Ri.NAmerica\"), color = \"black\", width = 0.2) +   # invaded_asian model data   geom_col(data = regional_invaded_asian_var_imp_plot$data[[1]], aes(x = x + 0.2, y = y, fill = \"Ri.Asia\"), color = \"black\", width = 0.2) +   labs(     title = \"Variable Importance for 'regional_ensemble' and 'global' models\",     x = \"\",     y = \"Permutation importance\"     ) +   scale_x_continuous(     breaks = c(1, 2, 3, 4),     labels = c(\"bio 2\", \"bio 12\", \"bio 11\", \"bio 15\")   ) +   scale_y_continuous(labels = scales::percent) +     # aes   theme_bw() +   scale_fill_manual(     name = \"model\",     values = ensemble_colors,     aesthetics = \"fill\"   ) +   theme(legend.position = \"bottom\") +   coord_flip() ggsave(   var_imp_ensemble,    filename = file.path(     here::here(), \"vignette-outputs\", \"figures\", \"Variable_importance_regional_ensemble_global.jpg\"     ),   height = 8,    width = 8,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/142_calculate_model_fit.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Calculate model fit statistics","text":"","code":"# general tools library(tidyverse)  #data manipulation library(here) #making directory pathways easier on different instances here::here() # here() starts at the root folder of this package. ## [1] \"C:/Users/tun83449/Documents/GitHub/slfSpread\" library(devtools)  # SDMtune and dependencies library(SDMtune) # main package used to run SDMs library(dismo) # package underneath SDMtune library(rJava) # for running MaxEnt library(plotROC) # plots ROCs  # html tools library(kableExtra) library(webshot) library(webshot2) mypath <- file.path(here::here() %>%                         dirname(),                      \"maxent/models\")"},{"path":"https://ieco-lab.github.io/slfSpread/articles/142_calculate_model_fit.html","id":"sensitivity-and-specificity-of-models","dir":"Articles","previous_headings":"","what":"Sensitivity and Specificity of Models","title":"Calculate model fit statistics","text":"calculate according cloglog MTSS threshold per model also write kable can printed","code":"# global global_conf_matr <- read_csv(file = file.path(mypath, \"slf_global_v3\", \"global_thresh_confusion_matrix_all_iterations.csv\")) %>%   # only MTSS threshold   slice(7) ## Rows: 9 Columns: 6 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr (1): threshold_type ## dbl (5): threshold_value, tp_mean, fp_mean, fn_mean, tn_mean ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. # regional models # native regional_native_conf_matr <- read_csv(file = file.path(mypath, \"slf_regional_native_v3\", \"regional_native_thresh_confusion_matrix.csv\")) %>%   slice(7) ## Rows: 9 Columns: 6 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr (1): threshold_type ## dbl (5): threshold_value, tp, fp, fn, tn ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. # invaded_asia regional_invaded_asian_conf_matr <- read_csv(file = file.path(mypath, \"slf_regional_invaded_asian_v2\", \"regional_invaded_asian_thresh_confusion_matrix.csv\")) %>%   slice(7) ## Rows: 9 Columns: 6 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr (1): threshold_type ## dbl (5): threshold_value, tp, fp, fn, tn ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. # invaded_NAmerica regional_invaded_conf_matr <- read_csv(file = file.path(mypath, \"slf_regional_invaded_v7\", \"regional_invaded_thresh_confusion_matrix.csv\")) %>%   slice(7) ## Rows: 9 Columns: 6 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr (1): threshold_type ## dbl (5): threshold_value, tp, fp, fn, tn ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. model_sens_spec <- tibble(   metric = rep(c(\"sensitivity\", \"specificity\", \"commission error\", \"omission error\"), 4),   description = rep(c(\"true_positive rate\", \"true_negative rate\", \"1 - true_negative rate\", \"false_negative rate\"), 4),   thresh = \"MTSS.cloglog\",   thresh_value = c(     rep(global_conf_matr$threshold_value, 4),      rep(regional_native_conf_matr$threshold_value, 4),      rep(regional_invaded_conf_matr$threshold_value, 4),     rep(regional_invaded_asian_conf_matr$threshold_value, 4)     ),   model = c(     rep(\"global\", 4),     rep(\"regional\\nnative\", 4),     rep(\"regional\\ninvaded NAmerica\", 4),     rep(\"regional\\ninvaded Asia\", 4)   ),   test_pos = c(     rep(155, 4), # global     rep(328, 4),  # native     rep(241, 4), # invaded_NAmerica     rep(328, 4) # invaded_Asia   ),   bg_neg = c(     rep(20000, 4), # global     rep(10000, 12) # regional   ),   value = c(     # global     round(global_conf_matr$tp_mean / 155, 4), round(global_conf_matr$tn_mean / 20000, 4), round(1 - (global_conf_matr$tn_mean / 20000), 4), round((global_conf_matr$fn_mean / 20000), 4),     # native     round(regional_native_conf_matr$tp / 328, 4), round(regional_native_conf_matr$tn / 10000, 4), round(1 - (regional_native_conf_matr$tn / 10000), 4), round((regional_native_conf_matr$fn / 10000), 4),     # invaded_NAmerica     round(regional_invaded_conf_matr$tp / 241, 4), round(regional_invaded_conf_matr$tn / 10000, 4), round(1 - (regional_invaded_conf_matr$tn / 10000), 4), round((regional_invaded_conf_matr$fn / 10000), 4),     # invaded_asia     round(regional_invaded_asian_conf_matr$tp / 328, 4), round(regional_invaded_asian_conf_matr$tn / 10000, 4), round(1 - (regional_invaded_asian_conf_matr$tn / 10000), 4), round((regional_invaded_asian_conf_matr$fn / 10000), 4)   ) ) write_csv(model_sens_spec, file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"model_sensitivity_specificity.csv\")) # add column formatting model_sens_spec <- mutate(model_sens_spec, bg_neg = scales::label_comma() (bg_neg))  # convert to kable model_sens_spec_kable <- knitr::kable(x = model_sens_spec, format = \"html\", escape = FALSE) %>%   kableExtra::kable_styling(bootstrap_options = \"striped\", full_width = TRUE)  # save as .html kableExtra::save_kable(   model_sens_spec_kable,    file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"model_sensitivity_specificity.html\"),   self_contained = TRUE,   bs_theme = \"simplex\"   )  # initialize webshot by  # webshot::install_phantomjs() # convert to pdf webshot::webshot(   url = file.path(here::here(), \"vignette-outputs\", \"figures\", \"model_sensitivity_specificity.html\"),   file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"model_sensitivity_specificity.jpg\"),   zoom = 2 )  # model extents"},{"path":"https://ieco-lab.github.io/slfSpread/articles/142_calculate_model_fit.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Calculate model fit statistics","text":"Jiménez‐Valverde, . (2012). Insights area receiver operating characteristic curve (AUC) discrimination measure species distribution modelling. Global Ecology Biogeography, 21(4), 498–507. https://doi.org/10.1111/j.1466-8238.2011.00683.x Zou, K. H., O’Malley, . J., & Mauri, L. (2007). Receiver-Operating Characteristic Analysis Evaluating Diagnostic Tests Predictive Models. Circulation, 115(5), 654–657. https://doi.org/10.1161/CIRCULATIONAHA.105.594929","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/150_create_risk_report.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Example usage of create_risk_report.R to create reports of key viticultural areas","text":"last vignettes, created various outputs help analyze risk SLF establishment global viticultural regions. created risk maps tables, range shift maps tables, risk quadrant maps viticultural regions SLF populations, calculated various summary statistics omission commission error, area curve, optimal suitability threshold model. vignette, use function create_risk_report() refine outputs (excluding summary statistics, area model-specific) countries provinces key importance global viticulture. outputs crop maps viticultural region risk assessments region interest. begin creating report country input wineries_tidied dataset. also create reports key areas viticulture expected expand decline climate change. vignette also outline best practice usage function create_risk_report().","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/150_create_risk_report.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Example usage of create_risk_report.R to create reports of key viticultural areas","text":"Note: setting global options document certain code chunks rendered final .html file. set eval = FALSE none code re-run (preventing files overwritten knitting) simply overwrite chunks plots.","code":"# general tools library(tidyverse) library(cli) library(here) library(common)  # spatial data library(terra) library(sf) library(rnaturalearth) # remotes::install_github(\"ropensci/rnaturalearthhires\") library(rnaturalearthhires)  # aesthetics library(kableExtra) library(formattable) library(webshot) library(webshot2) # devtools::install_github(\"eliocamp/ggnewscale\", version = \"0.4.10\") library(ggnewscale) ## MUST use version 0.4.10- 0.5.0 has a bug that breaks this function   # for analysis library(patchwork) #install.packages(\"gginnards\") library(gginnards)"},{"path":"https://ieco-lab.github.io/slfSpread/articles/150_create_risk_report.html","id":"create-internal-dataset-for-function","dir":"Articles","previous_headings":"","what":"Create internal dataset for function","title":"Example usage of create_risk_report.R to create reports of key viticultural areas","text":"start creating internal dataset used function. datasets created previous vignettes stored data data-raw folders package. import datasets save internal datasets function use.","code":"# .csv files threshold_exponential_values <- read.csv(file = file.path(here::here(), \"data-raw\", \"threshold_exponential_values.csv\")) # .rds files IVR_locations <- readr::read_rds(file = file.path(here::here(), \"data\", \"wineries_tidied.rds\")) summary_global <- readr::read_rds(file = file.path(here::here(), \"data\", \"global_threshold_values.rds\")) summary_regional_ensemble <- readr::read_rds(file = file.path(here::here(), \"data\", \"ensemble_threshold_values.rds\")) # predicted xy suitability xy_global_1995 <- readr::read_rds(file = file.path(here::here(), \"data\", \"global_wineries_1981-2010_xy_pred_suit.rds\")) xy_global_2055 <- readr::read_rds(file = file.path(here::here(), \"data\", \"global_wineries_2041-2070_GFDL_ssp_mean_xy_pred_suit.rds\")) xy_regional_ensemble_1995 <- readr::read_rds(file = file.path(here::here(), \"data\", \"regional_ensemble_wineries_1981-2010_xy_pred_suit.rds\")) xy_regional_ensemble_2055 <- readr::read_rds(file = file.path(here::here(), \"data\", \"regional_ensemble_wineries_2041-2070_GFDL_ssp_mean_xy_pred_suit.rds\")) # transform all data frames to internal dataset usethis::use_data(   threshold_exponential_values, IVR_locations, summary_global, summary_regional_ensemble, xy_global_1995, xy_global_2055, xy_regional_ensemble_1995, xy_regional_ensemble_2055,   internal = TRUE,   overwrite = FALSE )"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/150_create_risk_report.html","id":"loop-to-apply-function-to-wineries-dataset","dir":"Articles","previous_headings":"Apply function","what":"loop to apply function to wineries dataset","title":"Example usage of create_risk_report.R to create reports of key viticultural areas","text":"Primarily, like use wineries dataset create report unique country list. winery records contain 64 unique countries create reports . reports saved vignette-outputs/reports. maps might need edited zoom countries, countries geographically separated territories relevant analysis. code zoom plots following section.","code":"# import wineries dataset IVR_locations <- readr::read_rds(file = file.path(here::here(), \"data\", \"wineries_tidied.rds\"))   n_distinct(IVR_locations$Country) ## [1] 64 # there are 64 unique countries on the list  # get iso codes using rnaturalearth data admin_0_countries <- read_sf(dsn = file.path(here::here(), \"data-raw\", \"ne_countries\", \"ne_10m_admin_0_countries.shp\")) %>%   dplyr::select(ADMIN, ADM0_A3)  # replace names in sf admin_0_countries$ADMIN <- stringr::str_replace_all(admin_0_countries$ADMIN, \"United States of America\", \"United States\") admin_0_countries$ADMIN <- stringr::str_replace_all(admin_0_countries$ADMIN, \"South Korea\", \"Republic of Korea\") admin_0_countries$ADMIN <- stringr::str_replace_all(admin_0_countries$ADMIN, \"Palestine\", \"Palestinian territories\") admin_0_countries$ADMIN <- stringr::str_replace_all(admin_0_countries$ADMIN, \"Cabo Verde\", \"Cape Verde\") admin_0_countries$ADMIN <- stringr::str_replace_all(admin_0_countries$ADMIN, \"Czechia\", \"Czech Republic\") admin_0_countries$ADMIN <- stringr::str_replace_all(admin_0_countries$ADMIN, \"Republic of Serbia\", \"Serbia\")  # correct misspelling IVR_locations$Country <- stringr::str_replace_all(IVR_locations$Country, \"Algiera\", \"Algeria\")  # join IVR_locations_iso <- left_join(IVR_locations, admin_0_countries, join_by(Country == ADMIN)) %>%   dplyr::rename(\"iso_a3\" = \"ADM0_A3\")       # check  n_distinct(IVR_locations_iso$iso_a3) ## [1] 64 # it was successful, 64 unique iso codes  # sort dataset unique_iso <- sort(unique(IVR_locations_iso$iso_a3)) # paired country names unique_name <- IVR_locations_iso %>%   group_by(iso_a3) %>%   summarize(country = unique(Country)) %>%   dplyr::select(country) %>%   as.matrix() %>%   as.character() for (i in seq_along(unique_iso)){   print(c(unique_name[i],unique_iso[i])) } ## [1] \"Albania\" \"ALB\"     ## [1] \"Argentina\" \"ARG\"       ## [1] \"Armenia\" \"ARM\"     ## [1] \"Australia\" \"AUS\"       ## [1] \"Austria\" \"AUT\"     ## [1] \"Azerbaijan\" \"AZE\"        ## [1] \"Belgium\" \"BEL\"     ## [1] \"Bulgaria\" \"BGR\"      ## [1] \"Bosnia and Herzegovina\" \"BIH\"                    ## [1] \"Bolivia\" \"BOL\"     ## [1] \"Brazil\" \"BRA\"    ## [1] \"Canada\" \"CAN\"    ## [1] \"Switzerland\" \"CHE\"         ## [1] \"Chile\" \"CHL\"   ## [1] \"China\" \"CHN\"   ## [1] \"Cape Verde\" \"CPV\"        ## [1] \"Cyprus\" \"CYP\"    ## [1] \"Czech Republic\" \"CZE\"            ## [1] \"Germany\" \"DEU\"     ## [1] \"Algeria\" \"DZA\"     ## [1] \"Spain\" \"ESP\"   ## [1] \"France\" \"FRA\"    ## [1] \"Georgia\" \"GEO\"     ## [1] \"Greece\" \"GRC\"    ## [1] \"Croatia\" \"HRV\"     ## [1] \"Hungary\" \"HUN\"     ## [1] \"Indonesia\" \"IDN\"       ## [1] \"India\" \"IND\"   ## [1] \"Ireland\" \"IRL\"     ## [1] \"Iran\" \"IRN\"  ## [1] \"Israel\" \"ISR\"    ## [1] \"Italy\" \"ITA\"   ## [1] \"Japan\" \"JPN\"   ## [1] \"Republic of Korea\" \"KOR\"               ## [1] \"Lebanon\" \"LBN\"     ## [1] \"Lithuania\" \"LTU\"       ## [1] \"Luxembourg\" \"LUX\"        ## [1] \"Latvia\" \"LVA\"    ## [1] \"Morocco\" \"MAR\"     ## [1] \"Moldova\" \"MDA\"     ## [1] \"Mexico\" \"MEX\"    ## [1] \"North Macedonia\" \"MKD\"             ## [1] \"Myanmar\" \"MMR\"     ## [1] \"Montenegro\" \"MNE\"        ## [1] \"Netherlands\" \"NLD\"         ## [1] \"New Zealand\" \"NZL\"         ## [1] \"Peru\" \"PER\"  ## [1] \"Poland\" \"POL\"    ## [1] \"Portugal\" \"PRT\"      ## [1] \"Palestinian territories\" \"PSX\"                     ## [1] \"Romania\" \"ROU\"     ## [1] \"Russia\" \"RUS\"    ## [1] \"Serbia\" \"SRB\"    ## [1] \"Slovakia\" \"SVK\"      ## [1] \"Slovenia\" \"SVN\"      ## [1] \"Sweden\" \"SWE\"    ## [1] \"Syria\" \"SYR\"   ## [1] \"Tunisia\" \"TUN\"     ## [1] \"Turkey\" \"TUR\"    ## [1] \"Ukraine\" \"UKR\"     ## [1] \"United States\" \"USA\"           ## [1] \"Venezuela\" \"VEN\"       ## [1] \"Vietnam\" \"VNM\"     ## [1] \"South Africa\" \"ZAF\" # loop thru country iso codes and names together for (a in seq_along(unique_iso)) {      slfSpread::create_risk_report(     locality.iso = unique_iso[a], # iso codes     locality.name = unique_name[a], # names     locality.type = \"country\",     mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", unique_name[a]),     create.dir = TRUE, # create subdirectory for plots     save.report = TRUE,     buffer.dist = 20000 # distance at which buffers should be drawn on maps to indicate IVR suitability predictions     )    }"},{"path":"https://ieco-lab.github.io/slfSpread/articles/150_create_risk_report.html","id":"generate-individual-country-and-stateprovince-reports","dir":"Articles","previous_headings":"","what":"Generate Individual country and state/province reports","title":"Example usage of create_risk_report.R to create reports of key viticultural areas","text":"Alternatively, create individualized reports maps key viticultural areas interest. group regions expected gain loss viticultural risk, geography. start USA China contain many SLF records want create reports specific provinces within countries.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/150_create_risk_report.html","id":"usa","dir":"Articles","previous_headings":"Generate Individual country and state/province reports","what":"USA","title":"Example usage of create_risk_report.R to create reports of key viticultural areas","text":"","code":"slfSpread::create_risk_report(   locality.iso = \"usa\",   locality.name = \"united states\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"United States\"),   create.dir = FALSE,   save.report = TRUE,   buffer.dist = 20000 ) ## ℹ proceeding without creating report output subdirectory folder ## Reading layer `ne_10m_admin_0_countries' from data source  ##   `C:\\Users\\tun83449\\Documents\\GitHub\\slfSpread\\data-raw\\ne_countries\\ne_10m_admin_0_countries.shp'  ##   using driver `ESRI Shapefile' ## Simple feature collection with 258 features and 168 fields ## Geometry type: MULTIPOLYGON ## Dimension:     XY ## Bounding box:  xmin: -180 ymin: -90 xmax: 180 ymax: 83.6341 ## Geodetic CRS:  WGS 84 ## ℹ Importing shapefiles from: C:/Users/tun83449/Documents/GitHub/slfSpread/data-raw ## Reading layer `ne_10m_admin_1_states_provinces' from data source  ##   `C:\\Users\\tun83449\\Documents\\GitHub\\slfSpread\\data-raw\\ne_states_provinces\\ne_10m_admin_1_states_provinces.shp'  ##   using driver `ESRI Shapefile' ## Simple feature collection with 4596 features and 121 fields ## Geometry type: MULTIPOLYGON ## Dimension:     XY ## Bounding box:  xmin: -180 ymin: -90 xmax: 180 ymax: 83.6341 ## Geodetic CRS:  WGS 84 ## ✔ Data exist for locality ## ℹ Suitability prediction type for IVR regions: buffer of 20000m around points ## ✔ Risk maps plotted ## ✔ Range shift map plotted ## Warning in stri_detect_regex(string, pattern, negate = negate, opts_regex = ## opts(pattern)): argument is not an atomic vector; coercing ## ✔ Viticultural risk plot created ## ✔ Viticultural regions list created ## ✔ Risk map proportional areas table created ## ✔ Range shift area table created ## ✔ Viticultural risk table created ## ✔ Report created ## ✔ Report saved to file # try state level slfSpread::create_risk_report(   locality.iso = \"usa\",   locality.name = \"california\",   locality.type = \"state_province\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"United States\"),   create.dir = FALSE,   save.report = TRUE,   buffer.dist = 20000 ) ## ℹ proceeding without creating report output subdirectory folder ## Reading layer `ne_10m_admin_0_countries' from data source  ##   `C:\\Users\\tun83449\\Documents\\GitHub\\slfSpread\\data-raw\\ne_countries\\ne_10m_admin_0_countries.shp'  ##   using driver `ESRI Shapefile' ## Simple feature collection with 258 features and 168 fields ## Geometry type: MULTIPOLYGON ## Dimension:     XY ## Bounding box:  xmin: -180 ymin: -90 xmax: 180 ymax: 83.6341 ## Geodetic CRS:  WGS 84 ## ℹ Importing shapefiles from: C:/Users/tun83449/Documents/GitHub/slfSpread/data-raw ## Reading layer `ne_10m_admin_1_states_provinces' from data source  ##   `C:\\Users\\tun83449\\Documents\\GitHub\\slfSpread\\data-raw\\ne_states_provinces\\ne_10m_admin_1_states_provinces.shp'  ##   using driver `ESRI Shapefile' ## Simple feature collection with 4596 features and 121 fields ## Geometry type: MULTIPOLYGON ## Dimension:     XY ## Bounding box:  xmin: -180 ymin: -90 xmax: 180 ymax: 83.6341 ## Geodetic CRS:  WGS 84 ## ✔ Data exist for locality ## ℹ Suitability prediction type for IVR regions: buffer of 20000m around points ## ✔ Risk maps plotted ## ✔ Range shift map plotted ## Warning in stri_detect_regex(string, pattern, negate = negate, opts_regex = ## opts(pattern)): argument is not an atomic vector; coercing ## ✔ Viticultural risk plot created ## ✔ Viticultural regions list created ## ✔ Risk map proportional areas table created ## ✔ Range shift area table created ## ✔ Viticultural risk table created ## ✔ Report created ## ✔ Report saved to file slfSpread::create_risk_report(   locality.iso = \"usa\",   locality.name = \"pennsylvania\",   locality.type = \"state_province\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"United States\"),   create.dir = FALSE,   save.report = TRUE,   buffer.dist = 20000 ) ## ℹ proceeding without creating report output subdirectory folder ## Reading layer `ne_10m_admin_0_countries' from data source  ##   `C:\\Users\\tun83449\\Documents\\GitHub\\slfSpread\\data-raw\\ne_countries\\ne_10m_admin_0_countries.shp'  ##   using driver `ESRI Shapefile' ## Simple feature collection with 258 features and 168 fields ## Geometry type: MULTIPOLYGON ## Dimension:     XY ## Bounding box:  xmin: -180 ymin: -90 xmax: 180 ymax: 83.6341 ## Geodetic CRS:  WGS 84 ## ℹ Importing shapefiles from: C:/Users/tun83449/Documents/GitHub/slfSpread/data-raw ## Reading layer `ne_10m_admin_1_states_provinces' from data source  ##   `C:\\Users\\tun83449\\Documents\\GitHub\\slfSpread\\data-raw\\ne_states_provinces\\ne_10m_admin_1_states_provinces.shp'  ##   using driver `ESRI Shapefile' ## Simple feature collection with 4596 features and 121 fields ## Geometry type: MULTIPOLYGON ## Dimension:     XY ## Bounding box:  xmin: -180 ymin: -90 xmax: 180 ymax: 83.6341 ## Geodetic CRS:  WGS 84 ## ✔ Data exist for locality ## ℹ Suitability prediction type for IVR regions: buffer of 20000m around points ## ✔ Risk maps plotted ## ✔ Range shift map plotted ## Warning in stri_detect_regex(string, pattern, negate = negate, opts_regex = ## opts(pattern)): argument is not an atomic vector; coercing ## ✔ Viticultural risk plot created ## ✔ Viticultural regions list created ## ✔ Risk map proportional areas table created ## ✔ Range shift area table created ## ✔ Viticultural risk table created ## ✔ Report created ## ✔ Report saved to file # save USA report for other uses readr::write_rds(united_states_slf_risk_report, file = file.path(here::here(), \"vignette-outputs\", \"reports\", \"United States\", \"united_states_slf_risk_report.rds\")) ### USA # the USA map usually comes including Alaska and hawaii, which we do not want  USA_current <- united_states_slf_risk_report[[\"risk_maps\"]][[\"current_risk_map\"]] +   xlim(-125, -65) +   ylim(25, 50)  USA_future <- united_states_slf_risk_report[[\"risk_maps\"]][[\"2055_risk_map\"]] +   xlim(-125, -65) +   ylim(25, 50)  USA_shift <- united_states_slf_risk_report[[\"range_shift_map\"]] +   xlim(-125, -65) +   ylim(25, 50) ## Scale for x is already present. ## Adding another scale for x, which will replace the existing scale. ## Scale for y is already present. ## Adding another scale for y, which will replace the existing scale. #save ggsave(   USA_current,   filename = file.path(here::here(), \"vignette-outputs\", \"reports\", \"United States\", \"united_states_risk_map_present_edited.jpg\"),   height = 8,   width = 10,   device = \"jpeg\",   dpi = \"retina\" )  ggsave(   USA_future,   filename = file.path(here::here(), \"vignette-outputs\", \"reports\", \"United States\", \"united_states_risk_map_2055_edited.jpg\"),   height = 8,   width = 10,   device = \"jpeg\",   dpi = \"retina\" )  ggsave(   USA_shift,   filename = file.path(here::here(), \"vignette-outputs\", \"reports\", \"United States\", \"united_states_shift_map_edited.jpg\"),   height = 8,   width = 10,   device = \"jpeg\",   dpi = \"retina\" ) ## Warning: Removed 43211 rows containing missing values or values outside the scale range ## (`geom_raster()`)."},{"path":"https://ieco-lab.github.io/slfSpread/articles/150_create_risk_report.html","id":"china","dir":"Articles","previous_headings":"Generate Individual country and state/province reports","what":"China","title":"Example usage of create_risk_report.R to create reports of key viticultural areas","text":"","code":"slfSpread::create_risk_report(   locality.iso = \"chn\",    locality.name = \"china\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"China\"),   create.dir = FALSE,   save.report = TRUE,   buffer.dist = 20000 ) ## ℹ proceeding without creating report output subdirectory folder ## Reading layer `ne_10m_admin_0_countries' from data source  ##   `C:\\Users\\tun83449\\Documents\\GitHub\\slfSpread\\data-raw\\ne_countries\\ne_10m_admin_0_countries.shp'  ##   using driver `ESRI Shapefile' ## Simple feature collection with 258 features and 168 fields ## Geometry type: MULTIPOLYGON ## Dimension:     XY ## Bounding box:  xmin: -180 ymin: -90 xmax: 180 ymax: 83.6341 ## Geodetic CRS:  WGS 84 ## ℹ Importing shapefiles from: C:/Users/tun83449/Documents/GitHub/slfSpread/data-raw ## Reading layer `ne_10m_admin_1_states_provinces' from data source  ##   `C:\\Users\\tun83449\\Documents\\GitHub\\slfSpread\\data-raw\\ne_states_provinces\\ne_10m_admin_1_states_provinces.shp'  ##   using driver `ESRI Shapefile' ## Simple feature collection with 4596 features and 121 fields ## Geometry type: MULTIPOLYGON ## Dimension:     XY ## Bounding box:  xmin: -180 ymin: -90 xmax: 180 ymax: 83.6341 ## Geodetic CRS:  WGS 84 ## ✔ Data exist for locality ## ℹ Suitability prediction type for IVR regions: buffer of 20000m around points ## ✔ Risk maps plotted ## ✔ Range shift map plotted ## Warning in stri_detect_regex(string, pattern, negate = negate, opts_regex = ## opts(pattern)): argument is not an atomic vector; coercing ## ✔ Viticultural risk plot created ## ✔ Viticultural regions list created ## ✔ Risk map proportional areas table created ## ✔ Range shift area table created ## ✔ Viticultural risk table created ## ✔ Report created ## ✔ Report saved to file # this report should have 2 IVR points slfSpread::create_risk_report(   locality.iso = \"chn\",   locality.name = \"shandong\",   locality.type = \"state_province\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"China\"),   create.dir = FALSE,   save.report = TRUE,   buffer.dist = 20000 ) ## ℹ proceeding without creating report output subdirectory folder ## Reading layer `ne_10m_admin_0_countries' from data source  ##   `C:\\Users\\tun83449\\Documents\\GitHub\\slfSpread\\data-raw\\ne_countries\\ne_10m_admin_0_countries.shp'  ##   using driver `ESRI Shapefile' ## Simple feature collection with 258 features and 168 fields ## Geometry type: MULTIPOLYGON ## Dimension:     XY ## Bounding box:  xmin: -180 ymin: -90 xmax: 180 ymax: 83.6341 ## Geodetic CRS:  WGS 84 ## ℹ Importing shapefiles from: C:/Users/tun83449/Documents/GitHub/slfSpread/data-raw ## Reading layer `ne_10m_admin_1_states_provinces' from data source  ##   `C:\\Users\\tun83449\\Documents\\GitHub\\slfSpread\\data-raw\\ne_states_provinces\\ne_10m_admin_1_states_provinces.shp'  ##   using driver `ESRI Shapefile' ## Simple feature collection with 4596 features and 121 fields ## Geometry type: MULTIPOLYGON ## Dimension:     XY ## Bounding box:  xmin: -180 ymin: -90 xmax: 180 ymax: 83.6341 ## Geodetic CRS:  WGS 84 ## ✔ Data exist for locality ## ℹ Suitability prediction type for IVR regions: buffer of 20000m around points ## ✔ Risk maps plotted ## ✔ Range shift map plotted ## Warning in stri_detect_regex(string, pattern, negate = negate, opts_regex = ## opts(pattern)): argument is not an atomic vector; coercing ## ✔ Viticultural risk plot created ## ✔ Viticultural regions list created ## ✔ Risk map proportional areas table created ## ✔ Range shift area table created ## ✔ Viticultural risk table created ## ✔ Report created ## ✔ Report saved to file # this report should have no IVR records slfSpread::create_risk_report(   locality.iso = \"chn\",   locality.name = \"yunnan\",   locality.type = \"state_province\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"China\"),   create.dir = FALSE,   save.report = TRUE,   buffer.dist = 20000 ) ## ℹ proceeding without creating report output subdirectory folder ## Reading layer `ne_10m_admin_0_countries' from data source  ##   `C:\\Users\\tun83449\\Documents\\GitHub\\slfSpread\\data-raw\\ne_countries\\ne_10m_admin_0_countries.shp'  ##   using driver `ESRI Shapefile' ## Simple feature collection with 258 features and 168 fields ## Geometry type: MULTIPOLYGON ## Dimension:     XY ## Bounding box:  xmin: -180 ymin: -90 xmax: 180 ymax: 83.6341 ## Geodetic CRS:  WGS 84 ## ℹ Importing shapefiles from: C:/Users/tun83449/Documents/GitHub/slfSpread/data-raw ## Reading layer `ne_10m_admin_1_states_provinces' from data source  ##   `C:\\Users\\tun83449\\Documents\\GitHub\\slfSpread\\data-raw\\ne_states_provinces\\ne_10m_admin_1_states_provinces.shp'  ##   using driver `ESRI Shapefile' ## Simple feature collection with 4596 features and 121 fields ## Geometry type: MULTIPOLYGON ## Dimension:     XY ## Bounding box:  xmin: -180 ymin: -90 xmax: 180 ymax: 83.6341 ## Geodetic CRS:  WGS 84 ## ✔ Data exist for locality ## ℹ Suitability prediction type for IVR regions: buffer of 20000m around points ## Warning: [buffer] empty SpatVector ## ✔ Risk maps plotted ## ✔ Range shift map plotted ## Warning in stri_detect_regex(string, pattern, negate = negate, opts_regex = ## opts(pattern)): argument is not an atomic vector; coercing ## ✔ Viticultural risk plot created ## ✔ Viticultural regions list created ## ✔ Risk map proportional areas table created ## ✔ Range shift area table created ## ✔ Viticultural risk table created ## ✔ Report created ## ✔ Report saved to file # it worked still so thats good   # save report for other uses readr::write_rds(china_slf_risk_report, file = file.path(here::here(), \"vignette-outputs\", \"reports\", \"China\", \"china_slf_risk_report.rds\"))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/150_create_risk_report.html","id":"viticultural-shifts-due-to-climate-change","dir":"Articles","previous_headings":"","what":"Viticultural shifts due to climate change","title":"Example usage of create_risk_report.R to create reports of key viticultural areas","text":"Now, apply function specific countries future viticultural interest. Morales-Castilla et al 2020 predicted following countries experience loss suitability viticulture 4C warming scenario climate change: highest losses: * Italy * Spain others: * Turkey * South Africa * Portugal * mexico Concurrently, predicted following areas experience gain suitability scenario: Pacific Northwestern States (USA) New Zealand Great Britain Ireland Sweden Finally, countries expected experience balanced ratio losses gains suitability: France Another paper, Webb et al 2013 predicted analogous climates specific Vitis cultivars climate change. paper focused predicting specific cultivars might move growers keep pace climate change. Based predicted climate shifts temperature precipitation, study predicts following areas generally less suitable Vitis cultivars future: Central valley, California, USA Hotter parts Australia Meanwhile, following areas may increase suitabiliy due warming winter temperature minimums: Michigan, USA New Zealand","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/150_create_risk_report.html","id":"countries-experiencing-a-loss-in-viticultural-suitability","dir":"Articles","previous_headings":"Viticultural shifts due to climate change","what":"Countries experiencing a loss in viticultural suitability","title":"Example usage of create_risk_report.R to create reports of key viticultural areas","text":"","code":"# spain slfSpread::create_risk_report(   locality.iso = \"esp\",   locality.name = \"spain\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"spain\"),   create.dir = FALSE,   save.report = FALSE,   buffer.dist = 20000 )  # italy slfSpread::create_risk_report(   locality.iso = \"ita\",   locality.name = \"italy\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Italy\"),   create.dir = FALSE,   save.report = FALSE,   buffer.dist = 20000 )  # portugal slfSpread::create_risk_report(   locality.iso = \"prt\",   locality.name = \"portugal\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Portugal\"),   create.dir = FALSE,   save.report = FALSE,   buffer.dist = 20000 )  # türkiye slfSpread::create_risk_report(   locality.iso = \"tur\",   locality.name = \"türkiye\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Turkey\"),   create.dir = FALSE,   save.report = FALSE,   buffer.dist = 20000 )   # south africa slfSpread::create_risk_report(   locality.iso = \"zaf\",   locality.name =  \"south africa\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"South Africa\"),   create.dir = FALSE,   save.report = FALSE,   buffer.dist = 20000 )  # mexico slfSpread::create_risk_report(   locality.iso = \"mex\",   locality.name = \"mexico\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Mexico\"),   create.dir = FALSE,   save.report = FALSE,   buffer.dist = 20000 ) # the spain report came out with the the maps needing some work. # The map is zoomed very far out because of some territories belonging to spain. # I will try to limiting the x and y coordinates of the plot to zoom in.  spain_current <- spain_slf_risk_report[[\"risk_maps\"]][[\"current_risk_map\"]] +   xlim(-10, 5) +   ylim(35, 44)  spain_future <- spain_slf_risk_report[[\"risk_maps\"]][[\"2055_risk_map\"]] +   xlim(-10, 5) +   ylim(35, 44)  spain_shift <- spain_slf_risk_report[[\"range_shift_map\"]] +   xlim(-10, 5) +   ylim(35, 44)   #save ggsave(   spain_current,   filename = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Spain\", \"Spain_risk_map_present_edited.jpg\"),   height = 8,   width = 10,   device = \"jpeg\",   dpi = \"retina\" )  ggsave(   spain_future,   filename = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Spain\", \"Spain_risk_map_2055_edited.jpg\"),   height = 8,   width = 10,   device = \"jpeg\",   dpi = \"retina\" )  ggsave(   spain_shift,   filename = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Spain\", \"Spain_range_shift_map_edited.jpg\"),   height = 8,   width = 10,   device = \"jpeg\",   dpi = \"retina\" )  # the canary islands also have a number of vineyards so I will create maps of just those canary_current <- spain_slf_risk_report[[\"risk_maps\"]][[\"current_risk_map\"]] +   xlim(-19, -13) +   ylim(27, 30) +   labs(subtitle = \"Spain: canary islands\")  canary_future <- spain_slf_risk_report[[\"risk_maps\"]][[\"2055_risk_map\"]] +   xlim(-19, -13) +   ylim(27, 30) +   labs(subtitle = \"Spain: canary islands\")  canary_shift <- spain_slf_risk_report[[\"range_shift_map\"]] +   xlim(-19, -13) +   ylim(27, 30) +   labs(subtitle = \"Spain: canary islands\")   #save ggsave(   canary_current,   filename = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Spain\", \"canary_islands_risk_map_present_edited.jpg\"),   height = 8,   width = 10,   device = \"jpeg\",   dpi = \"retina\" )  ggsave(   canary_future,   filename = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Spain\", \"canary_islands_risk_map_2055_edited.jpg\"),   height = 8,   width = 10,   device = \"jpeg\",   dpi = \"retina\" )  ggsave(   canary_shift,   filename = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Spain\", \"canary_islands_range_shift_map_edited.jpg\"),   height = 8,   width = 10,   device = \"jpeg\",   dpi = \"retina\" ) # the spain report came out with the the maps needing some work. # The map is zoomed very far out because of some territories belonging to spain. # I will try to limiting the x and y coordinates of the plot to zoom in.  portugal_current <- portugal_slf_risk_report[[\"risk_maps\"]][[\"current_risk_map\"]] +   xlim(-18, -6) +   ylim(32, 42)  portugal_future <- portugal_slf_risk_report[[\"risk_maps\"]][[\"2055_risk_map\"]] +   xlim(-18, -6) +   ylim(32, 42)  portugal_shift <- portugal_slf_risk_report[[\"range_shift_map\"]] +   xlim(-18, -6) +   ylim(32, 42)   #save ggsave(   portugal_current,   filename = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Portugal\", \"portugal_risk_map_present_edited.jpg\"),   height = 8,   width = 10,   device = \"jpeg\",   dpi = \"retina\" )  ggsave(   portugal_future,   filename = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Portugal\", \"portugal_risk_map_2055_edited.jpg\"),   height = 8,   width = 10,   device = \"jpeg\",   dpi = \"retina\" )  ggsave(   portugal_shift,   filename = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Portugal\", \"portugal_range_shift_map_edited.jpg\"),   height = 8,   width = 10,   device = \"jpeg\",   dpi = \"retina\" ) south_africa_current <- south_africa_slf_risk_report[[\"risk_maps\"]][[\"current_risk_map\"]] +   xlim(15, 35) +   ylim(-35, -22)  south_africa_future <- south_africa_slf_risk_report[[\"risk_maps\"]][[\"2055_risk_map\"]] +   xlim(15, 35) +   ylim(-35, -22)  south_africa_shift <- south_africa_slf_risk_report[[\"range_shift_map\"]] +   xlim(15, 35) +   ylim(-35, -22)   #save ggsave(   south_africa_current,   filename = file.path(here::here(), \"vignette-outputs\", \"reports\", \"South Africa\", \"south_africa_risk_map_present_edited.jpg\"),   height = 8,   width = 10,   device = \"jpeg\",   dpi = \"retina\" )  ggsave(   south_africa_future,   filename = file.path(here::here(), \"vignette-outputs\", \"reports\", \"South Africa\", \"south_africa_risk_map_2055_edited.jpg\"),   height = 8,   width = 10,   device = \"jpeg\",   dpi = \"retina\" )  ggsave(   south_africa_shift,   filename = file.path(here::here(), \"vignette-outputs\", \"reports\", \"South Africa\", \"south_africa_range_shift_map_edited.jpg\"),   height = 8,   width = 10,   device = \"jpeg\",   dpi = \"retina\" )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/150_create_risk_report.html","id":"countries-experiencing-a-gain-in-viticultural-suitability","dir":"Articles","previous_headings":"Viticultural shifts due to climate change","what":"Countries experiencing a gain in viticultural suitability","title":"Example usage of create_risk_report.R to create reports of key viticultural areas","text":"","code":"# united kingdom slfSpread::create_risk_report(   locality.iso = \"gbr\",   locality.name = \"united kingdom\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"United Kingdom\"),   create.dir = TRUE,   save.report = TRUE,   buffer.dist = 20000 )  # Ireland slfSpread::create_risk_report(   locality.iso = \"irl\",   locality.name = \"Ireland\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Ireland\"),   create.dir = TRUE,   save.report = TRUE,   buffer.dist = 20000 )  # New zealand slfSpread::create_risk_report(   locality.iso = \"nzl\",   locality.name = \"new zealand\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"New Zealand\"),   create.dir = FALSE,   save.report = FALSE,   buffer.dist = 20000 )  # sweden slfSpread::create_risk_report(   locality.iso = \"swe\",   locality.name = \"sweden\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"sweden\"),   create.dir = FALSE,   save.report = TRUE,   buffer.dist = 20000 ) # michigan slfSpread::create_risk_report(   locality.iso = \"usa\",   locality.name = \"michigan\",   locality.type = \"state_province\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"United States\"),   create.dir = FALSE,   save.report = TRUE,   buffer.dist = 20000 )  # oregon slfSpread::create_risk_report(   locality.iso = \"usa\",   locality.name = \"oregon\",   locality.type = \"state_province\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"United States\"),   create.dir = FALSE,   save.report = TRUE,   buffer.dist = 20000 )  # washington slfSpread::create_risk_report(   locality.iso = \"usa\",   locality.name = \"washington\",   locality.type = \"state_province\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"United States\"),   create.dir = FALSE,   save.report = TRUE,   buffer.dist = 20000 )  # tasmania slfSpread::create_risk_report(   locality.iso = \"aus\",   locality.name = \"tasmania\",   locality.type = \"state_province\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Australia\"),   create.dir = FALSE,   save.report = TRUE,   buffer.dist = 20000 ) # the spain report came out with the the maps needing some work. # The map is zoomed very far out because of some territories belonging to spain. # I will try to limiting the x and y coordinates of the plot to zoom in.  new_zealand_current <- new_zealand_slf_risk_report[[\"risk_maps\"]][[\"current_risk_map\"]] +   xlim(165, 180) +   ylim(-48, -34)  new_zealand_future <- new_zealand_slf_risk_report[[\"risk_maps\"]][[\"2055_risk_map\"]] +   xlim(165, 180) +   ylim(-48, -34)  new_zealand_shift <- new_zealand_slf_risk_report[[\"range_shift_map\"]] +   xlim(165, 180) +   ylim(-48, -34)   #save ggsave(   new_zealand_current,   filename = file.path(here::here(), \"vignette-outputs\", \"reports\", \"New Zealand\", \"new_zealand_risk_map_present_edited.jpg\"),   height = 8,   width = 10,   device = \"jpeg\",   dpi = \"retina\" )  ggsave(   new_zealand_future,   filename = file.path(here::here(), \"vignette-outputs\", \"reports\", \"New Zealand\", \"new_zealand_risk_map_2055_edited.jpg\"),   height = 8,   width = 10,   device = \"jpeg\",   dpi = \"retina\" )  ggsave(   new_zealand_shift,   filename = file.path(here::here(), \"vignette-outputs\", \"reports\", \"New Zealand\", \"new_zealand_range_shift_map_edited.jpg\"),   height = 8,   width = 10,   device = \"jpeg\",   dpi = \"retina\" )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/150_create_risk_report.html","id":"other-countries-of-interest","dir":"Articles","previous_headings":"Viticultural shifts due to climate change","what":"other countries of interest","title":"Example usage of create_risk_report.R to create reports of key viticultural areas","text":"","code":"# countries of interest # chile slfSpread::create_risk_report(   locality.iso = \"chl\",   locality.name = \"chile\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Chile\"),   create.dir = FALSE,   save.report = FALSE,   buffer.dist = 20000 )  # australia slfSpread::create_risk_report(   locality.iso = \"aus\",   locality.name = \"australia\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Australia\"),   create.dir = FALSE,   save.report = FALSE,   buffer.dist = 20000 )  # romania slfSpread::create_risk_report(   locality.iso = \"rou\",   locality.name = \"romania\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Romania\"),   create.dir = FALSE,   save.report = FALSE,   buffer.dist = 20000 )  # argentina slfSpread::create_risk_report(   locality.iso = \"arg\",   locality.name = \"argentina\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Argentina\"),   create.dir = FALSE,   save.report = FALSE,   buffer.dist = 20000 )  # georgia slfSpread::create_risk_report(   locality.iso = \"geo\",   locality.name = \"georgia\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Georgia\"),   create.dir = FALSE,   save.report = FALSE,   buffer.dist = 20000 )  # russia slfSpread::create_risk_report(   locality.iso = \"rus\",   locality.name = \"russia\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Russia\"),   create.dir = TRUE,   save.report = TRUE,   buffer.dist = 20000 ) # no shapefile data exist australia_current <- australia_slf_risk_report[[\"risk_maps\"]][[\"current_risk_map\"]] +   xlim(110, 155) +   ylim(-44, -10)  australia_future <- australia_slf_risk_report[[\"risk_maps\"]][[\"2055_risk_map\"]] +   xlim(110, 155) +   ylim(-44, -10)  australia_shift <- australia_slf_risk_report[[\"range_shift_map\"]] +   xlim(110, 155) +   ylim(-44, -10)   #save ggsave(   australia_current,   filename = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Australia\", \"australia_risk_map_present_edited.jpg\"),   height = 8,   width = 10,   device = \"jpeg\",   dpi = \"retina\" )  ggsave(   australia_future,   filename = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Australia\", \"australia_risk_map_2055_edited.jpg\"),   height = 8,   width = 10,   device = \"jpeg\",   dpi = \"retina\" )  ggsave(   australia_shift,   filename = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Australia\", \"australia_range_shift_map_edited.jpg\"),   height = 8,   width = 10,   device = \"jpeg\",   dpi = \"retina\" ) russia_current <- russia_slf_risk_report[[\"risk_maps\"]][[\"current_risk_map\"]] +   xlim(20, 180)   russia_future <- russia_slf_risk_report[[\"risk_maps\"]][[\"2055_risk_map\"]] +   xlim(20, 180)   russia_shift <- russia_slf_risk_report[[\"range_shift_map\"]] +   xlim(20, 180)    #save ggsave(   russia_current,   filename = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Russia\", \"russia_risk_map_present_edited.jpg\"),   height = 8,   width = 10,   device = \"jpeg\",   dpi = \"retina\" )  ggsave(   russia_future,   filename = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Russia\", \"russia_risk_map_2055_edited.jpg\"),   height = 8,   width = 10,   device = \"jpeg\",   dpi = \"retina\" )  ggsave(   russia_shift,   filename = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Russia\", \"russia_range_shift_map_edited.jpg\"),   height = 8,   width = 10,   device = \"jpeg\",   dpi = \"retina\" ) chile_current <- chile_slf_risk_report[[\"risk_maps\"]][[\"current_risk_map\"]] +   xlim(-78, -65)   chile_future <- chile_slf_risk_report[[\"risk_maps\"]][[\"2055_risk_map\"]] +   xlim(-78, -65)   chile_shift <- chile_slf_risk_report[[\"range_shift_map\"]] +   xlim(-78, -65)    #save ggsave(   chile_current,   filename = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Chile\", \"chile_risk_map_present_edited.jpg\"),   height = 8,   width = 10,   device = \"jpeg\",   dpi = \"retina\" )  ggsave(   chile_future,   filename = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Chile\", \"chile_risk_map_2055_edited.jpg\"),   height = 8,   width = 10,   device = \"jpeg\",   dpi = \"retina\" )  ggsave(   chile_shift,   filename = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Chile\", \"chile_range_shift_map_edited.jpg\"),   height = 8,   width = 10,   device = \"jpeg\",   dpi = \"retina\" )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/150_create_risk_report.html","id":"other-areas-of-cc-interest","dir":"Articles","previous_headings":"Viticultural shifts due to climate change","what":"other areas of CC interest","title":"Example usage of create_risk_report.R to create reports of key viticultural areas","text":"areas experienced significant increase SLF risk main global maps.","code":"# finland # projected gain of slf suitability here slfSpread::create_risk_report(   locality.iso = \"fin\",   locality.name = \"finland\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"finland\"),   create.dir = TRUE,   save.report = TRUE,   buffer.dist = 20000 )"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/150_create_risk_report.html","id":"western-europe","dir":"Articles","previous_headings":"Viticultural shifts due to climate change > Geographic Areas","what":"Western europe","title":"Example usage of create_risk_report.R to create reports of key viticultural areas","text":"","code":"# germany slfSpread::create_risk_report(   locality.iso = \"DEU\",   locality.name = \"germany\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Germany\"),   create.dir = FALSE,   save.report = FALSE,   buffer.dist = 20000 )   # france slfSpread::create_risk_report(   locality.iso = \"fra\",   locality.name = \"france\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"France\"),   create.dir = FALSE,   save.report = FALSE,   buffer.dist = 20000 )   # portugual and italy done above france_current <- france_slf_risk_report[[\"risk_maps\"]][[\"current_risk_map\"]] +   xlim(-5, 10) +   ylim(41, 51)  france_future <- france_slf_risk_report[[\"risk_maps\"]][[\"2055_risk_map\"]] +   xlim(-5, 10) +   ylim(41, 51)  france_shift <- france_slf_risk_report[[\"range_shift_map\"]] +   xlim(-5, 10) +   ylim(41, 51)   #save ggsave(   france_current,   filename = file.path(here::here(), \"vignette-outputs\", \"reports\", \"France\", \"france_risk_map_present_edited.jpg\"),   height = 8,   width = 10,   device = \"jpeg\",   dpi = \"retina\" )  ggsave(   france_future,   filename = file.path(here::here(), \"vignette-outputs\", \"reports\", \"France\", \"france_risk_map_2055_edited.jpg\"),   height = 8,   width = 10,   device = \"jpeg\",   dpi = \"retina\" )  ggsave(   france_shift,   filename = file.path(here::here(), \"vignette-outputs\", \"reports\", \"France\", \"france_range_shift_map_edited.jpg\"),   height = 8,   width = 10,   device = \"jpeg\",   dpi = \"retina\" )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/150_create_risk_report.html","id":"eastern-europe","dir":"Articles","previous_headings":"Viticultural shifts due to climate change > Geographic Areas","what":"Eastern Europe","title":"Example usage of create_risk_report.R to create reports of key viticultural areas","text":"","code":"# greece slfSpread::create_risk_report(   locality.iso = \"GRC\",   locality.name = \"greece\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"greece\"),   create.dir = FALSE,   save.report = FALSE,   buffer.dist = 20000 )   # austria slfSpread::create_risk_report(   locality.iso = \"AUT\",   locality.name = \"austria\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Austria\"),   create.dir = FALSE,   save.report = FALSE,   buffer.dist = 20000 )  # hungary slfSpread::create_risk_report(   locality.iso = \"HUN\",   locality.name = \"hungary\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Hungary\"),   create.dir = FALSE,   save.report = FALSE,   buffer.dist = 20000 )  # czech republic (Czechia) slfSpread::create_risk_report(   locality.iso = \"CZE\",   locality.name = \"Czechia\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Czechia\"),   create.dir = FALSE,   save.report = FALSE,   buffer.dist = 20000 )  # other # estonia slfSpread::create_risk_report(   locality.iso = \"est\",   locality.name = \"estonia\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Estonia\"),   create.dir = FALSE,   save.report = FALSE,   buffer.dist = 20000 )  # latvia slfSpread::create_risk_report(   locality.iso = \"lva\",   locality.name = \"lativa\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Lativa\"),   create.dir = TRUE,   save.report = TRUE,   buffer.dist = 20000 )  # lithuania slfSpread::create_risk_report(   locality.iso = \"ltu\",   locality.name = \"lithuania\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Lithuania\"),   create.dir = TRUE,   save.report = TRUE,   buffer.dist = 20000 )  # denmark slfSpread::create_risk_report(   locality.iso = \"dnk\",   locality.name = \"denmark\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Denmark\"),   create.dir = TRUE,   save.report = TRUE,   buffer.dist = 20000 )  # poland slfSpread::create_risk_report(   locality.iso = \"pol\",   locality.name = \"poland\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Poland\"),   create.dir = FALSE,   save.report = FALSE,   buffer.dist = 20000 )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/150_create_risk_report.html","id":"africa","dir":"Articles","previous_headings":"Viticultural shifts due to climate change > Geographic Areas","what":"Africa","title":"Example usage of create_risk_report.R to create reports of key viticultural areas","text":"","code":"# algeria slfSpread::create_risk_report(   locality.iso = \"DZA\",   locality.name = \"algeria\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Algeria\"),   create.dir = FALSE,   save.report = FALSE,   buffer.dist = 20000 )  ## south africa above"},{"path":"https://ieco-lab.github.io/slfSpread/articles/150_create_risk_report.html","id":"n-america","dir":"Articles","previous_headings":"Viticultural shifts due to climate change > Geographic Areas","what":"N America","title":"Example usage of create_risk_report.R to create reports of key viticultural areas","text":"","code":"# canada slfSpread::create_risk_report(   locality.iso = \"CAN\",   locality.name = \"canada\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Canada\"),   create.dir = FALSE,   save.report = FALSE,   buffer.dist = 20000 )  # mexico above"},{"path":"https://ieco-lab.github.io/slfSpread/articles/150_create_risk_report.html","id":"west-asia","dir":"Articles","previous_headings":"Viticultural shifts due to climate change > Geographic Areas","what":"West Asia","title":"Example usage of create_risk_report.R to create reports of key viticultural areas","text":"","code":"# turkey slfSpread::create_risk_report(   locality.iso = \"TUR\",   locality.name = \"turkey\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Turkey\"),   create.dir = TRUE,   save.report = TRUE,   buffer.dist = 20000 )   # georgia above"},{"path":"https://ieco-lab.github.io/slfSpread/articles/150_create_risk_report.html","id":"east-asia","dir":"Articles","previous_headings":"Viticultural shifts due to climate change > Geographic Areas","what":"East Asia","title":"Example usage of create_risk_report.R to create reports of key viticultural areas","text":"","code":"## china above  # south korea slfSpread::create_risk_report(   locality.iso = \"KOR\",   locality.name = \"south korea\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"South Korea\"),   create.dir = FALSE,   save.report = FALSE,   buffer.dist = 20000 )  # japan slfSpread::create_risk_report(   locality.iso = \"JPN\",   locality.name = \"japan\",   locality.type = \"country\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Japan\"),   create.dir = FALSE,   save.report = FALSE,   buffer.dist = 20000 )   # save reports for other uses readr::write_rds(japan_slf_risk_report, file = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Japan\", \"japan_slf_risk_report.rds\"))  readr::write_rds(south_korea_slf_risk_report, file = file.path(here::here(), \"vignette-outputs\", \"reports\", \"Republic of Korea\", \"south_korea_slf_risk_report.rds\"))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/150_create_risk_report.html","id":"other","dir":"Articles","previous_headings":"Viticultural shifts due to climate change > Geographic Areas","what":"Other","title":"Example usage of create_risk_report.R to create reports of key viticultural areas","text":"brings us end analysis risk SLF climate change specific regions!","code":"## doesnt work for some reason  # New zealand slfSpread::create_risk_report(   locality.iso = \"nzl\",   locality.name = \"marlborough\",   locality.type = \"state_province\",   mypath = file.path(here::here(), \"vignette-outputs\", \"reports\", \"New Zealand\"),   create.dir = FALSE,   save.report = TRUE,   buffer.dist = 20000 )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/150_create_risk_report.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Example usage of create_risk_report.R to create reports of key viticultural areas","text":"Webb, L. B., Watterson, ., Bhend, J., Whetton, P. H., & Barlow, E. W. R. (2013). Global climate analogues winegrowing regions future periods: Projections temperature precipitation. Australian Journal Grape Wine Research, 19(3), 331–341. https://doi.org/10.1111/ajgw.12045 Morales-Castilla, ., García de Cortázar-Atauri, ., Cook, B. ., Lacombe, T., Parker, ., van Leeuwen, C., Nicholas, K. ., & Wolkovich, E. M. (2020). Diversity buffers winegrowing regions climate change losses. Proceedings National Academy Sciences, 117(6), 2864–2869. https://doi.org/10.1073/pnas.1906731117","code":""},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/150_create_risk_report.html","id":"create-faceted-maps","dir":"Articles","previous_headings":"Appendix","what":"Create faceted maps","title":"Example usage of create_risk_report.R to create reports of key viticultural areas","text":"First facet examples different risk scenarios SLF respective risk maps. use Romania, USA Spain. Romania example country high shift toward regional model predictions almost viticultural regions shift extreme high suitability, highlighting importance regional model. USA exhibits trend, strength Romania . Viticultural regions spain exhibit general shift unsuitability models. regional model seems display risk current climate, risk disappears climate change. perform operation, save reports .Rdata file can reuse later needed, without running entire script .","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/150_create_risk_report.html","id":"example-countries","dir":"Articles","previous_headings":"Appendix > Create faceted maps","what":"Example countries","title":"Example usage of create_risk_report.R to create reports of key viticultural areas","text":"","code":"romania_risk_plot <- romania_slf_risk_report[[\"viticultural_risk_plot\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"A\") +   theme(     legend.position = \"none\",      panel.border = element_rect(size = 1, linetype = \"solid\", color = \"black\"),      plot.tag.position = c(0.2, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )  # edits # remove geom_text romania_risk_plot <- romania_risk_plot %>%   gginnards::delete_layers(match_type = \"GeomLabel\") %>%   ggplot_build() # edit point size romania_risk_plot$data[[4]]$size <- 1.5 romania_risk_plot$data[[5]]$size <- 1.5 # edit linewidth #romania_risk_plot$data[[3]]$linewidth <- 0.1  romania_risk_plot <- ggplot_gtable(romania_risk_plot) %>%   wrap_ggplot_grob()    united_states_risk_plot <- united_states_slf_risk_report[[\"viticultural_risk_plot\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"C\") +   theme(     legend.position = \"none\",      panel.border = element_rect(size = 1, linetype = \"solid\", color = \"black\"),      plot.tag.position = c(0.2, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )  united_states_risk_plot <- united_states_risk_plot %>%   gginnards::delete_layers(match_type = \"GeomLabel\") %>%   ggplot_build() # edit point size united_states_risk_plot$data[[4]]$size <- 1.5 united_states_risk_plot$data[[5]]$size <- 1.5 # edit linewidth #united_states_risk_plot$data[[3]]$linewidth <- 0.1  united_states_risk_plot <- ggplot_gtable(united_states_risk_plot) %>%   wrap_ggplot_grob()      spain_risk_plot <- spain_slf_risk_report[[\"viticultural_risk_plot\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"E\") +   theme(     legend.position = \"none\",      panel.border = element_rect(size = 1, linetype = \"solid\", color = \"black\"),      plot.tag.position = c(0.2, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )  spain_risk_plot <- spain_risk_plot %>%   gginnards::delete_layers(match_type = \"GeomLabel\") %>%   ggplot_build() # edit point size spain_risk_plot$data[[4]]$size <- 1.5 spain_risk_plot$data[[5]]$size <- 1.5 # edit linewidth #spain_risk_plot$data[[3]]$linewidth <- 0.1  spain_risk_plot <- ggplot_gtable(spain_risk_plot) %>%   wrap_ggplot_grob()     # edit maps  romania_risk_map <- romania_slf_risk_report[[\"risk_maps\"]][[\"2055_risk_map\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank(),     axis.text = element_blank(),     axis.ticks = element_blank()     ) +   labs(tag = \"B\") +   theme(     legend.position = \"none\",      plot.tag.position = c(0.1, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )   romania_risk_map <- ggplot_build(romania_risk_map) # edit point size romania_risk_map$data[[3]]$size <- 1.5  romania_risk_map <- ggplot_gtable(romania_risk_map) %>%   wrap_ggplot_grob()    USA_risk_map <-  united_states_slf_risk_report[[\"risk_maps\"]][[\"2055_risk_map\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank(),     axis.text = element_blank(),     axis.ticks = element_blank()     ) +   labs(tag = \"D\") +   theme(     legend.position = \"none\",      plot.tag.position = c(0.1, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     ) +   xlim(-125, -65) +   ylim(25, 50)  USA_risk_map <- ggplot_build(USA_risk_map) # edit point size USA_risk_map$data[[3]]$size <- 1.5  USA_risk_map <- ggplot_gtable(USA_risk_map) %>%   wrap_ggplot_grob()     spain_risk_map <- spain_future +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank(),     axis.text = element_blank(),     axis.ticks = element_blank()     ) +   labs(tag = \"F\") +   theme(     legend.position = \"none\",      plot.tag.position = c(0.1, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )    spain_risk_map <- ggplot_build(spain_risk_map) # edit point size spain_risk_map$data[[3]]$size <- 1.5 # rebuild plot spain_risk_map <- ggplot_gtable(spain_risk_map) %>%   wrap_ggplot_grob() #layout <- c( #  area(t = 1, b = 1, l = 1, r = 1), #  area(t = 1, b = 1, l = 2, r = 2), ##  area(t = 2, b = 2, l = 1, r = 1), #  area(t = 2, b = 2, l = 2, r = 3), #  area(t = 3, b = 3, l = 1, r = 1), #  area(t = 3, b = 3, l = 2, r = 2) #)  example_countries_patchwork <- (   # romania top row   romania_risk_plot + plot_spacer() + romania_risk_map +    # USA 2nd row   united_states_risk_plot + plot_spacer() + USA_risk_map +    # spain 3rd row   spain_risk_plot + plot_spacer() + spain_risk_map   ) +   # annotation   plot_annotation(title = \"Differential risk shift due to climate change among countries\") +   plot_layout(ncol = 3, widths = c(1, 0, -1)) ggsave(   example_countries_patchwork,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"differential_risk_shift_countries.jpg\"),   height = 10,    width = 8,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/150_create_risk_report.html","id":"us-states","dir":"Articles","previous_headings":"Appendix > Create faceted maps","what":"US States","title":"Example usage of create_risk_report.R to create reports of key viticultural areas","text":"","code":"washington_risk_plot <- washington_slf_risk_report[[\"viticultural_risk_plot\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"A\") +   theme(     legend.position = \"none\",      panel.border = element_rect(size = 1, linetype = \"solid\", color = \"black\"),      plot.tag.position = c(0.2, 0.9),     plot.tag = element_text(face = \"bold\")     )  # edits # remove geom_text washington_risk_plot <- washington_risk_plot %>%   gginnards::delete_layers(match_type = \"GeomLabel\") %>%   ggplot_build() # edit point size washington_risk_plot$data[[4]]$size <- 1.5 washington_risk_plot$data[[5]]$size <- 1.5 # edit linewidth #washington_risk_plot$data[[3]]$linewidth <- 0.1  washington_risk_plot <- ggplot_gtable(washington_risk_plot) %>%   wrap_ggplot_grob()    oregon_risk_plot <- oregon_slf_risk_report[[\"viticultural_risk_plot\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"C\") +   theme(     legend.position = \"none\",      panel.border = element_rect(size = 1, linetype = \"solid\", color = \"black\"),      plot.tag.position = c(0.2, 0.9),     plot.tag = element_text(face = \"bold\")     )  oregon_risk_plot <- oregon_risk_plot %>%   gginnards::delete_layers(match_type = \"GeomLabel\") %>%   ggplot_build() # edit point size oregon_risk_plot$data[[4]]$size <- 1.5 oregon_risk_plot$data[[5]]$size <- 1.5 # edit linewidth #oregon_risk_plot$data[[3]]$linewidth <- 0.1  oregon_risk_plot <- ggplot_gtable(oregon_risk_plot) %>%   wrap_ggplot_grob()      michigan_risk_plot <- michigan_slf_risk_report[[\"viticultural_risk_plot\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"E\") +   theme(     legend.position = \"none\",      panel.border = element_rect(size = 1, linetype = \"solid\", color = \"black\"),      plot.tag.position = c(0.2, 0.9),     plot.tag = element_text(face = \"bold\")     )  michigan_risk_plot <- michigan_risk_plot %>%   gginnards::delete_layers(match_type = \"GeomLabel\") %>%   ggplot_build() # edit point size michigan_risk_plot$data[[4]]$size <- 1.5 michigan_risk_plot$data[[5]]$size <- 1.5 # edit linewidth #michigan_risk_plot$data[[3]]$linewidth <- 0.1  michigan_risk_plot <- ggplot_gtable(michigan_risk_plot) %>%   wrap_ggplot_grob()     # edit maps  washington_risk_map <- washington_slf_risk_report[[\"risk_maps\"]][[\"2055_risk_map\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank(),     axis.text = element_blank(),     axis.ticks = element_blank()     ) +   labs(tag = \"B\") +   theme(     legend.position = \"none\",      plot.tag.position = c(-0.1, 0.9),     plot.tag = element_text(face = \"bold\")     )   washington_risk_map <- ggplot_build(washington_risk_map) # edit point size washington_risk_map$data[[3]]$size <- 1.5  washington_risk_map <- ggplot_gtable(washington_risk_map) %>%   wrap_ggplot_grob()    oregon_risk_map <-  oregon_slf_risk_report[[\"risk_maps\"]][[\"2055_risk_map\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank(),     axis.text = element_blank(),     axis.ticks = element_blank()     ) +   labs(tag = \"D\") +   theme(     legend.position = \"none\",      plot.tag.position = c(-0.1, 0.9),     plot.tag = element_text(face = \"bold\")     )   oregon_risk_map <- ggplot_build(oregon_risk_map) # edit point size oregon_risk_map$data[[3]]$size <- 1.5  oregon_risk_map <- ggplot_gtable(oregon_risk_map) %>%   wrap_ggplot_grob()     michigan_risk_map <- michigan_slf_risk_report[[\"risk_maps\"]][[\"2055_risk_map\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank(),     axis.text = element_blank(),     axis.ticks = element_blank()     ) +   labs(tag = \"F\") +   theme(     legend.position = \"none\",      plot.tag.position = c(-0.1, 0.9),     plot.tag = element_text(face = \"bold\")     )    michigan_risk_map <- ggplot_build(michigan_risk_map) # edit point size michigan_risk_map$data[[3]]$size <- 1.5 # rebuild plot michigan_risk_map <- ggplot_gtable(michigan_risk_map) %>%   wrap_ggplot_grob() example_states_patchwork <- (   # washington top row   washington_risk_plot + plot_spacer() + washington_risk_map +    # USA 2nd row   oregon_risk_plot + plot_spacer() + oregon_risk_map +    # michigan 3rd row   michigan_risk_plot + plot_spacer() + michigan_risk_map   ) +   # annotation   plot_annotation(title = \"Risk shift in US states of future interest for viticulture\") +   plot_layout(ncol = 3, nrow = 3, widths = unit(c(5.5, 1, 5.5), \"cm\"), heights = unit(5.5, \"cm\")) ggsave(   example_states_patchwork,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"risk_shift_viticultural_states.jpg\"),   height = 8,    width = 10,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/150_create_risk_report.html","id":"viticultural-regions-of-interest--oceania","dir":"Articles","previous_headings":"Appendix > Create faceted maps","what":"Viticultural regions of interest- Oceania","title":"Example usage of create_risk_report.R to create reports of key viticultural areas","text":"","code":"new_zealand_risk_plot <- new_zealand_slf_risk_report[[\"viticultural_risk_plot\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"A\") +   theme(     legend.position = \"none\",      panel.border = element_rect(size = 1, linetype = \"solid\", color = \"black\"),      plot.tag.position = c(0.2, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )  # edits # remove geom_text new_zealand_risk_plot <- new_zealand_risk_plot %>%   gginnards::delete_layers(match_type = \"GeomLabel\") %>%   ggplot_build() # edit point size new_zealand_risk_plot$data[[4]]$size <- 1.5 new_zealand_risk_plot$data[[5]]$size <- 1.5 # edit linewidth #new_zealand_risk_plot$data[[3]]$linewidth <- 0.1  new_zealand_risk_plot <- ggplot_gtable(new_zealand_risk_plot) %>%   wrap_ggplot_grob()   # australia australia_risk_plot <- australia_slf_risk_report[[\"viticultural_risk_plot\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"C\") +   theme(     legend.position = \"none\",      panel.border = element_rect(size = 1, linetype = \"solid\", color = \"black\"),      plot.tag.position = c(0.2, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )  # edits # remove geom_text australia_risk_plot <- australia_risk_plot %>%   gginnards::delete_layers(match_type = \"GeomLabel\") %>%   ggplot_build() # edit point size australia_risk_plot$data[[4]]$size <- 1.5 australia_risk_plot$data[[5]]$size <- 1.5 # edit linewidth #australia_risk_plot$data[[3]]$linewidth <- 0.1  australia_risk_plot <- ggplot_gtable(australia_risk_plot) %>%   wrap_ggplot_grob()    # tasmania tasmania_risk_plot <- tasmania_slf_risk_report[[\"viticultural_risk_plot\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"E\") +   theme(     legend.position = \"none\",      panel.border = element_rect(size = 1, linetype = \"solid\", color = \"black\"),      plot.tag.position = c(0.2, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )  tasmania_risk_plot <- tasmania_risk_plot %>%   gginnards::delete_layers(match_type = \"GeomLabel\") %>%   ggplot_build() # edit point size tasmania_risk_plot$data[[4]]$size <- 1.5 tasmania_risk_plot$data[[5]]$size <- 1.5 # edit linewidth #tasmania_risk_plot$data[[3]]$linewidth <- 0.1  tasmania_risk_plot <- ggplot_gtable(tasmania_risk_plot) %>%   wrap_ggplot_grob()     # edit maps # new zealand new_zealand_risk_map <- new_zealand_future +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank(),     axis.text = element_blank(),     axis.ticks = element_blank()     ) +   labs(tag = \"B\") +   theme(     legend.position = \"none\",      plot.tag.position = c(0, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )   new_zealand_risk_map <- ggplot_build(new_zealand_risk_map) # edit point size new_zealand_risk_map$data[[3]]$size <- 1.5  new_zealand_risk_map <- ggplot_gtable(new_zealand_risk_map) %>%   wrap_ggplot_grob()    # australia australia_risk_map <- australia_future +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank(),     axis.text = element_blank(),     axis.ticks = element_blank()     ) +   labs(tag = \"D\") +   theme(     legend.position = \"none\",      plot.tag.position = c(-0.05, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )   australia_risk_map <- ggplot_build(australia_risk_map) # edit point size australia_risk_map$data[[3]]$size <- 1.5  australia_risk_map <- ggplot_gtable(australia_risk_map) %>%   wrap_ggplot_grob()   # tasmania tasmania_risk_map <- tasmania_slf_risk_report[[\"risk_maps\"]][[\"2055_risk_map\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank(),     axis.text = element_blank(),     axis.ticks = element_blank()     ) +   labs(tag = \"F\") +   theme(     legend.position = \"none\",      plot.tag.position = c(0, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )    tasmania_risk_map <- ggplot_build(tasmania_risk_map) # edit point size tasmania_risk_map$data[[3]]$size <- 1.5 # rebuild plot tasmania_risk_map <- ggplot_gtable(tasmania_risk_map) %>%   wrap_ggplot_grob() oceania_patchwork <- (   # new_zealand top row   new_zealand_risk_plot + plot_spacer() + new_zealand_risk_map +    # australia   australia_risk_plot + plot_spacer() + australia_risk_map +   # tasmania bottom row   tasmania_risk_plot + plot_spacer() + tasmania_risk_map   ) +   # annotation   plot_annotation(     title = \"Risk shift in regions of future interest for viticulture\",     subtitle = \"Oceania\"     ) +   plot_layout(ncol = 3, nrow = 3, widths = unit(c(5.5, 1, 5.5), \"cm\"), heights = unit(5.5, \"cm\")) ggsave(   oceania_patchwork,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"future_viticultural_regions_oceania.jpg\"),   height = 10,    width = 8,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/150_create_risk_report.html","id":"viticultural-regions-of-interest--south-america","dir":"Articles","previous_headings":"Appendix > Create faceted maps","what":"Viticultural regions of interest- South America","title":"Example usage of create_risk_report.R to create reports of key viticultural areas","text":"","code":"chile_risk_plot <- chile_slf_risk_report[[\"viticultural_risk_plot\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"A\") +   theme(     legend.position = \"none\",      panel.border = element_rect(size = 1, linetype = \"solid\", color = \"black\"),      plot.tag.position = c(0.2, 0.9),     plot.tag = element_text(face = \"bold\")     )  # edits # remove geom_text chile_risk_plot <- chile_risk_plot %>%   gginnards::delete_layers(match_type = \"GeomLabel\") %>%   ggplot_build() # edit point size chile_risk_plot$data[[4]]$size <- 1.5 chile_risk_plot$data[[5]]$size <- 1.5 # edit linewidth #chile_risk_plot$data[[3]]$linewidth <- 0.1  chile_risk_plot <- ggplot_gtable(chile_risk_plot) %>%   wrap_ggplot_grob()   argentina_risk_plot <- argentina_slf_risk_report[[\"viticultural_risk_plot\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"C\") +   theme(     legend.position = \"none\",      panel.border = element_rect(size = 1, linetype = \"solid\", color = \"black\"),      plot.tag.position = c(0.2, 0.9),     plot.tag = element_text(face = \"bold\")     )  argentina_risk_plot <- argentina_risk_plot %>%   gginnards::delete_layers(match_type = \"GeomLabel\") %>%   ggplot_build() # edit point size argentina_risk_plot$data[[4]]$size <- 1.5 argentina_risk_plot$data[[5]]$size <- 1.5 # edit linewidth #argentina_risk_plot$data[[3]]$linewidth <- 0.1  argentina_risk_plot <- ggplot_gtable(argentina_risk_plot) %>%   wrap_ggplot_grob()     # edit maps  chile_risk_map <- chile_future +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank(),     axis.text = element_blank(),     axis.ticks = element_blank()     ) +   labs(tag = \"B\") +   theme(     legend.position = \"none\",      plot.tag.position = c(0.2, 0.9),     plot.tag = element_text(face = \"bold\")     )   chile_risk_map <- ggplot_build(chile_risk_map) # edit point size chile_risk_map$data[[3]]$size <- 1.5  chile_risk_map <- ggplot_gtable(chile_risk_map) %>%   wrap_ggplot_grob()   argentina_risk_map <- argentina_slf_risk_report[[\"risk_maps\"]][[\"2055_risk_map\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank(),     axis.text = element_blank(),     axis.ticks = element_blank()     ) +   labs(tag = \"D\") +   theme(     legend.position = \"none\",      plot.tag.position = c(0.15, 0.9),     plot.tag = element_text(face = \"bold\")     )    argentina_risk_map <- ggplot_build(argentina_risk_map) # edit point size argentina_risk_map$data[[3]]$size <- 1.5 # rebuild plot argentina_risk_map <- ggplot_gtable(argentina_risk_map) %>%   wrap_ggplot_grob() SAmerica_patchwork <- (   chile_risk_plot + argentina_risk_plot +   plot_spacer() + plot_spacer() +   chile_risk_map + argentina_risk_map    ) +   # annotation   plot_annotation(     title = \"Risk shift in regions of future interest for viticulture\",     subtitle = \"South America\"     ) +   plot_layout(ncol = 2, nrow = 3, widths = unit(5, \"cm\"), heights = unit(c(5, 0, 7.5), \"cm\")) ggsave(   SAmerica_patchwork,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"future_viticultural_regions_SAmerica.jpg\"),   height = 8,    width = 8,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/150_create_risk_report.html","id":"viticultural-regions-of-interest--western-europe","dir":"Articles","previous_headings":"Appendix > Create faceted maps","what":"Viticultural regions of interest- Western Europe","title":"Example usage of create_risk_report.R to create reports of key viticultural areas","text":"","code":"# portugal portugal_risk_plot <- portugal_slf_risk_report[[\"viticultural_risk_plot\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"A\") +   theme(     legend.position = \"none\",      panel.border = element_rect(size = 1, linetype = \"solid\", color = \"black\"),      plot.tag.position = c(0.2, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )  # edits # remove geom_text portugal_risk_plot <- portugal_risk_plot %>%   gginnards::delete_layers(match_type = \"GeomLabel\") %>%   ggplot_build() # edit point size portugal_risk_plot$data[[4]]$size <- 1.5 portugal_risk_plot$data[[5]]$size <- 1.5 # edit linewidth #portugal_risk_plot$data[[3]]$linewidth <- 0.1  portugal_risk_plot <- ggplot_gtable(portugal_risk_plot) %>%   wrap_ggplot_grob()   # france france_risk_plot <- france_slf_risk_report[[\"viticultural_risk_plot\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"C\") +   theme(     legend.position = \"none\",      panel.border = element_rect(size = 1, linetype = \"solid\", color = \"black\"),      plot.tag.position = c(0.2, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )  # edits # remove geom_text france_risk_plot <- france_risk_plot %>%   gginnards::delete_layers(match_type = \"GeomLabel\") %>%   ggplot_build() # edit point size france_risk_plot$data[[4]]$size <- 1.5 france_risk_plot$data[[5]]$size <- 1.5 # edit linewidth #france_risk_plot$data[[3]]$linewidth <- 0.1  france_risk_plot <- ggplot_gtable(france_risk_plot) %>%   wrap_ggplot_grob()  # germany germany_risk_plot <- germany_slf_risk_report[[\"viticultural_risk_plot\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"E\") +   theme(     legend.position = \"none\",      panel.border = element_rect(size = 1, linetype = \"solid\", color = \"black\"),      plot.tag.position = c(0.2, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )  germany_risk_plot <- germany_risk_plot %>%   gginnards::delete_layers(match_type = \"GeomLabel\") %>%   ggplot_build() # edit point size germany_risk_plot$data[[4]]$size <- 1.5 germany_risk_plot$data[[5]]$size <- 1.5 # edit linewidth #germany_risk_plot$data[[3]]$linewidth <- 0.1  germany_risk_plot <- ggplot_gtable(germany_risk_plot) %>%   wrap_ggplot_grob()   # italy italy_risk_plot <- italy_slf_risk_report[[\"viticultural_risk_plot\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"G\") +   theme(     legend.position = \"none\",      panel.border = element_rect(size = 1, linetype = \"solid\", color = \"black\"),      plot.tag.position = c(0.2, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )  italy_risk_plot <- italy_risk_plot %>%   gginnards::delete_layers(match_type = \"GeomLabel\") %>%   ggplot_build() # edit point size italy_risk_plot$data[[4]]$size <- 1.5 italy_risk_plot$data[[5]]$size <- 1.5 # edit linewidth #italy_risk_plot$data[[3]]$linewidth <- 0.1  italy_risk_plot <- ggplot_gtable(italy_risk_plot) %>%   wrap_ggplot_grob()   # edit maps # portugal portugal_risk_map <- portugal_future +   xlim(-10, -6) +   ylim(37, 42) +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank(),     axis.text = element_blank(),     axis.ticks = element_blank()     ) +   labs(tag = \"B\") +   theme(     legend.position = \"none\",      plot.tag.position = c(0.1, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )   portugal_risk_map <- ggplot_build(portugal_risk_map) # edit point size portugal_risk_map$data[[3]]$size <- 1.5  portugal_risk_map <- ggplot_gtable(portugal_risk_map) %>%   wrap_ggplot_grob()    # france france_risk_map <- france_future +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank(),     axis.text = element_blank(),     axis.ticks = element_blank()     ) +   labs(tag = \"D\") +   theme(     legend.position = \"none\",      plot.tag.position = c(0.1, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )   france_risk_map <- ggplot_build(france_risk_map) # edit point size france_risk_map$data[[3]]$size <- 1.5  france_risk_map <- ggplot_gtable(france_risk_map) %>%   wrap_ggplot_grob()  # germany map germany_risk_map <- germany_slf_risk_report[[\"risk_maps\"]][[\"2055_risk_map\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank(),     axis.text = element_blank(),     axis.ticks = element_blank()     ) +   labs(tag = \"F\") +   theme(     legend.position = \"none\",      plot.tag.position = c(0.05, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )    germany_risk_map <- ggplot_build(germany_risk_map) # edit point size germany_risk_map$data[[3]]$size <- 1.5 # rebuild plot germany_risk_map <- ggplot_gtable(germany_risk_map) %>%   wrap_ggplot_grob()    # italy map italy_risk_map <- italy_slf_risk_report[[\"risk_maps\"]][[\"2055_risk_map\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank(),     axis.text = element_blank(),     axis.ticks = element_blank()     ) +   labs(tag = \"H\") +   theme(     legend.position = \"none\",      plot.tag.position = c(0.05, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )    italy_risk_map <- ggplot_build(italy_risk_map) # edit point size italy_risk_map$data[[3]]$size <- 1.5 # rebuild plot italy_risk_map <- ggplot_gtable(italy_risk_map) %>%   wrap_ggplot_grob() west_europe_patchwork <- (   portugal_risk_plot + plot_spacer() + portugal_risk_map +   france_risk_plot + plot_spacer() + france_risk_map +   germany_risk_plot + plot_spacer() + germany_risk_map +   italy_risk_plot + plot_spacer() + italy_risk_map    ) +   # annotation   plot_annotation(     title = \"Risk shift in regions of future interest for viticulture\",     subtitle = \"Western Europe\"     ) +   plot_layout(ncol = 3, nrow = 4, widths = unit(c(5.5, 1, 5.5), \"cm\"), heights = unit(5.5, \"cm\")) ggsave(   west_europe_patchwork,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"future_viticultural_regions_western_europe.jpg\"),   height = 12,    width = 8,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/150_create_risk_report.html","id":"viticultural-regions-of-interest--eastern-europe","dir":"Articles","previous_headings":"Appendix > Create faceted maps","what":"Viticultural regions of interest- Eastern Europe","title":"Example usage of create_risk_report.R to create reports of key viticultural areas","text":"","code":"# portugal austria_risk_plot <- austria_slf_risk_report[[\"viticultural_risk_plot\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"A\") +   theme(     legend.position = \"none\",      panel.border = element_rect(size = 1, linetype = \"solid\", color = \"black\"),      plot.tag.position = c(0.2, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )  # edits # remove geom_text austria_risk_plot <- austria_risk_plot %>%   gginnards::delete_layers(match_type = \"GeomLabel\") %>%   ggplot_build() # edit point size austria_risk_plot$data[[4]]$size <- 1.5 austria_risk_plot$data[[5]]$size <- 1.5 # edit linewidth #austria_risk_plot$data[[3]]$linewidth <- 0.1  austria_risk_plot <- ggplot_gtable(austria_risk_plot) %>%   wrap_ggplot_grob()   # france hungary_risk_plot <- hungary_slf_risk_report[[\"viticultural_risk_plot\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"C\") +   theme(     legend.position = \"none\",      panel.border = element_rect(size = 1, linetype = \"solid\", color = \"black\"),      plot.tag.position = c(0.2, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )  # edits # remove geom_text hungary_risk_plot <- hungary_risk_plot %>%   gginnards::delete_layers(match_type = \"GeomLabel\") %>%   ggplot_build() # edit point size hungary_risk_plot$data[[4]]$size <- 1.5 hungary_risk_plot$data[[5]]$size <- 1.5 # edit linewidth #hungary_risk_plot$data[[3]]$linewidth <- 0.1  hungary_risk_plot <- ggplot_gtable(hungary_risk_plot) %>%   wrap_ggplot_grob()  # czechia czechia_risk_plot <- czechia_slf_risk_report[[\"viticultural_risk_plot\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"E\") +   theme(     legend.position = \"none\",      panel.border = element_rect(size = 1, linetype = \"solid\", color = \"black\"),      plot.tag.position = c(0.2, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )  czechia_risk_plot <- czechia_risk_plot %>%   gginnards::delete_layers(match_type = \"GeomLabel\") %>%   ggplot_build() # edit point size czechia_risk_plot$data[[4]]$size <- 1.5 czechia_risk_plot$data[[5]]$size <- 1.5 # edit linewidth #czechia_risk_plot$data[[3]]$linewidth <- 0.1  czechia_risk_plot <- ggplot_gtable(czechia_risk_plot) %>%   wrap_ggplot_grob()   # italy greece_risk_plot <- greece_slf_risk_report[[\"viticultural_risk_plot\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"G\") +   theme(     legend.position = \"none\",      panel.border = element_rect(size = 1, linetype = \"solid\", color = \"black\"),      plot.tag.position = c(0.2, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )  greece_risk_plot <- greece_risk_plot %>%   gginnards::delete_layers(match_type = \"GeomLabel\") %>%   ggplot_build() # edit point size greece_risk_plot$data[[4]]$size <- 1.5 greece_risk_plot$data[[5]]$size <- 1.5 # edit linewidth #greece_risk_plot$data[[3]]$linewidth <- 0.1  greece_risk_plot <- ggplot_gtable(greece_risk_plot) %>%   wrap_ggplot_grob()   # edit maps # hungary austria_risk_map <- austria_slf_risk_report[[\"risk_maps\"]][[\"2055_risk_map\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank(),     axis.text = element_blank(),     axis.ticks = element_blank()     ) +   labs(tag = \"B\") +   theme(     legend.position = \"none\",      plot.tag.position = c(0.1, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )   austria_risk_map <- ggplot_build(austria_risk_map) # edit point size austria_risk_map$data[[3]]$size <- 1.5  austria_risk_map <- ggplot_gtable(austria_risk_map) %>%   wrap_ggplot_grob()    # hungary hungary_risk_map <- hungary_slf_risk_report[[\"risk_maps\"]][[\"2055_risk_map\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank(),     axis.text = element_blank(),     axis.ticks = element_blank()     ) +   labs(tag = \"D\") +   theme(     legend.position = \"none\",      plot.tag.position = c(0.1, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )   hungary_risk_map <- ggplot_build(hungary_risk_map) # edit point size hungary_risk_map$data[[3]]$size <- 1.5  hungary_risk_map <- ggplot_gtable(hungary_risk_map) %>%   wrap_ggplot_grob()  # czechia map czechia_risk_map <- czechia_slf_risk_report[[\"risk_maps\"]][[\"2055_risk_map\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank(),     axis.text = element_blank(),     axis.ticks = element_blank()     ) +   labs(tag = \"F\") +   theme(     legend.position = \"none\",      plot.tag.position = c(0.1, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )    czechia_risk_map <- ggplot_build(czechia_risk_map) # edit point size czechia_risk_map$data[[3]]$size <- 1.5 # rebuild plot czechia_risk_map <- ggplot_gtable(czechia_risk_map) %>%   wrap_ggplot_grob()    # greece map greece_risk_map <- greece_slf_risk_report[[\"risk_maps\"]][[\"2055_risk_map\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank(),     axis.text = element_blank(),     axis.ticks = element_blank()     ) +   labs(tag = \"H\") +   theme(     legend.position = \"none\",      plot.tag.position = c(0.1, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )    greece_risk_map <- ggplot_build(greece_risk_map) # edit point size greece_risk_map$data[[3]]$size <- 1.5 # rebuild plot greece_risk_map <- ggplot_gtable(greece_risk_map) %>%   wrap_ggplot_grob() east_europe_patchwork <- (   austria_risk_plot + plot_spacer() + austria_risk_map +   hungary_risk_plot + plot_spacer() + hungary_risk_map +   czechia_risk_plot + plot_spacer() + czechia_risk_map +   greece_risk_plot + plot_spacer() + greece_risk_map    ) +   # annotation   plot_annotation(     title = \"Risk shift in regions of future interest for viticulture\",     subtitle = \"Eastern Europe\"     ) +   plot_layout(ncol = 3, nrow = 4, widths = unit(c(5.5, 1, 5.5), \"cm\"), heights = unit(5.5, \"cm\")) ggsave(   east_europe_patchwork,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"future_viticultural_regions_eastern_europe.jpg\"),   height = 12,    width = 8,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/150_create_risk_report.html","id":"viticultural-regions-of-interest--africa","dir":"Articles","previous_headings":"Appendix > Create faceted maps","what":"Viticultural regions of interest- Africa","title":"Example usage of create_risk_report.R to create reports of key viticultural areas","text":"","code":"# south_africa south_africa_risk_plot <- south_africa_slf_risk_report[[\"viticultural_risk_plot\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"A\") +   theme(     legend.position = \"none\",      panel.border = element_rect(size = 1, linetype = \"solid\", color = \"black\"),      plot.tag.position = c(0.2, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     ) # edits # remove geom_text south_africa_risk_plot <- south_africa_risk_plot %>%   gginnards::delete_layers(match_type = \"GeomLabel\") %>%   ggplot_build() # edit point size south_africa_risk_plot$data[[4]]$size <- 1.5 south_africa_risk_plot$data[[5]]$size <- 1.5 # edit linewidth #algeria_risk_plot$data[[3]]$linewidth <- 0.1  south_africa_risk_plot <- ggplot_gtable(south_africa_risk_plot) %>%   wrap_ggplot_grob()    # algeria algeria_risk_plot <- algeria_slf_risk_report[[\"viticultural_risk_plot\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"C\") +   theme(     legend.position = \"none\",      panel.border = element_rect(size = 1, linetype = \"solid\", color = \"black\"),      plot.tag.position = c(0.2, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )  # edits # remove geom_text algeria_risk_plot <- algeria_risk_plot %>%   gginnards::delete_layers(match_type = \"GeomLabel\") %>%   ggplot_build() # edit point size algeria_risk_plot$data[[4]]$size <- 1.5 algeria_risk_plot$data[[5]]$size <- 1.5 # edit linewidth #algeria_risk_plot$data[[3]]$linewidth <- 0.1  algeria_risk_plot <- ggplot_gtable(algeria_risk_plot) %>%   wrap_ggplot_grob()   # edit maps # south_africa south_africa_risk_map <- south_africa_future +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank(),     axis.text = element_blank(),     axis.ticks = element_blank()     ) +   labs(tag = \"B\") +   theme(     legend.position = \"none\",      plot.tag.position = c(0.1, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )   south_africa_risk_map <- ggplot_build(south_africa_risk_map) # edit point size south_africa_risk_map$data[[3]]$size <- 1.5  south_africa_risk_map <- ggplot_gtable(south_africa_risk_map) %>%   wrap_ggplot_grob()   # algeria algeria_risk_map <- algeria_slf_risk_report[[\"risk_maps\"]][[\"2055_risk_map\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank(),     axis.text = element_blank(),     axis.ticks = element_blank()     ) +   labs(tag = \"D\") +   theme(     legend.position = \"none\",      plot.tag.position = c(0.1, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )   algeria_risk_map <- ggplot_build(algeria_risk_map) # edit point size algeria_risk_map$data[[3]]$size <- 1.5  algeria_risk_map <- ggplot_gtable(algeria_risk_map) %>%   wrap_ggplot_grob() africa_patchwork <- (   south_africa_risk_plot + plot_spacer() + south_africa_risk_map +   algeria_risk_plot + plot_spacer() + algeria_risk_map   ) +   # annotation   plot_annotation(     title = \"Risk shift in regions of future interest for viticulture\",     subtitle = \"Africa\"     ) +   plot_layout(ncol = 3, nrow = 2, widths = unit(c(5.5, 1, 5.5), \"cm\"), heights = unit(5.5, \"cm\")) ggsave(   africa_patchwork,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"future_viticultural_regions_africa.jpg\"),   height = 8,    width = 8,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/150_create_risk_report.html","id":"viticultural-regions-of-interest--north-america","dir":"Articles","previous_headings":"Appendix > Create faceted maps","what":"Viticultural regions of interest- North America","title":"Example usage of create_risk_report.R to create reports of key viticultural areas","text":"","code":"# canada canada_risk_plot <- canada_slf_risk_report[[\"viticultural_risk_plot\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"A\") +   theme(     legend.position = \"none\",      panel.border = element_rect(size = 1, linetype = \"solid\", color = \"black\"),      plot.tag.position = c(0.2, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )  # edits # remove geom_text canada_risk_plot <- canada_risk_plot %>%   gginnards::delete_layers(match_type = \"GeomLabel\") %>%   ggplot_build() # edit point size canada_risk_plot$data[[4]]$size <- 1.5 canada_risk_plot$data[[5]]$size <- 1.5 # edit linewidth #canada_risk_plot$data[[3]]$linewidth <- 0.1  canada_risk_plot <- ggplot_gtable(canada_risk_plot) %>%   wrap_ggplot_grob()    # mexico mexico_risk_plot <- mexico_slf_risk_report[[\"viticultural_risk_plot\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"C\") +   theme(     legend.position = \"none\",      panel.border = element_rect(size = 1, linetype = \"solid\", color = \"black\"),      plot.tag.position = c(0.2, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )  # edits # remove geom_text mexico_risk_plot <- mexico_risk_plot %>%   gginnards::delete_layers(match_type = \"GeomLabel\") %>%   ggplot_build() # edit point size mexico_risk_plot$data[[4]]$size <- 1.5 mexico_risk_plot$data[[5]]$size <- 1.5 # edit linewidth #mexico_risk_plot$data[[3]]$linewidth <- 0.1  mexico_risk_plot <- ggplot_gtable(mexico_risk_plot) %>%   wrap_ggplot_grob()   # edit maps # canada canada_risk_map <- canada_slf_risk_report[[\"risk_maps\"]][[\"2055_risk_map\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank(),     axis.text = element_blank(),     axis.ticks = element_blank()     ) +   labs(tag = \"B\") +   theme(     legend.position = \"none\",      plot.tag.position = c(0.1, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )   canada_risk_map <- ggplot_build(canada_risk_map) # edit point size canada_risk_map$data[[3]]$size <- 1.5  canada_risk_map <- ggplot_gtable(canada_risk_map) %>%   wrap_ggplot_grob()   # mexico mexico_risk_map <- mexico_slf_risk_report[[\"risk_maps\"]][[\"2055_risk_map\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank(),     axis.text = element_blank(),     axis.ticks = element_blank()     ) +   labs(tag = \"D\") +   theme(     legend.position = \"none\",      plot.tag.position = c(0.1, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )   mexico_risk_map <- ggplot_build(mexico_risk_map) # edit point size mexico_risk_map$data[[3]]$size <- 1.5  mexico_risk_map <- ggplot_gtable(mexico_risk_map) %>%   wrap_ggplot_grob() NAmerica_patchwork <- (     canada_risk_plot + plot_spacer() + canada_risk_map +     mexico_risk_plot + plot_spacer() + mexico_risk_map   ) +   # annotation   plot_annotation(     title = \"Risk shift in regions of future interest for viticulture\",     subtitle = \"North America\"     ) +   plot_layout(ncol = 3, nrow = 2, widths = unit(c(5.5, 1, 5.5), \"cm\"), heights = unit(5.5, \"cm\")) ggsave(   NAmerica_patchwork,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"future_viticultural_regions_north_america.jpg\"),   height = 8,    width = 8,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/150_create_risk_report.html","id":"viticultural-regions-of-interest--west-asia","dir":"Articles","previous_headings":"Appendix > Create faceted maps","what":"Viticultural regions of interest- West Asia","title":"Example usage of create_risk_report.R to create reports of key viticultural areas","text":"","code":"# türkiye türkiye_risk_plot <- türkiye_slf_risk_report[[\"viticultural_risk_plot\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"A\") +   theme(     legend.position = \"none\",      panel.border = element_rect(size = 1, linetype = \"solid\", color = \"black\"),      plot.tag.position = c(0.2, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )  # edits # remove geom_text türkiye_risk_plot <- türkiye_risk_plot %>%   gginnards::delete_layers(match_type = \"GeomLabel\") %>%   ggplot_build() # edit point size türkiye_risk_plot$data[[4]]$size <- 1.5 türkiye_risk_plot$data[[5]]$size <- 1.5 # edit linewidth #türkiye_risk_plot$data[[3]]$linewidth <- 0.1  türkiye_risk_plot <- ggplot_gtable(türkiye_risk_plot) %>%   wrap_ggplot_grob()    # georgia georgia_risk_plot <- georgia_slf_risk_report[[\"viticultural_risk_plot\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"C\") +   theme(     legend.position = \"none\",      panel.border = element_rect(size = 1, linetype = \"solid\", color = \"black\"),      plot.tag.position = c(0.2, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )  # edits # remove geom_text georgia_risk_plot <- georgia_risk_plot %>%   gginnards::delete_layers(match_type = \"GeomLabel\") %>%   ggplot_build() # edit point size georgia_risk_plot$data[[4]]$size <- 1.5 georgia_risk_plot$data[[5]]$size <- 1.5 # edit linewidth #georgia_risk_plot$data[[3]]$linewidth <- 0.1  georgia_risk_plot <- ggplot_gtable(georgia_risk_plot) %>%   wrap_ggplot_grob()   # edit maps # türkiye türkiye_risk_map <- türkiye_slf_risk_report[[\"risk_maps\"]][[\"2055_risk_map\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank(),     axis.text = element_blank(),     axis.ticks = element_blank()     ) +   labs(tag = \"B\") +   theme(     legend.position = \"none\",      plot.tag.position = c(0.1, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )   türkiye_risk_map <- ggplot_build(türkiye_risk_map) # edit point size türkiye_risk_map$data[[3]]$size <- 1.5  türkiye_risk_map <- ggplot_gtable(türkiye_risk_map) %>%   wrap_ggplot_grob()   # georgia georgia_risk_map <- georgia_slf_risk_report[[\"risk_maps\"]][[\"2055_risk_map\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank(),     axis.text = element_blank(),     axis.ticks = element_blank()     ) +   labs(tag = \"D\") +   theme(     legend.position = \"none\",      plot.tag.position = c(0.1, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )   georgia_risk_map <- ggplot_build(georgia_risk_map) # edit point size georgia_risk_map$data[[3]]$size <- 1.5  georgia_risk_map <- ggplot_gtable(georgia_risk_map) %>%   wrap_ggplot_grob() west_asia_patchwork <- (     türkiye_risk_plot + plot_spacer() + türkiye_risk_map +     georgia_risk_plot + plot_spacer() + georgia_risk_map   ) +   # annotation   plot_annotation(     title = \"Risk shift in regions of future interest for viticulture\",     subtitle = \"Western Asia\"     ) +   plot_layout(ncol = 3, nrow = 2, widths = unit(c(5.5, 1, 5.5), \"cm\"), heights = unit(5.5, \"cm\")) ggsave(   west_asia_patchwork,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"future_viticultural_regions_west_asia.jpg\"),   height = 8,    width = 8,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/150_create_risk_report.html","id":"viticultural-regions-of-interest--east-asia","dir":"Articles","previous_headings":"Appendix > Create faceted maps","what":"Viticultural regions of interest- East Asia","title":"Example usage of create_risk_report.R to create reports of key viticultural areas","text":"","code":"# china china_risk_plot <- china_slf_risk_report[[\"viticultural_risk_plot\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"A\") +   theme(     legend.position = \"none\",      panel.border = element_rect(size = 1, linetype = \"solid\", color = \"black\"),      plot.tag.position = c(0.2, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )  # edits # remove geom_text china_risk_plot <- china_risk_plot %>%   gginnards::delete_layers(match_type = \"GeomLabel\") %>%   ggplot_build() # edit point size china_risk_plot$data[[4]]$size <- 1.5 china_risk_plot$data[[5]]$size <- 1.5 # edit linewidth #china_risk_plot$data[[3]]$linewidth <- 0.1  china_risk_plot <- ggplot_gtable(china_risk_plot) %>%   wrap_ggplot_grob()   # south_korea south_korea_risk_plot <- south_korea_slf_risk_report[[\"viticultural_risk_plot\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"C\") +   theme(     legend.position = \"none\",      panel.border = element_rect(size = 1, linetype = \"solid\", color = \"black\"),      plot.tag.position = c(0.2, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )  # edits # remove geom_text south_korea_risk_plot <- south_korea_risk_plot %>%   gginnards::delete_layers(match_type = \"GeomLabel\") %>%   ggplot_build() # edit point size south_korea_risk_plot$data[[4]]$size <- 1.5 south_korea_risk_plot$data[[5]]$size <- 1.5 # edit linewidth #south_korea_risk_plot$data[[3]]$linewidth <- 0.1  south_korea_risk_plot <- ggplot_gtable(south_korea_risk_plot) %>%   wrap_ggplot_grob()    # japan japan_risk_plot <- japan_slf_risk_report[[\"viticultural_risk_plot\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"E\") +   theme(     legend.position = \"none\",      panel.border = element_rect(size = 1, linetype = \"solid\", color = \"black\"),      plot.tag.position = c(0.2, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )  japan_risk_plot <- japan_risk_plot %>%   gginnards::delete_layers(match_type = \"GeomLabel\") %>%   ggplot_build() # edit point size japan_risk_plot$data[[4]]$size <- 1.5 japan_risk_plot$data[[5]]$size <- 1.5 # edit linewidth #japan_risk_plot$data[[3]]$linewidth <- 0.1  japan_risk_plot <- ggplot_gtable(japan_risk_plot) %>%   wrap_ggplot_grob()     # edit maps # new zealand china_risk_map <- china_slf_risk_report[[\"risk_maps\"]][[\"2055_risk_map\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank(),     axis.text = element_blank(),     axis.ticks = element_blank()     ) +   labs(tag = \"B\") +   theme(     legend.position = \"none\",      plot.tag.position = c(-0.1, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )   china_risk_map <- ggplot_build(china_risk_map) # edit point size china_risk_map$data[[3]]$size <- 1.5  china_risk_map <- ggplot_gtable(china_risk_map) %>%   wrap_ggplot_grob()    # south_korea south_korea_risk_map <- south_korea_slf_risk_report[[\"risk_maps\"]][[\"2055_risk_map\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank(),     axis.text = element_blank(),     axis.ticks = element_blank()     ) +   labs(tag = \"D\") +   theme(     legend.position = \"none\",      plot.tag.position = c(-0.1, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )   south_korea_risk_map <- ggplot_build(south_korea_risk_map) # edit point size south_korea_risk_map$data[[3]]$size <- 1.5  south_korea_risk_map <- ggplot_gtable(south_korea_risk_map) %>%   wrap_ggplot_grob()   # japan japan_risk_map <- japan_slf_risk_report[[\"risk_maps\"]][[\"2055_risk_map\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank(),     axis.text = element_blank(),     axis.ticks = element_blank()     ) +   labs(tag = \"F\") +   theme(     legend.position = \"none\",      plot.tag.position = c(-0.1, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )    japan_risk_map <- ggplot_build(japan_risk_map) # edit point size japan_risk_map$data[[3]]$size <- 1.5 # rebuild plot japan_risk_map <- ggplot_gtable(japan_risk_map) %>%   wrap_ggplot_grob() east_asia_patchwork <- (   # china top row   china_risk_plot + plot_spacer() + china_risk_map +    # south_korea   south_korea_risk_plot + plot_spacer() + south_korea_risk_map +   # japan bottom row   japan_risk_plot + plot_spacer() + japan_risk_map   ) +   # annotation   plot_annotation(     title = \"Risk shift in regions of future interest for viticulture\",     subtitle = \"Eastern Asia\"     ) +   plot_layout(ncol = 3, nrow = 3, widths = unit(c(5.5, 1, 5.5), \"cm\"), heights = unit(5.5, \"cm\")) ggsave(   east_asia_patchwork,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"future_viticultural_regions_east_asia.jpg\"),   height = 10,    width = 8,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/150_create_risk_report.html","id":"patchwork-usa-maps","dir":"Articles","previous_headings":"Appendix > Create faceted maps","what":"Patchwork USA maps","title":"Example usage of create_risk_report.R to create reports of key viticultural areas","text":"","code":"USA_risk_map_present <-  united_states_slf_risk_report[[\"risk_maps\"]][[\"current_risk_map\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"Present\") +   theme(     legend.position = \"none\",      plot.tag.position = c(0.15, 0.20),     plot.tag = element_text(face = \"bold\", size = 20)     ) +   xlim(-125, -65) +   ylim(25, 50)  USA_risk_map_present <- ggplot_build(USA_risk_map_present) # edit point size USA_risk_map_present$data[[3]]$size <- 1.5  USA_risk_map_present <- ggplot_gtable(USA_risk_map_present) %>%   wrap_ggplot_grob()     USA_risk_map_future <-  united_states_slf_risk_report[[\"risk_maps\"]][[\"2055_risk_map\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"Future\") +   theme(     legend.position = \"none\",      plot.tag.position = c(0.15, 0.2),     plot.tag = element_text(face = \"bold\", size = 20)     ) +   xlim(-125, -65) +   ylim(25, 50)  USA_risk_map_future <- ggplot_build(USA_risk_map_future) # edit point size USA_risk_map_future$data[[3]]$size <- 1.5  USA_risk_map_future <- ggplot_gtable(USA_risk_map_future) %>%   wrap_ggplot_grob() USA_patchwork <- (   # romania top row   USA_risk_map_present / USA_risk_map_future    ) +   # annotation   plot_annotation(title = \"USA risk maps\") ggsave(   USA_patchwork,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"USA_risk_maps.jpg\"),   height = 10,    width = 8,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/150_create_risk_report.html","id":"patchwork-washington-maps","dir":"Articles","previous_headings":"Appendix > Create faceted maps","what":"Patchwork washington maps","title":"Example usage of create_risk_report.R to create reports of key viticultural areas","text":"","code":"WA_risk_map_present <-  washington_slf_risk_report[[\"risk_maps\"]][[\"current_risk_map\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"Present\") +   theme(     legend.position = \"none\",      plot.tag.position = c(0.15, 0.15),     plot.tag = element_text(face = \"bold\", size = 20)     )   WA_risk_map_present <- ggplot_build(WA_risk_map_present) # edit point size WA_risk_map_present$data[[3]]$size <- 1.5  WA_risk_map_present <- ggplot_gtable(WA_risk_map_present) %>%   wrap_ggplot_grob()     WA_risk_map_future <-  washington_slf_risk_report[[\"risk_maps\"]][[\"2055_risk_map\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"Future\") +   theme(     legend.position = \"none\",      plot.tag.position = c(0.15, 0.15),     plot.tag = element_text(face = \"bold\", size = 20)     )  WA_risk_map_future <- ggplot_build(WA_risk_map_future) # edit point size WA_risk_map_future$data[[3]]$size <- 1.5  WA_risk_map_future <- ggplot_gtable(WA_risk_map_future) %>%   wrap_ggplot_grob() WA_patchwork <- (   # romania top row   WA_risk_map_present / WA_risk_map_future    ) +   # annotation   plot_annotation(title = \"washington risk maps\") ggsave(   WA_patchwork,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"washington_risk_maps.jpg\"),   height = 10,    width = 8,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/160_generate_format_figures.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Format risk tables for SLF populations and viticultural regions","text":"vignette, format assortment tables figures publication: IVR risk tables SLF risk tables SLF risk plots- faceted country Map globally important viticultural regions bioclim variables","code":""},{"path":"https://ieco-lab.github.io/slfSpread/articles/160_generate_format_figures.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Format risk tables for SLF populations and viticultural regions","text":"Note: setting global options document certain code chunks rendered final .html file. set eval = FALSE none code re-run (preventing files overwritten knitting) simply overwrite chunks plots.","code":"# general tools library(tidyverse)  #data manipulation library(here) #making directory pathways easier on different instances here::here() # here() starts at the root folder of this package. ## [1] \"C:/Users/tun83449/Documents/GitHub/slfSpread\" library(devtools)  # spatial data handling library(terra) library(tidygeocoder) # analysis 7  # table aesthetics library(scales) library(grid) library(patchwork) library(formattable) library(kableExtra) library(webshot) library(webshot2)"},{"path":"https://ieco-lab.github.io/slfSpread/articles/160_generate_format_figures.html","id":"ivr-risk-table","dir":"Articles","previous_headings":"","what":"IVR risk table","title":"Format risk tables for SLF populations and viticultural regions","text":"calculate percentage IVRs increase decrease risk overall report paper. reporting purposes, see 69.7% 1063 IVRs experience change risk SLF establishment due climate change 2055. Meanwhile, 1.7% actually experience increase risk due climate change remaining 28.6% move one levels risk 2055. Now format export table. add colored proportion bars columns, indicate category distribution IVRs entering risk category. words, columns represent risk category 2055, proportion bars represent distribution current risk category points move 2055. also add positive negative signs indicate risk increase decrease. diagonal (top L bottom R) signs represents shift risk 2055. points experiencing decline risk sit diagonal, points experiencing increase risk sit diagonal.","code":"IVR_risk_table <- read.csv(file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"IVR_risk_table.csv\"), row.names = 1) %>%   dplyr::rename(     \"extreme_2055\" = \"extreme\",     \"high_2055\" = \"high\",     \"moderate_2055\" = \"moderate\",     \"low_2055\" = \"low\"   )  # change rownames rownames(IVR_risk_table) <- c(\"extreme_present\", \"high_present\", \"moderate_present\", \"low_present\", \"total_2055\") total_IVR <- sum(IVR_risk_table[1:4, 1:4])  IVR_shift_prop_table <- tibble(   risk_shift = c(\"no_shift\", \"risk_increase\", \"risk_decrease\"),   prop_change = c(     sum(IVR_risk_table[1, 1], IVR_risk_table[2, 2], IVR_risk_table[3, 3], IVR_risk_table[4, 4]) / total_IVR,     sum(IVR_risk_table[2:4, 1], IVR_risk_table[3:4, 2], IVR_risk_table[4, 3]) / total_IVR,     sum(IVR_risk_table[1, 2], IVR_risk_table[1:2, 3], IVR_risk_table[1:3, 4]) / total_IVR   ) ) %>%   # make % format   dplyr::mutate(prop_change = scales::label_percent(accuracy = 0.01) (prop_change)) # make kable IVR_shift_prop_table <- knitr::kable(IVR_shift_prop_table, \"html\", escape = FALSE) %>%    kableExtra::kable_styling(bootstrap_options = \"striped\", full_width = FALSE) %>%   # standardize col width   kableExtra::column_spec(1:2, width_min = '4cm') %>%   kableExtra::add_header_above(., header = c(\"IVR risk table shift proportions\" = 2), bold = TRUE)   # save as .html kableExtra::save_kable(   IVR_shift_prop_table,    file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"IVR_risk_table_shift_prop.html\"),   self_contained = TRUE   )  # initialize webshot by  # webshot::install_phantomjs() # convert to pdf webshot::webshot(   url = file.path(here::here(), \"vignette-outputs\", \"figures\", \"IVR_risk_table_shift_prop.html\"),   file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"IVR_risk_table_shift_prop.jpg\"),   zoom = 4 )  # rm html file.remove(file.path(here::here(), \"vignette-outputs\", \"figures\", \"IVR_risk_table_shift_prop.html\")) # convert top half (above diagonal) to negative numbers IVR_risk_table[1, 2] <- -(IVR_risk_table[1, 2]) IVR_risk_table[1:2, 3] <- -(IVR_risk_table[1:2, 3]) IVR_risk_table[1:3, 4] <- -(IVR_risk_table[1:3, 4])  # add positive sign to bottom half IVR_risk_table[2:4, 1] <- sprintf(\"%+.0f\", IVR_risk_table[2:4, 1]) IVR_risk_table[3:4, 2] <- sprintf(\"%+.0f\", IVR_risk_table[3:4, 2]) IVR_risk_table[4, 3] <- sprintf(\"%+.0f\", IVR_risk_table[4, 3])  # add color formatting to totals # extreme risk IVR_risk_table[1, 5] <- cell_spec(IVR_risk_table[1, 5], format = \"html\", bold = TRUE, escape = FALSE, color = \"darkred\") IVR_risk_table[5, 1] <- cell_spec(IVR_risk_table[5, 1], format = \"html\", bold = TRUE, escape = FALSE, color = \"darkred\") # high risk IVR_risk_table[2, 5] <- cell_spec(IVR_risk_table[2, 5], format = \"html\", bold = TRUE, escape = FALSE, color = \"darkorange\") IVR_risk_table[5, 2] <- cell_spec(IVR_risk_table[5, 2], format = \"html\", bold = TRUE, escape = FALSE, color = \"darkorange\") # moderate risk IVR_risk_table[3, 5] <- cell_spec(IVR_risk_table[3, 5], format = \"html\", bold = TRUE, escape = FALSE, color = \"gold\") IVR_risk_table[5, 3] <- cell_spec(IVR_risk_table[5, 3], format = \"html\", bold = TRUE, escape = FALSE, color = \"gold\") # low risk IVR_risk_table[4, 5] <- cell_spec(IVR_risk_table[4, 5], format = \"html\", bold = TRUE, escape = FALSE, color = \"darkgrey\") IVR_risk_table[5, 4] <- cell_spec(IVR_risk_table[5, 4], format = \"html\", bold = TRUE, escape = FALSE, color = \"darkgrey\")  # bold total IVR_risk_table[5, 5] <- cell_spec(IVR_risk_table[5, 5], format = \"html\", bold = TRUE, escape = FALSE)  # print table, e.g., in html format IVR_risk_table <- kable(IVR_risk_table, format = \"html\", escape = FALSE) %>%    kableExtra::kable_styling(bootstrap_options = \"striped\", full_width = FALSE) %>%   # standardize col width   kableExtra::column_spec(1:5, width_min = '4cm') %>%   # add footnotes   kableExtra::add_footnote(\"number signs indicate whether climate change is increasing (+) or decreasing (-) risk\", notation = \"alphabet\") %>%   # add header   kableExtra::add_header_above(., header = c(\"Risk of L delicatula establishment in globally important viticultural regions\" = 6), bold = TRUE) # save as .html kableExtra::save_kable(   IVR_risk_table,    file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"IVR_risk_table.html\"),   self_contained = TRUE   )  # initialize webshot by  # webshot::install_phantomjs() # convert to pdf webshot::webshot(   url = file.path(here::here(), \"vignette-outputs\", \"figures\", \"IVR_risk_table.html\"),   file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"IVR_risk_table.jpg\"),   zoom = 4 )  # rm html file.remove(file.path(here::here(), \"vignette-outputs\", \"figures\", \"IVR_risk_table.html\"))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/160_generate_format_figures.html","id":"slf-risk-table","dir":"Articles","previous_headings":"","what":"SLF risk table","title":"Format risk tables for SLF populations and viticultural regions","text":"SLF populations. reporting purposes, see 86.2% 769 slf populations experience change risk persistence due climate change 2055. Meanwhile, 2.7% actually experience increase risk due climate change remaining 11% move one levels risk 2055.","code":"slf_risk_table <- read.csv(file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"slf_risk_table.csv\"), row.names = 1) %>%   dplyr::rename(     \"extreme_2055\" = \"extreme\",     \"high_2055\" = \"high\",     \"moderate_2055\" = \"moderate\",     \"low_2055\" = \"low\"   )  # change rownames rownames(slf_risk_table) <- c(\"extreme_present\", \"high_present\", \"moderate_present\", \"low_present\", \"total_2055\") total_slf <- sum(slf_risk_table[1:4, 1:4])  slf_shift_prop_table <- tibble(   risk_shift = c(\"no_shift\", \"risk_increase\", \"risk_decrease\"),   prop_change = c(     sum(slf_risk_table[1, 1], slf_risk_table[2, 2], slf_risk_table[3, 3], slf_risk_table[4, 4]) / total_slf,     sum(slf_risk_table[2:4, 1], slf_risk_table[3:4, 2], slf_risk_table[4, 3]) / total_slf,     sum(slf_risk_table[1, 2], slf_risk_table[1:2, 3], slf_risk_table[1:3, 4]) / total_slf   ) ) %>%   # make % format   dplyr::mutate(prop_change = scales::label_percent(accuracy = 0.01) (prop_change)) # make kable slf_shift_prop_table <- kable(slf_shift_prop_table, \"html\", escape = FALSE) %>%    kableExtra::kable_styling(bootstrap_options = \"striped\", full_width = FALSE) %>%   # standardize col width   kableExtra::column_spec(1:2, width_min = '4cm') %>%   kableExtra::add_header_above(., header = c(\"SLF risk table shift proportions\" = 2), bold = TRUE)   # save as .html kableExtra::save_kable(   slf_shift_prop_table,    file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_risk_table_shift_prop.html\"),   self_contained = TRUE   )  # initialize webshot by  # webshot::install_phantomjs() # convert to pdf webshot::webshot(   url = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_risk_table_shift_prop.html\"),   file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_risk_table_shift_prop.jpg\"),   zoom = 4 )  # rm html file.remove(file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_risk_table_shift_prop.html\")) # convert top half (above diagonal) to negative numbers slf_risk_table[1, 2] <- -(slf_risk_table[1, 2]) slf_risk_table[1:2, 3] <- -(slf_risk_table[1:2, 3]) slf_risk_table[1:3, 4] <- -(slf_risk_table[1:3, 4])  # add positive sign to bottom half slf_risk_table[2:4, 1] <- sprintf(\"%+.0f\", slf_risk_table[2:4, 1]) slf_risk_table[3:4, 2] <- sprintf(\"%+.0f\", slf_risk_table[3:4, 2]) slf_risk_table[4, 3] <- sprintf(\"%+.0f\", slf_risk_table[4, 3])  # add color formatting to totals # extreme risk slf_risk_table[1, 5] <- cell_spec(slf_risk_table[1, 5], format = \"html\", bold = TRUE, escape = FALSE, color = \"darkred\") slf_risk_table[5, 1] <- cell_spec(slf_risk_table[5, 1], format = \"html\", bold = TRUE, escape = FALSE, color = \"darkred\") # high risk slf_risk_table[2, 5] <- cell_spec(slf_risk_table[2, 5], format = \"html\", bold = TRUE, escape = FALSE, color = \"darkorange\") slf_risk_table[5, 2] <- cell_spec(slf_risk_table[5, 2], format = \"html\", bold = TRUE, escape = FALSE, color = \"darkorange\") # moderate risk slf_risk_table[3, 5] <- cell_spec(slf_risk_table[3, 5], format = \"html\", bold = TRUE, escape = FALSE, color = \"gold\") slf_risk_table[5, 3] <- cell_spec(slf_risk_table[5, 3], format = \"html\", bold = TRUE, escape = FALSE, color = \"gold\") # low risk slf_risk_table[4, 5] <- cell_spec(slf_risk_table[4, 5], format = \"html\", bold = TRUE, escape = FALSE, color = \"darkgrey\") slf_risk_table[5, 4] <- cell_spec(slf_risk_table[5, 4], format = \"html\", bold = TRUE, escape = FALSE, color = \"darkgrey\")  # bold total slf_risk_table[5, 5] <- cell_spec(slf_risk_table[5, 5], format = \"html\", bold = TRUE, escape = FALSE)  # print table, e.g., in html format slf_risk_table <- kable(slf_risk_table, \"html\", escape = FALSE) %>%    kable_styling(bootstrap_options = \"striped\", full_width = FALSE) %>%   # standardize col width   kableExtra::column_spec(1:5, width_min = '4cm') %>%   # add footnotes   kableExtra::add_footnote(\"number signs indicate whether climate change is increasing (+) or decreasing (-) risk\", notation = \"alphabet\") %>%   # add header   add_header_above(., header = c(\"Risk of persistence for known L delicatula populations\" = 6), bold = TRUE) # save as .html kableExtra::save_kable(   slf_risk_table,    file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_risk_table.html\"),   self_contained = TRUE   )  # initialize webshot by  # webshot::install_phantomjs() # convert to pdf webshot::webshot(   url = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_risk_table.html\"),   file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_risk_table.jpg\"),   zoom = 4 )  # rm html file.remove(file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_risk_table.html\"))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/160_generate_format_figures.html","id":"slf-quadrant-plots--facet-by-country","dir":"Articles","previous_headings":"","what":"SLF quadrant plots- facet by country","title":"Format risk tables for SLF populations and viticultural regions","text":"want segment SLF presences country create risk plots similar IVR regions.","code":"slf_populations <- read_rds(file = file.path(here::here(), \"data\", \"slf_all_coords_final_2024-08-05.rds\"))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/160_generate_format_figures.html","id":"geocode-country-codes","dir":"Articles","previous_headings":"SLF quadrant plots- facet by country","what":"Geocode country codes","title":"Format risk tables for SLF populations and viticultural regions","text":"","code":"# geocode slf_populations_geocoded <- tidygeocoder::reverse_geocode(   .tbl = slf_populations,    lat = y,    long = x,    full_results = TRUE, # give each element of the address in a column   method = \"arcgis\",   progress_bar = TRUE   )  # get unique values- should only be 4 countries unique(slf_populations_geocoded$CountryCode)  # filter out presences with no country code slf_populations_geocoded_tidy <- slf_populations_geocoded %>%   dplyr::filter(!CountryCode %in% c(\"\", \"NA\"), !is.na(CountryCode)) %>%   dplyr::select(species, x, y, CountryCode)   slf_populations_geocoded_tidy$CountryCode <- toupper(slf_populations_geocoded_tidy$CountryCode)  nrow(slf_populations_geocoded_tidy) # we only lost about 4 records  # save write_csv(   x = slf_populations_geocoded_tidy,    file = file.path(here::here(), \"vignette-outputs\", \"data-tables\", \"slf_all_coords_final_2024-08-05_withCountries.csv\")   )  # also write to rds readr::write_rds(   x = slf_populations_geocoded_tidy,    file = file.path(here::here(), \"data\", \"slf_all_coords_final_2024-08-05_withCountries.rds\") ) slf_populations_geocoded_tidy <- readr::read_rds(file = file.path(here::here(), \"data\", \"slf_all_coords_final_2024-08-05_withCountries.rds\")) slf_populations_geocoded_table <- slf_populations_geocoded_tidy %>%   dplyr::group_by(CountryCode) %>%   dplyr::summarize(slf_record_count = n()) %>%   dplyr::arrange(desc(slf_record_count)) %>%   dplyr::mutate(country_name = c(\"United_States\", \"China\", \"South_Korea\", \"Japan\", \"North_Korea\")) %>%   dplyr::rename(\"country_code\" = \"CountryCode\") %>%   dplyr::relocate(country_code, country_name) %>%   tibble::add_row(country_code = \"Total\", country_name = \"-\", slf_record_count = sum(.$slf_record_count)) slf_populations_geocoded_table[6, 1] <- cell_spec(slf_populations_geocoded_table[6, 1], format = \"html\", bold = TRUE, escape = FALSE)  # make kable slf_populations_geocoded_kable <- knitr::kable(slf_populations_geocoded_table, \"html\", escape = FALSE) %>%    kableExtra::kable_styling(bootstrap_options = \"striped\", full_width = FALSE) %>%   # standardize col width   kableExtra::column_spec(1:3, width_min = '4cm') %>%   kableExtra::add_header_above(., header = c(\"SLF population counts per country\" = 3), bold = TRUE)   # save as .html kableExtra::save_kable(   slf_populations_geocoded_kable,    file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_records_per_country.html\"),   self_contained = TRUE   )  # initialize webshot by  # webshot::install_phantomjs() # convert to pdf webshot::webshot(   url = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_records_per_country.html\"),   file = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_records_per_country.jpg\"),   zoom = 2 )  # rm html file.remove(file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_records_per_country.html\"))"},{"path":"https://ieco-lab.github.io/slfSpread/articles/160_generate_format_figures.html","id":"load-in-suitability-data","dir":"Articles","previous_headings":"SLF quadrant plots- facet by country","what":"Load in suitability data","title":"Format risk tables for SLF populations and viticultural regions","text":"Isolate threshold values","code":"# global xy_global_1995_rescaled <- read_rds(file = file.path(here::here(), \"data\", \"global_slf_all_coords_1981-2010_xy_pred_suit_rescaled.rds\"))  xy_global_2055_rescaled <- read_rds(file = file.path(here::here(), \"data\", \"global_slf_all_coords_2041-2070_GFDL_ssp_mean_xy_pred_suit_rescaled.rds\"))  # regional xy_regional_ensemble_1995_rescaled <- read_rds(file = file.path(here::here(), \"data\", \"regional_ensemble_slf_all_coords_1981-2010_xy_pred_suit_rescaled.rds\"))  xy_regional_ensemble_2055_rescaled <- read_rds(file = file.path(here::here(), \"data\", \"regional_ensemble_slf_all_coords_2041-2070_GFDL_ssp_mean_xy_pred_suit_rescaled.rds\")) # global xy_global_1995_rescaled_thresholds <- read_rds(file = file.path(here::here(), \"data\", \"global_slf_all_coords_1981-2010_xy_pred_suit_rescaled_thresholds.rds\"))  xy_global_2055_rescaled_thresholds <- read_rds(file = file.path(here::here(), \"data\", \"global_slf_all_coords_2041-2070_GFDL_ssp_mean_xy_pred_suit_rescaled_thresholds.rds\"))  # regional xy_regional_ensemble_1995_rescaled_thresholds <- read_rds(file = file.path(here::here(), \"data\", \"regional_ensemble_slf_all_coords_1981-2010_xy_pred_suit_rescaled_thresholds.rds\"))  xy_regional_ensemble_2055_rescaled_thresholds <- read_rds(file = file.path(here::here(), \"data\", \"regional_ensemble_slf_all_coords_2041-2070_GFDL_ssp_mean_xy_pred_suit_rescaled_thresholds.rds\")) # join datasets for plotting xy_joined_rescaled <- full_join(xy_global_1995_rescaled, xy_regional_ensemble_1995_rescaled, join_by(ID, x, y)) %>%   # join CC datasets   full_join(., xy_global_2055_rescaled, join_by(ID, x, y)) %>%   full_join(., xy_regional_ensemble_2055_rescaled, join_by(ID, x, y)) %>%   # order   dplyr::relocate(ID, x, y, xy_global_1995_rescaled, xy_global_2055_rescaled) %>%   dplyr::select(-c(xy_global_1995, xy_global_2055, xy_regional_ensemble_1995, xy_regional_ensemble_2055)) # global global_MTSS <- as.numeric(xy_global_1995_rescaled_thresholds[2, 2]) # regional ensemble regional_ensemble_MTSS_1995 <- as.numeric(xy_regional_ensemble_1995_rescaled_thresholds[2, 2]) regional_ensemble_MTSS_2055 <- as.numeric(xy_regional_ensemble_2055_rescaled_thresholds[4, 2])"},{"path":"https://ieco-lab.github.io/slfSpread/articles/160_generate_format_figures.html","id":"for-loop-to-create-plots","dir":"Articles","previous_headings":"SLF quadrant plots- facet by country","what":"for loop to create plots","title":"Format risk tables for SLF populations and viticultural regions","text":"Now lets plot data. create 4 plots, 1 per country using loop.","code":"# create empty list for appending slf_plots_output <- list()  # plotting objects breaks <- c(0.0, 0.2, 0.4, 0.6, 0.8, 1.0)  labels <- c(0, 2, 4, 6, 8, 10)   # for loop for(i in unique(slf_populations_geocoded_tidy$CountryCode)) {    ## create datasets      # filter datasets   slf_populations_internal <- slf_populations_geocoded_tidy %>%     dplyr::filter(CountryCode == i)      # filter out only records from country using join   xy_joined_rescaled_internal <- xy_joined_rescaled %>%     right_join(., slf_populations_internal, join_by(x, y)) %>%     dplyr::select(-c(species, CountryCode))         ## boundary crossing arrows       # first get the ones that cross a threshold   slf_intersects <- xy_joined_rescaled_internal %>%     dplyr::mutate(       crosses_threshold = dplyr::case_when(         # conditional for starting and ending points that overlap a the threshold         # x-axis         xy_global_1995_rescaled > global_MTSS & xy_global_2055_rescaled < global_MTSS ~ \"crosses\",         xy_global_1995_rescaled < global_MTSS & xy_global_2055_rescaled > global_MTSS ~ \"crosses\",         # y-axis         xy_regional_ensemble_1995_rescaled > regional_ensemble_MTSS_2055 & xy_regional_ensemble_2055_rescaled < regional_ensemble_MTSS_2055 ~ \"crosses\",          xy_regional_ensemble_1995_rescaled < regional_ensemble_MTSS_2055 & xy_regional_ensemble_2055_rescaled > regional_ensemble_MTSS_2055 ~ \"crosses\",         # else         .default = \"does not cross\"       )     )      # filter out the crosses   slf_intersects <- dplyr::filter(     slf_intersects,     crosses_threshold == \"crosses\"   )               # plot    slf_plot <- ggplot(data = xy_joined_rescaled_internal) +    # threshold lines    # MTSS thresholds    geom_vline(xintercept = global_MTSS, linetype = \"dashed\", linewidth = 0.7) + # global    geom_hline(yintercept = regional_ensemble_MTSS_1995, linetype = \"dashed\", linewidth = 0.7) + # regional_ensemble- there are two MTSS thresholds for this model, but the difference is so small that you will never see it on the plot    # arrows indicating change    geom_segment(      data = slf_intersects,      aes(        x = xy_global_1995_rescaled,        xend = xy_global_2055_rescaled,        y = xy_regional_ensemble_1995_rescaled,        yend = xy_regional_ensemble_2055_rescaled      ),       arrow = grid::arrow(angle = 5.5, type = \"closed\"), alpha = 0.3, linewidth = 0.25, color = \"black\"    ) +    # historical data    geom_point(      aes(x = xy_global_1995_rescaled, y = xy_regional_ensemble_1995_rescaled, shape = \"Present\"),       size = 2, stroke = 0.7, color = \"black\", fill = \"white\"      ) +    # GFDL ssp370 data    geom_point(      aes(x = xy_global_2055_rescaled, y = xy_regional_ensemble_2055_rescaled, shape = \"2041-2070\\nGFDL ssp370\"),       size = 2, stroke = 0.7, color = \"black\", fill = \"wheat3\"      ) +    # axes scaling    scale_x_continuous(name = \"'global' model risk projection\", limits = c(0, 1), breaks = breaks, labels = labels) +     scale_y_continuous(name = \"'regional_ensemble' model risk projection\", limits = c(0, 1), breaks = breaks, labels = labels) +    # quadrant labels    # extreme risk, top right, quad4    geom_label(aes(x = 0.75, y = 0.9, label = \"extreme risk\"), fill = \"darkred\", color = \"azure\", size = 5) +    # high risk, top left, quad3    geom_label(aes(x = 0.25, y = 0.9, label = \"high risk\"), fill = \"darkorange\", color = \"azure\", size = 5) +    # moderate risk, bottom right, quad2    geom_label(aes(x = 0.75, y = 0.1, label = \"moderate risk\"), fill = \"gold\", color = \"azure\", size = 5) +    # low risk, bottom left, quad1    geom_label(aes(x = 0.25, y = 0.1, label = \"low risk\"), fill = \"azure4\", color = \"azure\", size = 5) +    # aesthetics    scale_shape_manual(name = \"Time period\", values = c(21, 21)) +    guides(shape = guide_legend(nrow = 1, override.aes = list(size = 2.5), reverse = TRUE)) +    theme_bw() +    theme(legend.position = \"bottom\", panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +    coord_fixed(ratio = 1)          # append to output   slf_plots_output[[i]] <- slf_plot         # remove objects   rm(slf_plot)   rm(slf_intersects)   rm(slf_populations_internal)   rm(xy_joined_rescaled_internal)    }"},{"path":"https://ieco-lab.github.io/slfSpread/articles/160_generate_format_figures.html","id":"patchwork-figure","dir":"Articles","previous_headings":"SLF quadrant plots- facet by country","what":"patchwork figure","title":"Format risk tables for SLF populations and viticultural regions","text":"","code":"# USA USA_risk_plot <- slf_plots_output[[\"USA\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"A\") +   theme(     legend.position = \"none\",      panel.border = element_rect(size = 1, linetype = \"solid\", color = \"black\"),      plot.tag.position = c(0.2, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     ) ## Warning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0. ## ℹ Please use the `linewidth` argument instead. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was ## generated. # edits # remove geom_text USA_risk_plot <- USA_risk_plot %>%   gginnards::delete_layers(match_type = \"GeomLabel\") %>%   ggplot_build() # edit point size USA_risk_plot$data[[4]]$size <- 1.5 USA_risk_plot$data[[5]]$size <- 1.5 # edit linewidth #USA_risk_plot$data[[3]]$linewidth <- 0.1  USA_risk_plot <- ggplot_gtable(USA_risk_plot) %>%   patchwork::wrap_ggplot_grob()   # france CHN_risk_plot <- slf_plots_output[[\"CHN\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"B\") +   theme(     legend.position = \"none\",      panel.border = element_rect(size = 1, linetype = \"solid\", color = \"black\"),      plot.tag.position = c(0.2, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )  # edits # remove geom_text CHN_risk_plot <- CHN_risk_plot %>%   gginnards::delete_layers(match_type = \"GeomLabel\") %>%   ggplot_build() # edit point size CHN_risk_plot$data[[4]]$size <- 1.5 CHN_risk_plot$data[[5]]$size <- 1.5 # edit linewidth #CHN_risk_plot$data[[3]]$linewidth <- 0.1  CHN_risk_plot <- ggplot_gtable(CHN_risk_plot) %>%   patchwork::wrap_ggplot_grob()  # JPN JPN_risk_plot <- slf_plots_output[[\"JPN\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"C\") +   theme(     legend.position = \"none\",      panel.border = element_rect(size = 1, linetype = \"solid\", color = \"black\"),      plot.tag.position = c(0.2, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )  JPN_risk_plot <- JPN_risk_plot %>%   gginnards::delete_layers(match_type = \"GeomLabel\") %>%   ggplot_build() # edit point size JPN_risk_plot$data[[4]]$size <- 1.5 JPN_risk_plot$data[[5]]$size <- 1.5 # edit linewidth #JPN_risk_plot$data[[3]]$linewidth <- 0.1  JPN_risk_plot <- ggplot_gtable(JPN_risk_plot) %>%   patchwork::wrap_ggplot_grob()   # italy KOR_risk_plot <- slf_plots_output[[\"KOR\"]] +   theme(     plot.title = element_blank(),     plot.subtitle = element_blank(),     plot.caption = element_blank(),     axis.title = element_blank()     ) +   labs(tag = \"D\") +   theme(     legend.position = \"none\",      panel.border = element_rect(size = 1, linetype = \"solid\", color = \"black\"),      plot.tag.position = c(0.2, 0.9),     plot.tag = element_text(face = \"bold\", size = 20)     )  KOR_risk_plot <- KOR_risk_plot %>%   gginnards::delete_layers(match_type = \"GeomLabel\") %>%   ggplot_build() # edit point size KOR_risk_plot$data[[4]]$size <- 1.5 KOR_risk_plot$data[[5]]$size <- 1.5 # edit linewidth #KOR_risk_plot$data[[3]]$linewidth <- 0.1  KOR_risk_plot <- ggplot_gtable(KOR_risk_plot) %>%   patchwork::wrap_ggplot_grob() slf_plot_patchwork <- (   USA_risk_plot + plot_spacer() + CHN_risk_plot +   JPN_risk_plot + plot_spacer() + KOR_risk_plot    ) +   # annotation   plot_annotation(     title = \"SLF risk plots by country\",     subtitle = \"USA | CHN | JPN | KOR\"     ) +   plot_layout(ncol = 3, nrow = 2, widths = unit(c(5.5, 1, 5.5), \"cm\"), heights = unit(5.5, \"cm\")) ggsave(   slf_plot_patchwork,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"slf_risk_plots_by_country.jpg\"),   height = 8,    width = 8,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/160_generate_format_figures.html","id":"viticultural-regions-map","dir":"Articles","previous_headings":"","what":"viticultural regions map","title":"Format risk tables for SLF populations and viticultural regions","text":"","code":"map_style <- list(   xlab(\"longitude\"),   ylab(\"latitude\"),   theme_classic(),   theme(legend.position = \"bottom\",         panel.background = element_rect(fill = \"lightblue2\",                                         colour = \"lightblue2\")         ),   scale_x_continuous(expand = c(0, 0)),   scale_y_continuous(expand = c(0, 0)),   viridis::scale_fill_viridis(option = \"D\"),   coord_equal() ) mypath <- file.path(here::here() %>%                       dirname(),                    \"maxent/historical_climate_rasters/chelsa2.1_30arcsec/v1_maxent_10km\")  # background layer global_bio2_df <- terra::rast(x = file.path(mypath, \"bio2_1981-2010_global.asc\")) %>%   terra::as.data.frame(., xy = TRUE)   # load wineries IVR_locations <- readr::read_rds(file.path(here::here(), \"data\", \"wineries_tidied.rds\")) IVR_points_plot <- ggplot() +     geom_raster(data = global_bio2_df, aes(x = x, y = y), fill = \"azure1\") +     geom_point(data = IVR_locations, aes(x = x, y = y), fill = \"purple3\", shape = 21, size = 1, stroke = 0.3) +     ggtitle(\"globally important viticultural regions\") +     map_style +     theme(legend.position = \"none\") ggsave(   IVR_points_plot,    filename = file.path(here::here(), \"vignette-outputs\", \"figures\", \"global_viticultural_regions.jpg\"),   height = 8,    width = 12,   device = \"jpeg\",   dpi = \"retina\"   )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/160_generate_format_figures.html","id":"plot-bioclim-variables","dir":"Articles","previous_headings":"","what":"Plot bioclim variables","title":"Format risk tables for SLF populations and viticultural regions","text":"","code":"mypath <- file.path(here::here() %>%                       dirname(),                    \"maxent/historical_climate_rasters/chelsa2.1_30arcsec/v1_maxent_10km\") map_style <- list(   xlab(\"longitude\"),   ylab(\"latitude\"),   theme_classic(),   theme(     # legend     legend.position = \"bottom\",     # background     panel.background = element_rect(fill = \"azure3\",                                         colour = \"azure3\")   ),   scale_x_continuous(expand = c(0, 0)),   scale_y_continuous(expand = c(0, 0)),   coord_equal() ) # bio 11 bio11_hist_df <- terra::rast(   x = file.path(mypath, \"bio11_1981-2010_global.asc\") ) %>%   terra::as.data.frame(xy = TRUE) bio11_hist_plot <- ggplot() +   geom_raster(data = bio11_hist_df, aes(x = x, y = y, fill = `CHELSA_bio11_1981-2010_V.2.1`)) +   map_style +   theme(legend.position = \"none\")"},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/articles/slfSpread.html","id":"produce-localized-reports-on-slf-risk-to-viticulture","dir":"Articles","previous_headings":"How to use this project","what":"1. Produce localized reports on SLF risk to viticulture","title":"Get started using slfSpread","text":"primary datasets, including risk maps viticultural risk analysis, can accessed executing function create_risk_report(). function creates localized (country state/provincial level) report risk Lycorma delicatula local viticulture. can applied globally important winegrowing regions uses dataset data/wineries_tidied.rds, contains sample (1,074) world’s important winegrowing regions. Users can apply function locality projecting risk Lycorma delicatula establishment exapnd climate change. Lycorma delicatula classified capable (global) pan-invasion viticulure already devastated regions, high potential viticultural damage climate change (Huron et al, 2022). examples best practice usage create_risk_report(), see vignette 150_create_risk_report function recreates major datasets provide main analysis, including: list known important wine regions within locality predicted suitability values levels current future risk maps SLF establishment range shift map potential range expansion L delicatula climate change viticultural quadrant plot depicting risk SLF establishment known wine regions within locality. plot depicts intersection two modeled scales. risk table quantifying level risk vineyards according quadrant plot example workflow creating localized risk map might applied: might begin creating report national level. create , need alpha-3 iso country code. first note three important outputs function: 1. risk maps 2. accompanying viticultural risk quadrant plot 3. tabled list viticultural regions locality First, observe risk map, depicts risk SLF establishment using agreement regional-scale model ensemble global-scale model. agreement suitability mean higher risk.  Fig 1. Projected current risk Lycorma delicatula establishment | USA  Fig 2. Projected future risk Lycorma delicatula establishment climate change | USA points map represent key viticultural regions. extracted suitability viticultural region depicted quantitative shift risk second output, viticultural risk quadrant plot. plot quantifies level risk along modeled scales, presently (light purple) future (dark purple) predicted climate change shift (arrows):  Fig. 3: Projected shift risk Lycorma delicatula establishment key viticultural regions due climate change | USA accompanying table provides list key viticultural regions geographical region (state/province), predicted risk levels: Table 1: List viticultural regions projected risk may begin notice particular region many records, like can see case Washington State. produce report region, get better idea overall trend risk shift due climate change. produce report Washington State alone, better visualize trend: can see Washington level SLF risk presently. climate change, risk projected decrease , one modeled scales still predict SLF can establish state.  Fig. 3: Projected current risk Lycorma delicatula establishment | Washington, USA  Fig. 4: Projected future risk Lycorma delicatula establishment climate change | Washington, USA Based viticultural risk quadrant plot, can now see Washington state exhibits totally different trend rest country. viticultural regions across united states exhibit range risk levels, regions Washington either high extreme risk SLF establishment, pattern change predicted climate change levels. Note scale, can see buffer zones used assess viticultural region risk.  Fig. 5: Projected shift risk Lycorma delicatula establishment key viticultural regions due climate change | Washington, USA localized analysis, might also interested quantifying total area risk SLF total number viticultural regions risk SLF establishment. , look two additional outputs create_risk_report(): risk map area table- quantifies areas proportions total occupied risk category risk map viticultural risk table- quantifies number winegrowing regions projected fall risk category, now future climate change First, let’s look risk map area table: Table 2: Table quantifying projected current future suitable area Lycorma delicatula establishment | Washington, USA can see table total unsuitable area decreased climate change, 8.6% 7.4%, change mostly found regional-scale model ensemble, predicted ~9% suitable arae climate change. modeled scales also diverged agreed suitable area (suitable_agreement decreased ~9%). Next, lets look viticultural risk table: Table 3: Table quantifying projected shift risk Lycorma delicatula establishment key viticultural regions due climate change | Washington, USA table, can see 7 viticultural regions maintain present risk level climate change. Six regions fall high risk category (regional ensemble suitability ) one falls extreme risk category (suitable area agreement). Users explore localities data types available function.","code":"slfSpread::create_risk_report(   locality.iso = \"usa\",   locality.type = \"country\", # to specify the type of report   buffer.dist = 20000, # in meters, this is the buffer zone defining the viticultural area   create.dir = FALSE, # should a directory be created for the report? If TRUE, param mypath will be required   save.report = FALSE # should the report be saved? ) USA_current <- usa_slf_risk_report[[\"risk_maps\"]][[\"present_risk_map\"]] +   # you may need to crop the map due to outlying territories, as we have done here   xlim(-125, -65) +   ylim(25, 50)  USA_current USA_future <- usa_slf_risk_report[[\"risk_maps\"]][[\"2041-2070_risk_map\"]] +   # you may need to crop the map due to outlying territories, as we have done here   xlim(-125, -65) +   ylim(25, 50)   USA_future slfSpread::create_risk_report(   locality.iso = \"usa\", # the country iso is still required   locality.name = \"washington\", # the name must be specified   locality.type = \"state_province\", # we have changed the report type   buffer.dist = 20000, # in meters   create.dir = FALSE,    save.report = FALSE )"},{"path":"https://ieco-lab.github.io/slfSpread/articles/slfSpread.html","id":"recreate-the-analysis-for-another-invasive-species-of-interest","dir":"Articles","previous_headings":"How to use this project","what":"2. Recreate the analysis for another invasive species of interest","title":"Get started using slfSpread","text":"modelers wish apply pipeline invasive species, pipeline can easily adapted model risk establishment simply changing input datasets modeled scales. First, modeler need change input datasets, outlined vignettes 020-040. vignette 020, retrieved input data GBIF, hosts datasets thousands species. recommend including extra data databases literature analysis, GBIF great starting point data retrieval. example using package rgbif: input covariates also need change based biologically relevant particular species. outline process choosing input covariates vignette 030. input data adapted user’s needs, regional-scale models need applied per region interest. regional-scale model depends spcecific background area selection MaxEnt need change. outline process choosing area vignette 060, subset presence data region intersect subsets Köppen-Geiger climate zones select appropriate background area. resulting polygon need cropped region interest. use kgc, terra, sf packages analysis: presence data, covariate data background points chosen, user might apply framework invasive species ensemble models region interest.","code":"slf_id <- rgbif::occ_search(scientificName = \"Lycorma delicatula\")[[\"data\"]]  slf_id <- slf_id %>%   dplyr::select(taxonKey) %>%   dplyr::slice_head() %>%   as.character()   # initiate download records_gbif <- rgbif::occ_download(   # general formatting   type = \"and\",   format = \"SIMPLE_CSV\",   # inclusion rules   pred(\"taxonKey\", slf_id), # search by GBIF ID, not species name   pred(\"hasCoordinate\", TRUE),   pred(\"hasGeospatialIssue\", FALSE),   pred(\"occurrenceStatus\", \"PRESENT\") ) # get K-G zones kmz_data <- kgc::kmz  # generate coordinates kmz_lat <- kgc::genCoords(latlon = \"lat\", full = TRUE) kmz_lon <- kgc::genCoords(latlon = \"lon\", full = TRUE)  # join data and coordinates kmz_data <- cbind(kmz_lat, kmz_lon) %>%   cbind(., kmz_data) %>%   as.data.frame() %>%   # relocate column   dplyr::select(kmz_lon, everything())   # convert to raster KG_zones_rast <- terra::rast(   x = kmz_data,   type = \"xyz\",   crs = \"EPSG:4326\"   )  # next, convert raster to polygon KG_zones_poly <- terra::as.polygons(   x = KG_zones_rast,   aggregate = TRUE, # combine cells with the same value into one area   values = TRUE, # include cell values as attributes   crs = \"EPSG:4326\" ) KG_zones_poly <- sf::st_as_sf(KG_zones_poly)  # intersect polygon and presences regional_poly <- sf::st_filter(x = KG_zones_poly, y = presence_data)"},{"path":"https://ieco-lab.github.io/slfSpread/articles/slfSpread.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Get started using slfSpread","text":"Bryant, C., Wheeler, N. R., Rubel, F., & French, R. H. (2017). kgc: Koeppen-Geiger Climatic Zones. https://CRAN.R-project.org/package=kgc Chamberlain S, Barve V, Mcglinn D, Oldoni D, Desmet P, Geffert L, Ram K (2024). rgbif: Interface Global Biodiversity Information Facility API. R package version 3.8.0, https://CRAN.R-project.org/package=rgbif. Gallien, L., Douzet, R., Pratte, S., Zimmermann, N. E., & Thuiller, W. (2012). Invasive species distribution models – violating equilibrium assumption can create new insights. Global Ecology Biogeography, 21(11), 1126–1136. https://doi.org/10.1111/j.1466-8238.2012.00768.x Huron, N. ., Behm, J. E., & Helmus, M. R. (2022). Paninvasion severity assessment U.S. grape pest disrupt global wine market. Communications Biology, 5(1), 655. https://doi.org/10.1038/s42003-022-03580-w Pebesma, E., 2018. Simple Features R: Standardized Support Spatial Vector Data. R Journal 10 (1), 439-446, https://doi.org/10.32614/RJ-2018-009 Phillips, S. J., Anderson, R. P., & Schapire, R. E. (2006). Maximum entropy modeling species geographic distributions. Ecological Modelling, 190(3), 231–259. https://doi.org/10.1016/j.ecolmodel.2005.03.026 Hijmans R (2024). terra: Spatial Data Analysis. R package version 1.7-81, https://rspatial.github.io/terra/, https://rspatial.org/. Ushey K, Wickham H (2024). renv: Project Environments. R package version 1.0.7, https://github.com/rstudio/renv, https://rstudio.github.io/renv/. Wickham H, Averick M, Bryan J, Chang W, McGowan LD, François R, Grolemund G, Hayes , Henry L, Hester J, Kuhn M, Pedersen TL, Miller E, Bache SM, Müller K, Ooms J, Robinson D, Seidel DP, Spinu V, Takahashi K, Vaughan D, Wilke C, Woo K, Yutani H (2019). “Welcome tidyverse.” Journal Open Source Software, 4(43), 1686. doi:10.21105/joss.01686.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Samuel M. Owens. Author, maintainer. Matthew R. Helmus. Author.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Samuel M. Owens, Matthew R. Helmus (2024). slfSpread: \"Research Compendium: Multi-scale modeling spotted lanternfly Lycorma delicatula (Hemiptera: Fulgoridae) reveals displaced risk viticulture regional range expansion due climate change\". https://ieco-lab.github.io/slfSpread/, https://github.com/ieco-lab/slfSpread.","code":"@Manual{,   title = {slfSpread: \"Research Compendium: Multi-scale modeling of the spotted lanternfly Lycorma delicatula (Hemiptera: Fulgoridae) reveals displaced risk to viticulture and regional range expansion due to climate change\"},   author = {{Samuel M. Owens} and {Matthew R. Helmus}},   year = {2024},   note = {https://ieco-lab.github.io/slfSpread/, https://github.com/ieco-lab/slfSpread}, }"},{"path":"https://ieco-lab.github.io/slfSpread/index.html","id":"overview","dir":"","previous_headings":"","what":"","title":"","text":"package slfSpread outlines workflow conducting species distribution modeling (SDM) risk establishment invasive Lycorma delicatula (spotted lanternfly SLF) climate change. primarily provide tools resources viticulturists assess respond risk SLF viticulture locality. Viticulturists apply function create_risk_report create risk maps, range shift maps, risk plots outputs scale countries states/provinces. also apply novel multi-scale approach model global risk establishment Lycorma delicatula, modelers adapt apply potential invaders climate change. find multi-scale approach ensembling MaxEnt models regional-scale provides refined predictions global-scale model highlights important biological limitations spread SLF.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"","text":"package slfSpread research compendium manuscript, Owens Helmus, 2024: insert citation","code":""},{"path":"https://ieco-lab.github.io/slfSpread/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"","text":"package first downloaded installed GitHub running following code: dependency packages installed package run properly: main packages slfSpread depends :","code":"require(devtools) # install.packages(\"devtools\") # if devtools is not installed yet devtools::install_github(\"ieco-lab/slfSpread\") library(slfSpread) install.packages(c('cli', 'common', 'CoordinateCleaner', 'devtools', 'dismo', 'dplyr', 'dsmextra', 'ENMTools', 'formattable', 'gginnards', 'ggplot2', 'gitcreds' 'grid', 'here', 'humboldt', 'kableExtra', 'kgc', 'knitr', 'lydemapr', 'patchwork', 'pkgdown', 'plotROC', 'pROC', 'raster', 'rasterVis', 'readr', 'renv', 'rgbif', 'rJava', 'rmarkdown', 'rnaturalearth', 'rnaturalearthhires', 'scales', 'SDMtune', 'sf', 'sp', 'spThin', 'stats', 'stringr', 'terra', 'tibble', 'tidygeocoder', 'tidyr', 'tidyverse', 'usethis', 'utils', 'viridis', 'webshot', 'webshot2'))  # we also suggest installing the following packages: install.packages(c(\"blockCV\", \"knitr\", \"rmarkdown\"))  # install specific version of ggnewscale library(remotes) remotes::install_version(\"ggnewscale\", version = \"0.4.10\")"},{"path":"https://ieco-lab.github.io/slfSpread/index.html","id":"sitemap","dir":"","previous_headings":"","what":"Sitemap","title":"","text":"project organized general sections modeling pipeline: vignettes follow general order: 010: Initialize slfSpread: initialization renv package dependencies 020-030: Retrieve tidy input data MaxEnt 040-090: SDM modeling pipeline: train global 3 regional-scale models 100-110: Ensemble Regional-scale SDMs 120-142: Quantify SLF risk model fit 150: Quantify risk specific viticultural regions using function create_risk_report()","code":""},{"path":"https://ieco-lab.github.io/slfSpread/index.html","id":"how-to-use-this-project","dir":"","previous_headings":"","what":"How to Use this Project","title":"","text":"diving project modeling workflow, end user : 1. read companion paper, outlines conceptual underpinnings project 2. install package renv, ensures R package versions consistent running package (craetes projct-specific R package library, affect main library) 3. run first vignette, 010_initialize_renv, initializes renv lists package’s dependencies. 4. See “Get Started” help using package : 4.1 Produce localized reports SLF risk viticulture, 4.2 Recreate analysis another invasive species interest","code":""},{"path":"https://ieco-lab.github.io/slfSpread/index.html","id":"computing-information","dir":"","previous_headings":"","what":"Computing Information","title":"","text":"package developed vignettes rendered Dell Precision desktop PC following characteristics: * Core: intel Xeon CPU, 3.60 GHz * RAM memory: 64 GB * Operating System: Windows 10 Enterprise, version 22H2 * R version: 4.4.1","code":""},{"path":"https://ieco-lab.github.io/slfSpread/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"","text":"Gallien, L., Douzet, R., Pratte, S., Zimmermann, N. E., & Thuiller, W. (2012). Invasive species distribution models – violating equilibrium assumption can create new insights. Global Ecology Biogeography, 21(11), 1126–1136. https://doi.org/10.1111/j.1466-8238.2012.00768.x Huron, N. ., Behm, J. E., & Helmus, M. R. (2022). Paninvasion severity assessment U.S. grape pest disrupt global wine market. Communications Biology, 5(1), 655. https://doi.org/10.1038/s42003-022-03580-w Phillips, S. J., Anderson, R. P., & Schapire, R. E. (2006). Maximum entropy modeling species geographic distributions. Ecological Modelling, 190(3), 231–259. https://doi.org/10.1016/j.ecolmodel.2005.03.026","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/calculate_risk_quadrant.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate placement of point-wise suitability values on risk quadrant plot — calculate_risk_quadrant","title":"Calculate placement of point-wise suitability values on risk quadrant plot — calculate_risk_quadrant","text":"function categorizes risk establishment Lycorma delicatula according risk quadrant framework, intersection predictions made global regional-scale models. return quadrant suitability value fall xy-scatter.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/calculate_risk_quadrant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate placement of point-wise suitability values on risk quadrant plot — calculate_risk_quadrant","text":"","code":"calculate_risk_quadrant(suit.x, suit.y, thresh.x, thresh.y)"},{"path":"https://ieco-lab.github.io/slfSpread/reference/calculate_risk_quadrant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate placement of point-wise suitability values on risk quadrant plot — calculate_risk_quadrant","text":"suit.x Suitability values comprising x-axis. Global-scale model usually placed along x-axis. suit.y Suitability values comprising y-axis. Regional-scale ensemble model usually placed along x-axis. thresh.x threshold suitability accompanying x-axis model values. thresh.y threshold suitability accompanying y-axis model values.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/calculate_risk_quadrant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate placement of point-wise suitability values on risk quadrant plot — calculate_risk_quadrant","text":"Returns data frame. Values one : \"extreme\", \"high\", \"moderate\", \"low\". correspond interpretation risk quadrant plots created: extreme risk = quadrant 4 (upper right) high risk = quadrant 3 (upper left) moderate risk = quadrant 2 (bottom right) low risk = quadrant 1 (bottom left)","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/calculate_risk_quadrant.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate placement of point-wise suitability values on risk quadrant plot — calculate_risk_quadrant","text":"#'function requires packages 'dplyr' 'cli'. Input data formats: param \"suit\" = matrix suitability values param \"thresh\" = numeric Input suitability data can created using function predict_xy_suitability, extracted raster using terra::extract(), needed.","code":""},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/reference/compute_MaxEnt_summary_statistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Output summary statistics for a MaxEnt model without cross-validation ('Maxent' object) — compute_MaxEnt_summary_statistics","title":"Output summary statistics for a MaxEnt model without cross-validation ('Maxent' object) — compute_MaxEnt_summary_statistics","text":"function create directory save MaxEnt model run using SDMtune R package. use model calculate list summary statistics based test data covariates given. See 'return' list summary statistics outputs.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/compute_MaxEnt_summary_statistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Output summary statistics for a MaxEnt model without cross-validation ('Maxent' object) — compute_MaxEnt_summary_statistics","text":"","code":"compute_MaxEnt_summary_statistics(   model.obj,   model.name = \"MODEL\",   mypath,   create.dir = FALSE,   env.covar.obj,   train.obj,   test.obj,   plot.fun = \"mean\",   plot.type = \"cloglog\",   jk.test.type = \"test\" )"},{"path":"https://ieco-lab.github.io/slfSpread/reference/compute_MaxEnt_summary_statistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Output summary statistics for a MaxEnt model without cross-validation ('Maxent' object) — compute_MaxEnt_summary_statistics","text":"model.obj model object created package 'SDMtune', class 'SDMmodelCV'. model.name Character. string matching name object set model.obj. Exclude unnecessary phrases, \"_model\" ending. mypath Character.file path sub directory model output stored. used file.path() function (.e. '/' instead '\\'). sub directory already exist created function, set create.dir = TRUE. create folder last part filepath mypath. create.dir Logical. last element mypath create sub directory model output? TRUE, main folder created model output. FALSE (ie, sub directory already exists), \"plots\" folder within model output sub directory created. env.covar.obj stack rasters environmental covariates. covariates used train test MaxEnt model, well make predictions. covariates used train model. must SpatRaster object created using terra::rast(). train.obj main group presence background points used train model. SWD object, created using SDMtune::prepareSWD() function. test.obj withheld group presence background points used test model training. SWD object, created using SDMtune::prepareSWD() function. plot.fun Character. Default \"mean\". function used determine level variables creating marginal curve. Can one : min, mean, median, max, sd (standard deviation). plot.type Character. Default \"cloglog\".type output desired marginal univariate response curves. Choices \"logistic\" \"cloglog\".used, must concatenated form: c(\"logistic\", \"cloglog\"). jk.test.type Character. Default \"test\". jackknife test conducted, specifies whether conduct test training test dataset. Choices one \"train\" \"test\". used, must concatenated form: c(\"train\", \"test\").","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/compute_MaxEnt_summary_statistics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Output summary statistics for a MaxEnt model without cross-validation ('Maxent' object) — compute_MaxEnt_summary_statistics","text":"output function includes following: training test datasets used model listed model parameters suitability thresholds variable contributions, permutation importance SD confusion matrix jackknife tests training testing data jackknife plots AUC / TSS ROC plots marginal univariate response curves","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/compute_MaxEnt_summary_statistics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Output summary statistics for a MaxEnt model without cross-validation ('Maxent' object) — compute_MaxEnt_summary_statistics","text":"function requires packages 'tidyverse', '', 'devtools', 'rJava', 'dismo', 'SDMtune', 'viridis', 'plotROC', 'cli', 'terra'.","code":""},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/reference/compute_MaxEnt_summary_statistics_CV.html","id":null,"dir":"Reference","previous_headings":"","what":"Output summary statistics for a MaxEnt model ('SDMmodelCV' object) — compute_MaxEnt_summary_statistics_CV","title":"Output summary statistics for a MaxEnt model ('SDMmodelCV' object) — compute_MaxEnt_summary_statistics_CV","text":"function create directory save MaxEnt model run using SDMtune R package. use model calculate list summary statistics based test data covariates given. See 'return' list summary statistics outputs.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/compute_MaxEnt_summary_statistics_CV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Output summary statistics for a MaxEnt model ('SDMmodelCV' object) — compute_MaxEnt_summary_statistics_CV","text":"","code":"compute_MaxEnt_summary_statistics_CV(   model.obj,   model.name = \"MODEL\",   mypath,   create.dir = FALSE,   env.covar.obj,   train.obj,   trainFolds.obj,   test.obj,   plot.fun = \"mean\",   plot.type = \"cloglog\",   jk.test.type = \"test\" )"},{"path":"https://ieco-lab.github.io/slfSpread/reference/compute_MaxEnt_summary_statistics_CV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Output summary statistics for a MaxEnt model ('SDMmodelCV' object) — compute_MaxEnt_summary_statistics_CV","text":"model.obj model object created package 'SDMtune', class 'SDMmodelCV'. model.name Character. string matching name object set model.obj. Exclude unnecessary phrases, \"_model\" ending. mypath Character.file path sub directory model output stored. used file.path() function (.e. '/' instead '\\'). sub directory already exist created function, set create.dir = TRUE. create folder last part filepath mypath. create.dir Logical. last element mypath create sub directory model output? TRUE, main folder created model output. FALSE (ie, sub directory already exists), \"plots\" folder within model output sub directory created. env.covar.obj stack rasters environmental covariates. covariates used train test MaxEnt model, well make predictions. covariates used train model. must SpatRaster object created using terra::rast(). train.obj main group presence background points used train model. SWD object, created using SDMtune::prepareSWD() function. trainFolds.obj list two matrices specify fold training testing points. object used create k-fold partitions presence background datasets train SWDmodelCV object. created using SDMtune::randomFolds() function. test.obj withheld group presence background points used test model training. SWD object, created using SDMtune::prepareSWD() function. plot.fun Character. Default \"mean\". function used determine level variables creating marginal curve. Can one : min, mean, median, max, sd (standard deviation). plot.type Character. Default \"cloglog\".type output desired marginal univariate response curves. Choices \"logistic\" \"cloglog\".used, must concatenated form: c(\"logistic\", \"cloglog\"). jk.test.type Character. Default \"test\". jackknife test conducted, specifies whether conduct test training test dataset. Choices one \"train\" \"test\". used, must concatenated form: c(\"train\", \"test\").","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/compute_MaxEnt_summary_statistics_CV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Output summary statistics for a MaxEnt model ('SDMmodelCV' object) — compute_MaxEnt_summary_statistics_CV","text":"output function includes following: training test datasets used model listed model parameters suitability thresholds K-folds samples included per fold variable contributions, permutation importance SD confusion matrices per iteration jackknife tests training testing data, per iteration jackknife plots AUC / TSS ROC plots marginal univariate response curves","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/compute_MaxEnt_summary_statistics_CV.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Output summary statistics for a MaxEnt model ('SDMmodelCV' object) — compute_MaxEnt_summary_statistics_CV","text":"function requires packages 'tidyverse', '', 'devtools', 'rJava', 'dismo', 'SDMtune', 'viridis', 'plotROC', 'cli', 'terra'.","code":""},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/reference/create_MaxEnt_suitability_maps.html","id":null,"dir":"Reference","previous_headings":"","what":"Predicts maps of establishment suitability based on a MaxEnt model without cross-validation ('Maxent' object) — create_MaxEnt_suitability_maps","title":"Predicts maps of establishment suitability based on a MaxEnt model without cross-validation ('Maxent' object) — create_MaxEnt_suitability_maps","text":"function create map establishment suitability based MaxEnt model trained using SDMtune R package. optionally create thresholded versions maps using thresholds given MaxEnt algorithm.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/create_MaxEnt_suitability_maps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predicts maps of establishment suitability based on a MaxEnt model without cross-validation ('Maxent' object) — create_MaxEnt_suitability_maps","text":"","code":"create_MaxEnt_suitability_maps(   model.obj,   model.name,   mypath,   create.dir = FALSE,   env.covar.obj,   describe.proj = NA,   predict.type = \"cloglog\",   clamp.pred = TRUE,   thresh = NA,   map.thresh = FALSE,   map.thresh.extra = NA,   map.style = NA,   summary.file = NA )"},{"path":"https://ieco-lab.github.io/slfSpread/reference/create_MaxEnt_suitability_maps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predicts maps of establishment suitability based on a MaxEnt model without cross-validation ('Maxent' object) — create_MaxEnt_suitability_maps","text":"model.obj model object created package 'SDMtune', class 'SDMmodelCV'. model.name Character. string matching name object set model.obj. Exclude unnecessary phrases, \"_model\" ending. mypath Character.file path sub directory model output stored. used file.path() function (.e. '/' instead '\\'). sub directory already exist created function, set create.dir = TRUE. create folder last part filepath mypath. create.dir Logical. last element mypath create sub directory model output? TRUE, main folder created model output. FALSE (ie, sub directory already exists), \"plots\" folder within model output sub directory created. env.covar.obj stack rasters environmental covariates. covariates may covariates used train model, may temporally spatially projected (ex, climate change). Suitability predictions made based rasters. See details additional formatting information. describe.proj Character. environmental covariate raster stack env.covar.obj projected different geographical space, time period, etc model trained ? yes, enter name projected period region. ensures plot titles file names reflect projected region time period. using multiple words, separate underscore. predict.type Character. Default \"cloglog\". type raster output created trained model. Can either cloglog c(\"cloglog\", \"logistic\"). logistic. clamp.pred Logical. Default TRUE. clamping performed? thresh Numeric Character. need defined map.thresh = FALSE may imported manually (numeric), may selected one thresholds model (character). preset, specified mean threshold value iterations model chosen. See details list preset options usages. map.thresh Logical, TRUE default. function determines thresholded suitability map created. , output consist suitability maps type specified predict.fun. Note threshold maps can created cloglog output model. multiple values predict.type specified, function still produce threshold map based cloglog output map.thresh.extra Character, default NA. argument plot extra threshold underneath main threshold layer. must one thresholds specified thresh must less equal value values thresh. example, use plot MTP threshold thresholds plotted (MTP usually smallest thresh value). However, plotting 10_percentile thresh MTP threshold function properly map render. map.style List, default NA. used apply ggplot aesthetics plot outputs. specified, given value list ggplot aesthetic options. , built-default list used (see details). See examples usage. summary.file Data import. need defined map.thresh = FALSE. .csv file data frame contains summary statistics output created compute_MaxEnt_summary_statistics() (filename ending \"_summary.csv\"). import, file path format produced file.path() function (.e. '/' instead '\\').","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/create_MaxEnt_suitability_maps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predicts maps of establishment suitability based on a MaxEnt model without cross-validation ('Maxent' object) — create_MaxEnt_suitability_maps","text":"raster suitability values projected spatial extent input env.covar.obj corresponding .jpg figure created. multiple values given predict.fun, one raster jpg image created value. map.thresh = TRUE, output also include binary raster suitability .jpg image unsuitable areas layered top suitability raster. threshold suitability determined value thresh. Use caution: overwrite previous files default.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/create_MaxEnt_suitability_maps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predicts maps of establishment suitability based on a MaxEnt model without cross-validation ('Maxent' object) — create_MaxEnt_suitability_maps","text":"function requires packages 'cli', 'ggnewscale', 'tidyverse', 'devtools', 'SDMtune', 'terra' thresholding feature function limit considered suitable using one list commonly applied thresholds. threshold values determined MaxEnt algorithm. (ie, non-thresholded map cloglog scale lower color scale limit 0, thresholded map lower limit determined algorithm.) NOTE function create thresholded suitability map raster output using SD function, map meaningful illustrate cloglog suitability (thresholds created using cloglog suitability metrics).","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/create_MaxEnt_suitability_maps.html","id":"thresh-","dir":"Reference","previous_headings":"","what":"thresh:","title":"Predicts maps of establishment suitability based on a MaxEnt model without cross-validation ('Maxent' object) — create_MaxEnt_suitability_maps","text":"can single numeric preset character value. may also concatenated set numerics presets,  c(0.2, 0.3) c(\"MTSS\", \"BTO\"). Note function uses cloglog version thresholds. Thresh presets list: BTO = Balance training omission predicted area threshold value EE = Equate entropy thresholded original distributions ETSS = Equal training sensitivity specificity MTP = Minimum Training Presence MTSS = Maximum training sensitivity plus specificity ten_percentile 10_percentile = Ten percentile training presence","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/create_MaxEnt_suitability_maps.html","id":"env-covar-obj-","dir":"Reference","previous_headings":"","what":"env.covar.obj:","title":"Predicts maps of establishment suitability based on a MaxEnt model without cross-validation ('Maxent' object) — create_MaxEnt_suitability_maps","text":"must SpatRaster raster stack created using terra::rast(). stack include covariates (raster layers) used train model names variables layers must . can check naming consistency using names().","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/create_MaxEnt_suitability_maps.html","id":"map-style-","dir":"Reference","previous_headings":"","what":"map.style:","title":"Predicts maps of establishment suitability based on a MaxEnt model without cross-validation ('Maxent' object) — create_MaxEnt_suitability_maps","text":"Map style default options: xlab(\"longitude\") ylab(\"latitude\") labs(fill = \"Suitability SLF\") theme_classic() theme(legend_position = \"bottom\") theme(panel.background = element_rect(fill = \"lightblue2\", color = \"lightblue2\"), legend.title = element_text(face = \"bold\")) scale_x_continuous(expand = c(0, 0)) scale_y_continuous(expand = c(0, 0)) coord_equal() scale_fill_viridis_c(option = \"D\", limits = c(0, 1.00), breaks = c(0, 0.25, 0.5, 0.75, 1.00), guide = guide_colorbar(frame.colour = \"black\", ticks.colour = \"black\", barwidth = 20))","code":""},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/reference/create_MaxEnt_suitability_maps_CV.html","id":null,"dir":"Reference","previous_headings":"","what":"Predicts maps of establishment suitability based on MaxEnt model ('SDMmodelCV' object) — create_MaxEnt_suitability_maps_CV","title":"Predicts maps of establishment suitability based on MaxEnt model ('SDMmodelCV' object) — create_MaxEnt_suitability_maps_CV","text":"function create map establishment suitability based MaxEnt model trained using SDMtune R package. optionally create thresholded versions maps using thresholds given MaxEnt algorithm.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/create_MaxEnt_suitability_maps_CV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predicts maps of establishment suitability based on MaxEnt model ('SDMmodelCV' object) — create_MaxEnt_suitability_maps_CV","text":"","code":"create_MaxEnt_suitability_maps_CV(   model.obj,   model.name,   mypath,   create.dir = FALSE,   env.covar.obj,   describe.proj = NA,   predict.fun = \"mean\",   predict.type = \"cloglog\",   clamp.pred = TRUE,   thresh = NA,   map.thresh = FALSE,   map.thresh.extra = NA,   map.style = NA,   summary.file = NA )"},{"path":"https://ieco-lab.github.io/slfSpread/reference/create_MaxEnt_suitability_maps_CV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predicts maps of establishment suitability based on MaxEnt model ('SDMmodelCV' object) — create_MaxEnt_suitability_maps_CV","text":"model.obj model object created package 'SDMtune', class 'SDMmodelCV'. model.name Character. string matching name object set model.obj. Exclude unnecessary phrases, \"_model\" ending. mypath Character.file path sub directory model output stored. used file.path() function (.e. '/' instead '\\'). sub directory already exist created function, set create.dir = TRUE. create folder last part filepath mypath. create.dir Logical. last element mypath create sub directory model output? TRUE, main folder created model output. FALSE (ie, sub directory already exists), \"plots\" folder within model output sub directory created. env.covar.obj stack rasters environmental covariates. covariates may covariates used train model, may temporally spatially projected (ex, climate change). Suitability predictions made based rasters. See details additional formatting information. describe.proj Character. environmental covariate raster stack env.covar.obj projected different geographical space, time period, etc model trained ? yes, enter name projected period region. ensures plot titles file names reflect projected region time period. using multiple words, separate underscore. predict.fun Character. default \"mean\". function applied combine iterations model predicting raster output. Can one : min, mean, median, max, sd (standard deviation). multiple desired, must concatenated form: c(\"mean\", \"sd\"). lowercase. predict.type Character. Default \"cloglog\". type raster output created trained model. Can either cloglog c(\"cloglog\", \"logistic\"). logistic. clamp.pred Logical. Default TRUE. clamping performed? thresh Numeric Character. need defined map.thresh = FALSE may imported manually (numeric), may selected one thresholds model (character). preset, specified mean threshold value iterations model chosen. See details list preset options usages. map.thresh Logical, TRUE default. function determines thresholded suitability map created. , output consist suitability maps type specified predict.fun. Note threshold maps can created cloglog output model. multiple values predict.type specified, function still produce threshold map based cloglog output map.thresh.extra Character, default NA. argument plot extra threshold underneath main threshold layer. must one thresholds specified thresh must less equal value values thresh. example, use plot MTP threshold thresholds plotted (MTP usually smallest thresh value). However, plotting 10_percentile thresh MTP threshold function properly map render. map.style List, default NA. used apply ggplot aesthetics plot outputs. specified, given value list ggplot aesthetic options. , built-default list used (see details). See examples usage. summary.file Data import. need defined map.thresh = FALSE. .csv file data frame contains summary statistics output created compute_MaxEnt_summary_statistics_CV() (filename ending \"summary_all_iterations.csv\"). import, file path format produced file.path() function (.e. '/' instead '\\').","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/create_MaxEnt_suitability_maps_CV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predicts maps of establishment suitability based on MaxEnt model ('SDMmodelCV' object) — create_MaxEnt_suitability_maps_CV","text":"raster suitability values projected spatial extent input env.covar.obj corresponding .jpg figure created. multiple values given predict.fun, one raster jpg image created value. map.thresh = TRUE, output also include binary raster suitability .jpg image unsuitable areas layered top suitability raster. threshold suitability determined value thresh. Use caution: overwrite previous files default.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/create_MaxEnt_suitability_maps_CV.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predicts maps of establishment suitability based on MaxEnt model ('SDMmodelCV' object) — create_MaxEnt_suitability_maps_CV","text":"function requires packages 'cli', 'ggnewscale', 'tidyverse', 'devtools', 'SDMtune', 'terra' thresholding feature function limit considered suitable using one list commonly applied thresholds. threshold values determined MaxEnt algorithm. (ie, non-thresholded map cloglog scale lower color scale limit 0, thresholded map lower limit determined algorithm.) NOTE function create thresholded suitability map raster output using SD function, map meaningful illustrate cloglog suitability (thresholds created using cloglog suitability metrics).","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/create_MaxEnt_suitability_maps_CV.html","id":"thresh-","dir":"Reference","previous_headings":"","what":"thresh:","title":"Predicts maps of establishment suitability based on MaxEnt model ('SDMmodelCV' object) — create_MaxEnt_suitability_maps_CV","text":"can single numeric preset character value. may also concatenated set numerics presets,  c(0.2, 0.3) c(\"MTSS\", \"BTO\"). Note function uses cloglog version thresholds. Thresh presets list: BTO = Balance training omission predicted area threshold value EE = Equate entropy thresholded original distributions ETSS = Equal training sensitivity specificity MTP = Minimum Training Presence MTSS = Maximum training sensitivity plus specificity ten_percentile 10_percentile = Ten percentile training presence","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/create_MaxEnt_suitability_maps_CV.html","id":"env-covar-obj-","dir":"Reference","previous_headings":"","what":"env.covar.obj:","title":"Predicts maps of establishment suitability based on MaxEnt model ('SDMmodelCV' object) — create_MaxEnt_suitability_maps_CV","text":"must SpatRaster raster stack created using terra::rast(). stack include covariates (raster layers) used train model names variables layers must . can check naming consistency using names().","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/create_MaxEnt_suitability_maps_CV.html","id":"map-style-","dir":"Reference","previous_headings":"","what":"map.style:","title":"Predicts maps of establishment suitability based on MaxEnt model ('SDMmodelCV' object) — create_MaxEnt_suitability_maps_CV","text":"Map style default options: xlab(\"longitude\") ylab(\"latitude\") labs(fill = \"Suitability SLF\") theme_classic() theme(legend_position = \"bottom\") theme(panel.background = element_rect(fill = \"lightblue2\", color = \"lightblue2\"), legend.title = element_text(face = \"bold\")) scale_x_continuous(expand = c(0, 0)) scale_y_continuous(expand = c(0, 0)) coord_equal() scale_fill_viridis_c(option = \"D\", limits = c(0, 1.00), breaks = c(0, 0.25, 0.5, 0.75, 1.00), guide = guide_colorbar(frame.colour = \"black\", ticks.colour = \"black\", barwidth = 20))","code":""},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/reference/create_risk_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a localized report on the risk of establishment of Lycorma delicatula — create_risk_report","title":"Creates a localized report on the risk of establishment of Lycorma delicatula — create_risk_report","text":"function creates report country state/province level risk establishment Lycorma delicatula. report covers major data outputs R package analysis, including current future risk maps, range shift maps, risk plots risk tables.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/create_risk_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a localized report on the risk of establishment of Lycorma delicatula — create_risk_report","text":"","code":"create_risk_report(   locality.iso,   locality.name = locality.iso,   locality.type,   save.report = FALSE,   mypath = NA,   raster.path = file.path(here::here(), \"vignette-outputs\", \"rasters\"),   create.dir = FALSE,   map.style = NA,   buffer.dist = NA )"},{"path":"https://ieco-lab.github.io/slfSpread/reference/create_risk_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a localized report on the risk of establishment of Lycorma delicatula — create_risk_report","text":"locality.iso alpha-3 ISO code corresponding country interest. desired locality state province, please still enter ISO code supply name province locality.name. locality.name name country, state province generate report. optional report country, required report state/province. Avoid special characters, please include used used ethnic naming (ex: Côte d'Ivoire). locality.type One \"country\" \"state_province\". know state province looking , might create report country level look return name state/province included. save.report Logical. report saved file? File location specified mypath. Note, requires use Google Chrome. mypath Character. required saving report file. file path sub directory model output stored. used file.path() function (.e. '/' instead '\\'). sub directory already exist created function, set create.dir = TRUE. create folder last part filepath mypath. raster.path Character. file path directory containing rasters necessary build function. See details rasters included data input default path. create.dir Logical. last element mypath create sub directory report? TRUE, main folder created model output. FALSE (ie, sub directory already exists), directory created. map.style List. used apply ggplot aesthetics mapped outputs. specified, given value list ggplot aesthetic options. , built-default list used (see details). See examples usage. buffer.dist Numeric. distance (meters) IVR coordinate draw buffers zones risk maps. distance used calculate predicted suitability IVR region. See predict.xy.suitability.R details. specified, buffers drawn suitabiltiy prediction method assumed simple (point-wise).","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/create_risk_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a localized report on the risk of establishment of Lycorma delicatula — create_risk_report","text":"returns report list format. save.report = TRUE, also save report file destination specified mypath. outputs returned global env list object include: viticultural_regions_list - list known important wine regions within locality predicted suitability values levels. risk_maps - current future map risk L delicatula establishment. CMIP6 predictions based mean three ssp scenarios viticultural_risk_plot = quantified assessment risk L delicatula establishment known wine regions within locality. plot depicts intersection two modeled scales. viticultural_risk_table = risk table quantifying level risk vineyards according quadrant plot range_shift_map = map potential range expansion L delicatula climate change maps may formatted strangely country's outlying territories. may need crop plot using xlim() ylim() (see examples). Use caution, function overwrite previous files output locality.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/create_risk_report.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates a localized report on the risk of establishment of Lycorma delicatula — create_risk_report","text":"Requires following packages: 'tidyverse', 'terra', '', 'cli', 'rnaturalearth', 'rnaturalearthhires', 'kableExtra', 'formattable', 'webshot', 'webshot2', 'ggnewscale', 'common'. NOTE function requires use Google Chrome save.report = TRUE Note function performs downloads naturalearthdata.com, data already exist root/data-raw.function automatically create subfolders root/data-raw containing downloaded shapefiles. function depends certain files distributed package, imported root/R/sysdata.rda function run. code create sysdata.rda can found root/vignettes/160_generate_risk_report.Rmd. list files included sysdata.rda: global_model_summary.rds                                            | created vignette 050 ensemble_thresh_values.rds                                          | created vignette 110 wineries_tidied.rds                                                 | created vignette 130 regional_ensemble_wineries_1981-2010_xy_pred_suit.rds               | created vignette 130 regional_ensemble_wineries_2041-2070_GFDL_ssp_mean_xy_pred_suit.rds | created vignette 130 global_wineries_1981-2010_xy_pred_suit.rds                          | created vignette 130 global_wineries_2041-2070_GFDL_ssp_mean_xy_pred_suit.rds            | created vignette 130 Additionally, 3 rasters used create maps. rasters located root/vignette-outputs/rasters, files: slf_binarized_summed_1981-2010.asc                                  | created vignette 120 slf_binarized_summed_2041-2070_ssp_mean_GFDL.asc                    | created vignette 120 slf_range_shift_summed.asc                                          | created vignette 120","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/create_risk_report.html","id":"raster-path","dir":"Reference","previous_headings":"","what":"raster.path","title":"Creates a localized report on the risk of establishment of Lycorma delicatula — create_risk_report","text":"list rasters included data import. rasters located root/vignette-outputs/rasters, files: slf_binarized_summed_1981-2010.asc                                  | created vignette 120 slf_binarized_summed_2041-2070_ssp_mean_GFDL.asc                    | created vignette 120 slf_range_shift_summed_ssp_mean_GFDL.asc                            | created vignette 120","code":""},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/reference/predict_xy_suitability.html","id":null,"dir":"Reference","previous_headings":"","what":"Predicts suitability for xy coordinates according to a trained MaxEnt model WITHOUT cross-validation ('Maxent' object) — predict_xy_suitability","title":"Predicts suitability for xy coordinates according to a trained MaxEnt model WITHOUT cross-validation ('Maxent' object) — predict_xy_suitability","text":"function predicts establishment suitability SLF based trained MaxEnt model set xy coordinates. default method simple point-wise predictions, predictions can also made using buffer zone around xy coordinate setting buffer.pred = TRUE.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/predict_xy_suitability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predicts suitability for xy coordinates according to a trained MaxEnt model WITHOUT cross-validation ('Maxent' object) — predict_xy_suitability","text":"","code":"predict_xy_suitability(   xy.obj,   xy.type,   env.covar.obj,   model.obj,   mypath,   predict.type = \"cloglog\",   clamp.pred = TRUE,   buffer.pred = FALSE,   buffer.fun = c(\"min\", \"mean\", \"max\"),   buffer.dist = 20000,   output.name )"},{"path":"https://ieco-lab.github.io/slfSpread/reference/predict_xy_suitability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predicts suitability for xy coordinates according to a trained MaxEnt model WITHOUT cross-validation ('Maxent' object) — predict_xy_suitability","text":"xy.obj .csv file data frame contains xy coordinate data . Coordinates decimal degree format. Longitude listed first, followed latitude. .csv file, file path format produced file.path() function (.e. '/' instead '\\'). xy.type Character. Description xy data. species occurrence data, list name species. another type coordinate data, list name. providing one data type species, separate different data frames adding function env.covar.obj stack rasters environmental covariates. covariates may covariates used train model, may temporally spatially projected (ex, climate change). Suitability predictions made based rasters. See details additional formatting information. model.obj model object created package SDMtune. mypath Character.file path sub directory model output stored. used file.path() function (.e. '/' instead '\\'). sub directory already exist created function, set create.dir = TRUE. create folder last part filepath mypath. predict.type Character. type raster output created trained model. Can one raw, logistic cloglog. multiple desired, must concatenated form: c(\"cloglog\", \"logistic\") clamp.pred Logical. clamping performed? buffer.pred Logical. suitability predictions made based calculation buffer around xy coordinate data? (Example, take mean, max, etc value 20m buffer around xy coordinates). buffer.fun Character. possible functions can used calculate suitability value buffer around point. Possible values include: \"min\", \"mean\", \"max\", \"sum\", \"isNA\", \"notNA\". buffer.dist Numeric. distance xy coordinate calculate suitability value. output.name name file output. Separate words _. Relevant information might include name model used predict, spatial scale, temporal scale, type data points used predictions.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/predict_xy_suitability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predicts suitability for xy coordinates according to a trained MaxEnt model WITHOUT cross-validation ('Maxent' object) — predict_xy_suitability","text":"function returns 3+ .csv files. xy_with_data: contains input xy coordinates value given environmental covariate location. xy_no_data: contains contains coordinates predicted NA value one covariates location. xy_pred_suit: main result file, contains coordinate, type record predicted suitability value. One result file returned per predict.type, predict.fun buffer.fun combination.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/predict_xy_suitability.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predicts suitability for xy coordinates according to a trained MaxEnt model WITHOUT cross-validation ('Maxent' object) — predict_xy_suitability","text":"function requires packages 'cli', 'terra', 'tidyverse', 'SDMtune'. xy coordinates need within training area model, clamping applied within training (clamp.pred = TRUE).","code":""},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/reference/predict_xy_suitability_CV.html","id":null,"dir":"Reference","previous_headings":"","what":"Predicts suitability for xy coordinates according to a trained MaxEnt model WITH cross-validation ('SDMmodelCV' object) — predict_xy_suitability_CV","title":"Predicts suitability for xy coordinates according to a trained MaxEnt model WITH cross-validation ('SDMmodelCV' object) — predict_xy_suitability_CV","text":"function predicts establishment suitability SLF based trained MaxEnt model set xy coordinates. default method simple point-wise predictions, predictions can also made using buffer zone around xy coordinate setting buffer.pred = TRUE.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/predict_xy_suitability_CV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predicts suitability for xy coordinates according to a trained MaxEnt model WITH cross-validation ('SDMmodelCV' object) — predict_xy_suitability_CV","text":"","code":"predict_xy_suitability_CV(   xy.obj,   xy.type,   env.covar.obj,   model.obj,   mypath,   predict.fun = \"mean\",   predict.type = \"cloglog\",   clamp.pred = TRUE,   buffer.pred = FALSE,   buffer.fun = c(\"min\", \"mean\", \"max\"),   buffer.dist = 20000,   output.name )"},{"path":"https://ieco-lab.github.io/slfSpread/reference/predict_xy_suitability_CV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predicts suitability for xy coordinates according to a trained MaxEnt model WITH cross-validation ('SDMmodelCV' object) — predict_xy_suitability_CV","text":"xy.obj .csv file data frame contains xy coordinate data . Coordinates decimal degree format. Longitude listed first, followed latitude. .csv file, file path format produced file.path() function (.e. '/' instead '\\'). xy.type Character. Description xy data. species occurrence data, list name species. another type coordinate data, list name. providing one data type species, separate different data frames adding function env.covar.obj stack rasters environmental covariates. covariates may covariates used train model, may temporally spatially projected (ex, climate change). Suitability predictions made based rasters. See details additional formatting information. model.obj model object created package SDMtune. mypath Character.file path sub directory model output stored. used file.path() function (.e. '/' instead '\\'). sub directory already exist created function, set create.dir = TRUE. create folder last part filepath mypath. predict.fun Character. function applied combine iterations model predicting suitability output. Can one : min, mean, median, max, sd (standard deviation). multiple desired, must concatenated form: c(\"mean\", \"max\"). lowercase. predict.type Character. type raster output created trained model. Can one raw, logistic cloglog. multiple desired, must concatenated form: c(\"cloglog\", \"logistic\") clamp.pred Logical. clamping performed? buffer.pred Logical. suitability predictions made based calculation buffer around xy coordinate data? (Example, take mean, max, etc value 20m buffer around xy coordinates). buffer.fun Character. possible functions can used calculate suitability value buffer around point. Possible values include: \"min\", \"mean\", \"max\", \"sum\", \"isNA\", \"notNA\". buffer.dist Numeric. distance xy coordinate calculate suitability value. output.name name file output. Separate words _. Relevant information might include name model used predict, spatial scale, temporal scale, type data points used predictions.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/predict_xy_suitability_CV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predicts suitability for xy coordinates according to a trained MaxEnt model WITH cross-validation ('SDMmodelCV' object) — predict_xy_suitability_CV","text":"function returns 3+ .csv files. xy_with_data: contains input xy coordinates value given environmental covariate location. xy_no_data: contains contains coordinates predicted NA value one covariates location. xy_pred_suit: main result file, contains coordinate, type record predicted suitability value. One result file returned per predict.type, predict.fun buffer.fun combination.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/predict_xy_suitability_CV.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predicts suitability for xy coordinates according to a trained MaxEnt model WITH cross-validation ('SDMmodelCV' object) — predict_xy_suitability_CV","text":"function requires packages 'cli', 'terra', 'tidyverse', 'SDMtune'. xy coordinates need within training area model, clamping applied within training (clamp.pred = TRUE).","code":""},{"path":[]},{"path":"https://ieco-lab.github.io/slfSpread/reference/rescale_cloglog_suitability.html","id":null,"dir":"Reference","previous_headings":"","what":"Rescales cloglog suitability output from MaxEnt model as an exponential. — rescale_cloglog_suitability","title":"Rescales cloglog suitability output from MaxEnt model as an exponential. — rescale_cloglog_suitability","text":"function take cloglog suitability output MaxEnt, 0-1 scale, re-scale around set median value. range values still 0-1, median now value thresh parameter. scaling function applied exponential, purposes visualizing suitability change around critical threshold (scale 0-1, can often hard see changes across suitability threshold value small). function work correctly desired threshold value 0. function inputs co-authored Jacob Woods.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/rescale_cloglog_suitability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rescales cloglog suitability output from MaxEnt model as an exponential. — rescale_cloglog_suitability","text":"","code":"rescale_cloglog_suitability(   xy.predicted,   thresh,   exponential.file,   summary.file,   rescale.name = NA,   rescale.thresholds = FALSE )"},{"path":"https://ieco-lab.github.io/slfSpread/reference/rescale_cloglog_suitability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rescales cloglog suitability output from MaxEnt model as an exponential. — rescale_cloglog_suitability","text":"xy.predicted Data import. predicted cloglog suitability longitude latitude data. output taken one internal package functions: predict_xy_suitability() predict_xy_suitability_CV(). See details specifics formatting. thresh Numeric Character. may imported manually (numeric), may selected one thresholds model (character). See details list preset options usages. exponential.file Data import. .csv file data frame. Contains comprehensive list possible threshold values corresponding c1, c2 ans c3 values. x equal original suitability value y equal transformed version suitability value, values used exponential function \"y = c1 * c2^x + c3\". summary.file Data import. .csv file data frame. Contains preset values thresholds. import, file path format produced file.path() function (.e. '/' instead '\\'). global regional model, file containing summary statistics created one following internal package functions: compute_MaxEnt_summary_statistics(), filename ending \"_summary.csv\", compute_MaxEnt_summary_statistics_CV(), filename ending \"_summary_all_iterations.csv\". regional_ensemble model, file end \"_threshold_values.csv\" rescale.name Character. Descriptive name given column rescaled values. rescale.thresholds Logical. true, function also rescale list thesholds given thresh presets list. thresholds rescaled reference threshold specified thresh. advised visualizing multiple thresholds.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/rescale_cloglog_suitability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rescales cloglog suitability output from MaxEnt model as an exponential. — rescale_cloglog_suitability","text":"Returns input data frame additional column containing re-scaled exponential values cloglog suitability. rescale.thresholds = TRUE, return list data frames. first object list rescaled suitability values, second object list rescaled thresholds.","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/rescale_cloglog_suitability.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rescales cloglog suitability output from MaxEnt model as an exponential. — rescale_cloglog_suitability","text":"Requires following packages: 'tidyverse', 'cli'. function based exponential equation form: f(x) = c_1 * c_2^x + c_3 x input suitability value f(x) transformed value x respect thresh median range. function calls reference table transform thresh (z) respective value f(z) = 0.5 exponential scale. values exponential equation found using equation: log((0.5 - c_3) / c1) / log(c_2)","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/rescale_cloglog_suitability.html","id":"xy-predicted","dir":"Reference","previous_headings":"","what":"xy.predicted","title":"Rescales cloglog suitability output from MaxEnt model as an exponential. — rescale_cloglog_suitability","text":"Fromatting: data.frame .csv file. columns order: descriptive columns, x (longitude), y (latitude), cloglog suitability (last column). import, file path format produced file.path() function (.e. '/' instead '\\').","code":""},{"path":"https://ieco-lab.github.io/slfSpread/reference/rescale_cloglog_suitability.html","id":"thresh-","dir":"Reference","previous_headings":"","what":"thresh:","title":"Rescales cloglog suitability output from MaxEnt model as an exponential. — rescale_cloglog_suitability","text":"Thresh presets list: MTP = Minimum Training Presence MTP.CC = (regional_ensemble model ) Minimum Training Presence, transformed climate predictions. MTSS = Maximum training sensitivity plus specificity MTSS.CC = (regional_ensemble model ) Maximum training sensitivity plus specificity, transformed climate predictions.","code":""},{"path":[]}]

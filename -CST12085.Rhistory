# create main layer for future cropping, crop to new ext
ref_chelsa_bio1_main <- terra::crop(x = ref_chelsa_bio1_main, y = ext.obj)
# create main layer for future cropping, crop to new ext
ref_chelsa_bio1_main <- terra::crop(x = ref_chelsa_bio1_main, y = ext.obj)
# create a mask layer specifically for the cropping and masking
ref_wc_bio1_mask <- terra::crop(x = ref_wc_bio1_mask, y = ext.obj)
main_layer <- terra::project(x = ref_chelsa_bio1_main, y = "ESRI:54009", method = "bilinear", threads = TRUE)
# set extent
# set ext to the smallest whole number shared between the layers
ext.obj <- terra::ext(-179, 179, -60, 60)
# create main layer for future cropping, crop to new ext
ref_chelsa_bio1_main <- terra::crop(x = ref_chelsa_bio1_main, y = ext.obj)
# create main layer for future cropping, crop to new ext
ref_chelsa_bio1_main <- terra::crop(x = ref_chelsa_bio1_main, y = ext.obj)
# create a mask layer specifically for the cropping and masking
ref_wc_bio1_mask <- terra::crop(x = ref_wc_bio1_mask, y = ext.obj)
# create main layer for future cropping, crop to new ext
ref_chelsa_bio1_main <- terra::crop(x = ref_chelsa_bio1_main, y = ext.obj)
# create a mask layer specifically for the cropping and masking
ref_wc_bio1_mask <- terra::crop(x = ref_wc_bio1_mask, y = ext.obj)
main_layer <- terra::project(x = ref_chelsa_bio1_main, y = "ESRI:54009", method = "bilinear", threads = TRUE)
mypath <- file.path(here::here() %>%
dirname(),
"maxent/historical_climate_rasters/chelsa2.1_30arcsec")
# 1st chelsa bioclim layer as reference
ref_chelsa_bio1_main <- terra::rast(x = file.path(mypath, "originals", "CHELSA_bio1_1981-2010_V.2.1.tif"))
mypath <- file.path(here::here() %>%
dirname(),
"maxent/historical_climate_rasters/wc2.1_30arcsec")
ref_wc_bio1_mask <- terra::rast(x = file.path(mypath, "originals", "wc2.1_30s_bio_1.tif"))
# set path to external directory
mypath <- file.path(here::here() %>%
dirname(),
"maxent/historical_climate_rasters/chelsa2.1_30arcsec")
# I will load in the files and then get the new names I would like to give them
# load in bioclim layers to be cropped- the original .tif files
env.files <- list.files(path = file.path(mypath, "originals"), pattern = "\\.tif$", full.names = TRUE)
# output file names
output.files <- list.files(path = file.path(mypath, "originals"), pattern = "\\.tif$", full.names = FALSE) %>%
# get rid of filetype endings
gsub(pattern = ".tif", replacement = "") %>%
# crop off ending
gsub(pattern = "_V.2.1", replacement = "") %>%
tolower()
# more edits to file names
output.files <- output.files %>%
gsub(pattern = "chelsa_", replacement = "") %>%
# specifically edit the access to cities naming
gsub(pattern = "2015_accessibility_to_cities_v1.0", replacement = "atc_2015")
env.files <- grep("bio2|bio11|bio12|bio15", env.files, value = TRUE)
output.files <- grep("bio2|bio11|bio12|bio15", output.files, value = TRUE)
crs("EPSG:4326", parse = TRUE)
crs("ESRI:54009", parse = TRUE)
# resolutions
res(ref_chelsa_bio1_main)
res(ref_wc_bio1_mask)
# ext of the reference layers
ext(ref_chelsa_bio1_main)
ext(ref_wc_bio1_mask)
# crs of reference layers
terra::crs(ref_chelsa_bio1_main, parse = TRUE)
terra::crs(ref_wc_bio1_mask, parse = TRUE)
# set extent
# set ext to the smallest whole number shared between the layers
ext.obj <- terra::ext(-150, 150, -88, 83)
# create main layer for future cropping, crop to new ext
ref_chelsa_bio1_main <- terra::crop(x = ref_chelsa_bio1_main, y = ext.obj)
# create a mask layer specifically for the cropping and masking
ref_wc_bio1_mask <- terra::crop(x = ref_wc_bio1_mask, y = ext.obj)
# create a mask layer specifically for the cropping and masking
ref_wc_bio1_mask <- terra::crop(x = ref_wc_bio1_mask, y = ext.obj)
# check origin
terra::origin(ref_chelsa_bio1_main)
terra::origin(ref_wc_bio1_mask)
# unify origins
# set origin of ref_wc_bio1_mask
terra::origin(ref_wc_bio1_mask) <- c(-0.0001396088, -0.0001392488)
# resample mask to main layer because origins are different- most rasters will already have the origin of the bio1 layer
ref_wc_bio1_mask <- terra::resample(x = ref_wc_bio1_mask, y = ref_chelsa_bio1_main, method = "bilinear", threads = TRUE)
# project to equal area projection
main_layer <- terra::project(x = ref_chelsa_bio1_main, y = "ESRI:54009", method = "bilinear", threads = TRUE)
# set extent
# set ext to the smallest whole number shared between the layers
ext.obj <- terra::ext(-150, 150, -50, 50)
# create main layer for future cropping, crop to new ext
ref_chelsa_bio1_main <- terra::crop(x = ref_chelsa_bio1_main, y = ext.obj)
# create main layer for future cropping, crop to new ext
ref_chelsa_bio1_main <- terra::crop(x = ref_chelsa_bio1_main, y = ext.obj)
# create a mask layer specifically for the cropping and masking
ref_wc_bio1_mask <- terra::crop(x = ref_wc_bio1_mask, y = ext.obj)
main_layer <- terra::project(x = ref_chelsa_bio1_main, y = "ESRI:54009", method = "bilinear", threads = TRUE)
mask_layer <- terra::project(x = ref_wc_bio1_mask, y = "ESRI:54009", method = "bilinear", threads = TRUE)
# check
terra::ext(main_layer)
terra::ext(mask_layer)
terra::origin(main_layer)
terra::origin(mask_layer)
terra::crs(main_layer, parse = TRUE)
terra::crs(mask_layer, parse = TRUE)
mypath <- file.path(here::here() %>%
dirname(),
"maxent/historical_climate_rasters/chelsa2.1_30arcsec")
# 1st chelsa bioclim layer as reference
ref_chelsa_bio1_main <- terra::rast(x = file.path(mypath, "originals", "CHELSA_bio1_1981-2010_V.2.1.tif"))
mypath <- file.path(here::here() %>%
dirname(),
"maxent/historical_climate_rasters/wc2.1_30arcsec")
ref_wc_bio1_mask <- terra::rast(x = file.path(mypath, "originals", "wc2.1_30s_bio_1.tif"))
# set path to external directory
mypath <- file.path(here::here() %>%
dirname(),
"maxent/historical_climate_rasters/chelsa2.1_30arcsec")
# I will load in the files and then get the new names I would like to give them
# load in bioclim layers to be cropped- the original .tif files
env.files <- list.files(path = file.path(mypath, "originals"), pattern = "\\.tif$", full.names = TRUE)
# output file names
output.files <- list.files(path = file.path(mypath, "originals"), pattern = "\\.tif$", full.names = FALSE) %>%
# get rid of filetype endings
gsub(pattern = ".tif", replacement = "") %>%
# crop off ending
gsub(pattern = "_V.2.1", replacement = "") %>%
tolower()
# more edits to file names
output.files <- output.files %>%
gsub(pattern = "chelsa_", replacement = "") %>%
# specifically edit the access to cities naming
gsub(pattern = "2015_accessibility_to_cities_v1.0", replacement = "atc_2015")
env.files <- grep("bio2|bio11|bio12|bio15", env.files, value = TRUE)
output.files <- grep("bio2|bio11|bio12|bio15", output.files, value = TRUE)
# resolutions
res(ref_chelsa_bio1_main)
res(ref_wc_bio1_mask)
# they are identical
# ext of the reference layers
ext(ref_chelsa_bio1_main)
ext(ref_wc_bio1_mask)
# the extents will need to be corrected
# crs of reference layers
terra::crs(ref_chelsa_bio1_main, parse = TRUE)
terra::crs(ref_wc_bio1_mask, parse = TRUE)
# they are epsg 4326, which I will change
# set extent
# set ext to the smallest whole number shared between the layers
ext.obj <- terra::ext(-179, 179, -50, 50)
# create main layer for future cropping, crop to new ext
ref_chelsa_bio1_main <- terra::crop(x = ref_chelsa_bio1_main, y = ext.obj)
# create a mask layer specifically for the cropping and masking
ref_wc_bio1_mask <- terra::crop(x = ref_wc_bio1_mask, y = ext.obj)
# check origin
terra::origin(ref_chelsa_bio1_main)
terra::origin(ref_wc_bio1_mask)
# the origin of ref_wc_bio1_mask will need to be changed to match the others
# unify origins
# set origin of ref_wc_bio1_mask
terra::origin(ref_wc_bio1_mask) <- c(-0.0001396088, -0.0001392488)
# resample mask to main layer because origins are different- most rasters will already have the origin of the bio1 layer
ref_wc_bio1_mask <- terra::resample(x = ref_wc_bio1_mask, y = ref_chelsa_bio1_main, method = "bilinear", threads = TRUE)
# project to equal area projection
main_layer <- terra::project(x = ref_chelsa_bio1_main, y = "ESRI:54009", method = "bilinear", threads = TRUE)
mypath <- file.path(here::here() %>%
dirname(),
"maxent/historical_climate_rasters/chelsa2.1_30arcsec")
# 1st chelsa bioclim layer as reference
ref_chelsa_bio1_main <- terra::rast(x = file.path(mypath, "originals", "CHELSA_bio1_1981-2010_V.2.1.tif"))
mypath <- file.path(here::here() %>%
dirname(),
"maxent/historical_climate_rasters/wc2.1_30arcsec")
ref_wc_bio1_mask <- terra::rast(x = file.path(mypath, "originals", "wc2.1_30s_bio_1.tif"))
# set path to external directory
mypath <- file.path(here::here() %>%
dirname(),
"maxent/historical_climate_rasters/chelsa2.1_30arcsec")
# I will load in the files and then get the new names I would like to give them
# load in bioclim layers to be cropped- the original .tif files
env.files <- list.files(path = file.path(mypath, "originals"), pattern = "\\.tif$", full.names = TRUE)
# output file names
output.files <- list.files(path = file.path(mypath, "originals"), pattern = "\\.tif$", full.names = FALSE) %>%
# get rid of filetype endings
gsub(pattern = ".tif", replacement = "") %>%
# crop off ending
gsub(pattern = "_V.2.1", replacement = "") %>%
tolower()
# more edits to file names
output.files <- output.files %>%
gsub(pattern = "chelsa_", replacement = "") %>%
# specifically edit the access to cities naming
gsub(pattern = "2015_accessibility_to_cities_v1.0", replacement = "atc_2015")
env.files <- grep("bio2|bio11|bio12|bio15", env.files, value = TRUE)
output.files <- grep("bio2|bio11|bio12|bio15", output.files, value = TRUE)
crs("EPSG:4326", parse = TRUE)
crs("ESRI:54009", parse = TRUE)
# resolutions
res(ref_chelsa_bio1_main)
res(ref_wc_bio1_mask)
# they are identical
# ext of the reference layers
ext(ref_chelsa_bio1_main)
ext(ref_wc_bio1_mask)
# the extents will need to be corrected
# crs of reference layers
terra::crs(ref_chelsa_bio1_main, parse = TRUE)
terra::crs(ref_wc_bio1_mask, parse = TRUE)
# they are epsg 4326, which I will change
# set extent
# set ext to the smallest whole number shared between the layers
ext.obj <- terra::ext(-179, 179, -89, 83)
# create main layer for future cropping, crop to new ext
ref_chelsa_bio1_main <- terra::crop(x = ref_chelsa_bio1_main, y = ext.obj)
# create a mask layer specifically for the cropping and masking
ref_wc_bio1_mask <- terra::crop(x = ref_wc_bio1_mask, y = ext.obj)
# check origin
terra::origin(ref_chelsa_bio1_main)
terra::origin(ref_wc_bio1_mask)
# the origin of ref_wc_bio1_mask will need to be changed to match the others
# unify origins
# set origin of ref_wc_bio1_mask
terra::origin(ref_wc_bio1_mask) <- c(-0.0001396088, -0.0001392488)
# resample mask to main layer because origins are different- most rasters will already have the origin of the bio1 layer
ref_wc_bio1_mask <- terra::resample(x = ref_wc_bio1_mask, y = ref_chelsa_bio1_main, method = "bilinear", threads = TRUE)
# project to equal area projection
main_layer <- terra::project(x = ref_chelsa_bio1_main, y = "ESRI:54009", method = "bilinear", threads = TRUE)
mask_layer <- terra::project(x = ref_wc_bio1_mask, y = "ESRI:54009", method = "bilinear", threads = TRUE)
# check
terra::ext(main_layer)
terra::ext(mask_layer)
terra::origin(main_layer)
terra::origin(mask_layer)
terra::crs(main_layer, parse = TRUE)
terra::crs(mask_layer, parse = TRUE)
mypath <- file.path(here::here() %>%
dirname(),
"maxent/historical_climate_rasters/chelsa2.1_30arcsec")
# view list of filetypes for terra, use .ascii
terra::gdal(drivers = TRUE)
# loop to crop extent for all files
for(a in seq_along(env.files)) {
# load each raster into temp object
rast.hold <- terra::rast(env.files[a])
# begin edits
# crop new rasters to extent
rast.hold <- terra::crop(x = rast.hold, y = ext.obj, overwrite = FALSE)
# mask the bioclim layers by global_atc
rast.hold <- terra::mask(x = rast.hold, mask = mask_layer)
# set crs
rast.hold <- terra::project(x = rast.hold, y = "ESRI:54009", method = "bilinear", threads = TRUE)
# set origin
terra::origin(rast.hold) <- c(-0.0001396088, -0.0001392488)
#resample to fit the extent/resolution of the main layer global_bio1
#use bilinear interpolation, since values are continuous
rast.hold <- terra::resample(x = rast.hold, y = main_layer, method = "bilinear", threads = TRUE)
# crop again to ensure aggregation doesnt increase extent
rast.hold <- terra::crop(x = rast.hold, y = ext.obj, overwrite = FALSE)
#write out the new resampled rasters!
terra::writeRaster(
x = rast.hold,
filename = file.path(mypath, "v1", paste0(output.files[a], "_global_epsg53017", ".tif")),
filetype = "GTiff",
overwrite = FALSE
)
# remove object once its done
rm(rast.hold)
}
output.files
env.files
rast.hold <- terra::rast(env.files[1])
rast.hold <- terra::rast(env.files[1])
env.files[1]
# set path to external directory
mypath <- file.path(here::here() %>%
dirname(),
"maxent/historical_climate_rasters/chelsa2.1_30arcsec")
# I will load in the files and then get the new names I would like to give them
# load in bioclim layers to be cropped- the original .tif files
env.files <- list.files(path = file.path(mypath, "originals"), pattern = "\\.tif$", full.names = TRUE)
# output file names
output.files <- list.files(path = file.path(mypath, "originals"), pattern = "\\.tif$", full.names = FALSE) %>%
# get rid of filetype endings
gsub(pattern = ".tif", replacement = "") %>%
# crop off ending
gsub(pattern = "_V.2.1", replacement = "") %>%
tolower()
# more edits to file names
output.files <- output.files %>%
gsub(pattern = "chelsa_", replacement = "") %>%
# specifically edit the access to cities naming
gsub(pattern = "2015_accessibility_to_cities_v1.0", replacement = "atc_2015")
env.files <- grep("bio2|bio11|bio12|bio15", env.files, value = TRUE)
output.files <- grep("bio2|bio11|bio12|bio15", output.files, value = TRUE)
# view list of filetypes for terra, use .ascii
terra::gdal(drivers = TRUE)
# loop to crop extent for all files
for(a in seq_along(env.files)) {
# load each raster into temp object
rast.hold <- terra::rast(env.files[a])
# begin edits
# crop new rasters to extent
rast.hold <- terra::crop(x = rast.hold, y = ext.obj)
# mask the bioclim layers by global_atc
rast.hold <- terra::mask(x = rast.hold, mask = mask_layer)
# set crs
rast.hold <- terra::project(x = rast.hold, y = "ESRI:54009", method = "bilinear", threads = TRUE)
# set origin
terra::origin(rast.hold) <- c(-0.0001396088, -0.0001392488)
#resample to fit the extent/resolution of the main layer global_bio1
#use bilinear interpolation, since values are continuous
rast.hold <- terra::resample(x = rast.hold, y = main_layer, method = "bilinear", threads = TRUE)
# crop again to ensure aggregation doesnt increase extent
rast.hold <- terra::crop(x = rast.hold, y = ext.obj)
#write out the new resampled rasters!
terra::writeRaster(
x = rast.hold,
filename = file.path(mypath, "v1", paste0(output.files[a], "_global_ESRI54009", ".tif")),
filetype = "GTiff",
overwrite = FALSE
)
# remove object once its done
rm(rast.hold)
}
# check
terra::ext(main_layer)
terra::ext(mask_layer)
# view list of filetypes for terra, use .ascii
terra::gdal(drivers = TRUE)
# loop to crop extent for all files
for(a in seq_along(env.files)) {
# load each raster into temp object
rast.hold <- terra::rast(env.files[a])
# begin edits
# crop new rasters to extent
rast.hold <- terra::crop(x = rast.hold, y = ext.obj)
# project crs
rast.hold <- terra::project(x = rast.hold, y = "ESRI:54009", method = "bilinear", threads = TRUE)
# mask the bioclim layers by global_atc
rast.hold <- terra::mask(x = rast.hold, mask = mask_layer)
# set origin
terra::origin(rast.hold) <- c(-0.0001396088, -0.0001392488)
#resample to fit the extent/resolution of the main layer global_bio1
#use bilinear interpolation, since values are continuous
rast.hold <- terra::resample(x = rast.hold, y = main_layer, method = "bilinear", threads = TRUE)
# crop again to ensure aggregation doesnt increase extent
rast.hold <- terra::crop(x = rast.hold, y = ext.obj)
#write out the new resampled rasters!
terra::writeRaster(
x = rast.hold,
filename = file.path(mypath, "v1", paste0(output.files[a], "_global_ESRI54009", ".tif")),
filetype = "GTiff",
overwrite = FALSE
)
# remove object once its done
rm(rast.hold)
}
mypath <- file.path(here::here() %>%
dirname(),
"maxent/historical_climate_rasters/chelsa2.1_30arcsec")
# 1st chelsa bioclim layer as reference
ref_chelsa_bio1_main <- terra::rast(x = file.path(mypath, "originals", "CHELSA_bio1_1981-2010_V.2.1.tif"))
mypath <- file.path(here::here() %>%
dirname(),
"maxent/historical_climate_rasters/wc2.1_30arcsec")
ref_wc_bio1_mask <- terra::rast(x = file.path(mypath, "originals", "wc2.1_30s_bio_1.tif"))
# set path to external directory
mypath <- file.path(here::here() %>%
dirname(),
"maxent/historical_climate_rasters/chelsa2.1_30arcsec")
# I will load in the files and then get the new names I would like to give them
# load in bioclim layers to be cropped- the original .tif files
env.files <- list.files(path = file.path(mypath, "originals"), pattern = "\\.tif$", full.names = TRUE)
# output file names
output.files <- list.files(path = file.path(mypath, "originals"), pattern = "\\.tif$", full.names = FALSE) %>%
# get rid of filetype endings
gsub(pattern = ".tif", replacement = "") %>%
# crop off ending
gsub(pattern = "_V.2.1", replacement = "") %>%
tolower()
# more edits to file names
output.files <- output.files %>%
gsub(pattern = "chelsa_", replacement = "") %>%
# specifically edit the access to cities naming
gsub(pattern = "2015_accessibility_to_cities_v1.0", replacement = "atc_2015")
if(TRUE) {
env.files <- grep("bio2|bio11|bio12|bio15", env.files, value = TRUE)
output.files <- grep("bio2|bio11|bio12|bio15", output.files, value = TRUE)
}
# resolutions
res(ref_chelsa_bio1_main)
res(ref_wc_bio1_mask)
# they are identical
# ext of the reference layers
ext(ref_chelsa_bio1_main)
ext(ref_wc_bio1_mask)
# the extents will need to be corrected
# crs of reference layers
terra::crs(ref_chelsa_bio1_main, parse = TRUE)
terra::crs(ref_wc_bio1_mask, parse = TRUE)
# they are epsg 4326, which I will change
# set extent
# set ext to the smallest whole number shared between the layers
ext.obj <- terra::ext(-180, 180, -90, 90)
# create main layer for future cropping, crop to new ext
ref_chelsa_bio1_main <- terra::crop(x = ref_chelsa_bio1_main, y = ext.obj)
# create a mask layer specifically for the cropping and masking
ref_wc_bio1_mask <- terra::crop(x = ref_wc_bio1_mask, y = ext.obj)
# check origin
terra::origin(ref_chelsa_bio1_main)
terra::origin(ref_wc_bio1_mask)
# the origin of ref_wc_bio1_mask will need to be changed to match the others
# unify origins
# set origin of ref_wc_bio1_mask
terra::origin(ref_wc_bio1_mask) <- c(-0.0001396088, -0.0001392488)
# resample mask to main layer because origins are different- most rasters will already have the origin of the bio1 layer
ref_wc_bio1_mask <- terra::resample(x = ref_wc_bio1_mask, y = ref_chelsa_bio1_main, method = "bilinear", threads = TRUE)
# project to equal area projection
main_layer <- terra::project(x = ref_chelsa_bio1_main, y = "ESRI:54009", method = "bilinear", threads = TRUE)
mask_layer <- terra::project(x = ref_wc_bio1_mask, y = "ESRI:54009", method = "bilinear", threads = TRUE)
# set ext to the smallest whole number shared between the layers
ext.obj <- terra::ext(-179, 179, -89, 83)
# create main layer for future cropping, crop to new ext
ref_chelsa_bio1_main <- terra::crop(x = ref_chelsa_bio1_main, y = ext.obj)
# create a mask layer specifically for the cropping and masking
ref_wc_bio1_mask <- terra::crop(x = ref_wc_bio1_mask, y = ext.obj)
# check
terra::ext(main_layer)
terra::ext(mask_layer)
terra::origin(main_layer)
terra::origin(mask_layer)
terra::crs(main_layer, parse = TRUE)
terra::crs(mask_layer, parse = TRUE)
library(tidyverse)  #data manipulation
library(here) #making directory pathways easier on different instances
here::here()
library(devtools)
# spatial
library(terra)
# devtools::install_github("danlwarren/ENMTools")
library(ENMTools) # env covariates colinearity
library(patchwork)
mypath <- file.path(here::here() %>%
dirname(),
"maxent/historical_climate_rasters/chelsa2.1_30arcsec")
# 1st chelsa bioclim layer as reference
ref_chelsa_bio1_main <- terra::rast(x = file.path(mypath, "originals", "CHELSA_bio1_1981-2010_V.2.1.tif"))
# set path to external directory
mypath <- file.path(here::here() %>%
dirname(),
"maxent/historical_climate_rasters/chelsa2.1_30arcsec")
# I will load in the files and then get the new names I would like to give them
# load in bioclim layers to be cropped- the original .tif files
env.files <- list.files(path = file.path(mypath, "originals"), pattern = "\\.tif$", full.names = TRUE)
# output file names
output.files <- list.files(path = file.path(mypath, "originals"), pattern = "\\.tif$", full.names = FALSE) %>%
# get rid of filetype endings
gsub(pattern = ".tif", replacement = "") %>%
# crop off ending
gsub(pattern = "_V.2.1", replacement = "") %>%
tolower()
# more edits to file names
output.files <- output.files %>%
gsub(pattern = "chelsa_", replacement = "") %>%
# specifically edit the access to cities naming
gsub(pattern = "2015_accessibility_to_cities_v1.0", replacement = "atc_2015")
if(TRUE) {
env.files <- grep("bio2|bio11|bio12|bio15", env.files, value = TRUE)
output.files <- grep("bio2|bio11|bio12|bio15", output.files, value = TRUE)
}
crs("EPSG:4326", parse = TRUE)
crs("ESRI:54017", parse = TRUE)
# resolutions
res(ref_chelsa_bio1_main)
res(ref_wc_bio1_mask)
# they are identical
# ext of the reference layers
ext(ref_chelsa_bio1_main)
ext(ref_wc_bio1_mask)
# the extents will need to be corrected
# crs of reference layers
terra::crs(ref_chelsa_bio1_main, parse = TRUE)
terra::crs(ref_wc_bio1_mask, parse = TRUE)
# they are epsg 4326, which I will change
# set extent
# set ext to the smallest whole number shared between the layers
ext.obj <- terra::ext(-179, 179, -89, 83)
# create main layer for future cropping, crop to new ext
ref_chelsa_bio1_main <- terra::crop(x = ref_chelsa_bio1_main, y = ext.obj)
# create a mask layer specifically for the cropping and masking
ref_wc_bio1_mask <- terra::crop(x = ref_wc_bio1_mask, y = ext.obj)
# check origin
terra::origin(ref_chelsa_bio1_main)
terra::origin(ref_wc_bio1_mask)
# the origin of ref_wc_bio1_mask will need to be changed to match the others
# unify origins
# set origin of ref_wc_bio1_mask
terra::origin(ref_wc_bio1_mask) <- c(-0.0001396088, -0.0001392488)
# resample mask to main layer because origins are different- most rasters will already have the origin of the bio1 layer
ref_wc_bio1_mask <- terra::resample(x = ref_wc_bio1_mask, y = ref_chelsa_bio1_main, method = "bilinear", threads = TRUE)
# project to equal area projection
# project to equal area projection
main_layer <- terra::project(x = ref_chelsa_bio1_main, y = "ESRI:54017", method = "bilinear", threads = TRUE)
mask_layer <- terra::project(x = ref_wc_bio1_mask, y = "ESRI:54017", method = "bilinear", threads = TRUE)
terra::crs(main_layer, parse = TRUE)
terra::crs(mask_layer, parse = TRUE)
# check
terra::ext(main_layer)
terra::ext(mask_layer)
# record newest package versions in lockfile
renv::snapshot()
# first, check the status of your current package versions vs those in renv
renv::status()
# update packages
# only run as needed if a package breaks or something
renv::update()
# record newest package versions in lockfile
renv::snapshot()

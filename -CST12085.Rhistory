# aesthetics
xlim(0, 4250)
bio15_univar_combined <- ggplot() +
# global
geom_line(data = global_univar_bio15$data[[1]], aes(x = x, y = y, color = "global")) +
# native model data
geom_line(data = regional_native_univar_bio15$data[[1]], aes(x = x, y = y, color = "Rn (native)")) +
# invaded model data
geom_line(data = regional_invaded_univar_bio15$data[[1]], aes(x = x, y = y, color = "Ri.NAmerica")) +
# Ri.Asia model data
geom_line(data = regional_invaded_asian_univar_bio15$data[[1]], aes(x = x, y = y, color = "Ri.Asia")) +
# plot peak trendline and labels
# global
geom_vline(aes(xintercept = bio15_univar_max_activity_global, color = "global"), linetype = "dashed", linewidth = 0.5) +
# Rn (native)
geom_vline(aes(xintercept = bio15_univar_max_activity_values[[1]], color = "Rn (native)"), linetype = "dashed", linewidth = 0.5) +
# invaded
geom_vline(aes(xintercept = bio15_univar_max_activity_values[[2]], color = "Ri.NAmerica"), linetype = "dashed", linewidth = 0.5) +
# Ri.Asia
geom_vline(aes(xintercept = bio15_univar_max_activity_values[[3]], color = "Ri.Asia"), linetype = "dashed", linewidth = 0.5) +
# plot rug plots
# Rn (native)
geom_rug(aes(x = regional_native_univar_bio15$data[[2]]$x, color = "Rn (native)"), sides = "t") +
# invaded
geom_rug(aes(x = regional_invaded_univar_bio15$data[[2]]$x, color = "Ri.NAmerica"), sides = "t", alpha = 0.8) +
# Ri.Asia
geom_rug(aes(x = regional_invaded_asian_univar_bio15$data[[2]]$x, color = "Ri.Asia"), sides = "t", alpha = 0.6) +
# default style
univar_plots_style +
# labels
labs(
subtitle = "Bio 15 (Precipitation Seasonality, CV)",
x = "Bio 15: precipitation seasonality (%)"
) +
# aesthetics
xlim(0, 120)
bio2_univar_combined <- ggplot() +
# global
geom_line(data = global_univar_bio2$data[[1]], aes(x = x, y = y, color = "global")) +
# Rn (native) model data
geom_line(data = regional_native_univar_bio2$data[[1]], aes(x = x, y = y, color = "Rn (native)")) +
# invaded model data
geom_line(data = regional_invaded_univar_bio2$data[[1]], aes(x = x, y = y, color = "Ri.NAmerica")) +
# Ri.Asia model data
geom_line(data = regional_invaded_asian_univar_bio2$data[[1]], aes(x = x, y = y, color = "Ri.Asia")) +
# plot peak trendline and labels
# global
geom_vline(aes(xintercept = bio15_univar_max_activity_global, color = "global"), linetype = "dashed", linewidth = 0.5) +
# Rn (native)
geom_vline(aes(xintercept = bio2_univar_max_activity_values[[1]], color = "Rn (native)"), linetype = "dashed", linewidth = 0.5) +
# invaded
geom_vline(aes(xintercept = bio2_univar_max_activity_values[[2]], color = "Ri.NAmerica"), linetype = "dashed", linewidth = 0.5) +
# Ri.Asia
geom_vline(aes(xintercept = bio2_univar_max_activity_values[[3]], color = "Ri.Asia"), linetype = "dashed", linewidth = 0.5) +
# plot rug plots
# Rn (native)
geom_rug(aes(x = regional_native_univar_bio2$data[[2]]$x, color = "Rn (native)"), sides = "t") +
# invaded
geom_rug(aes(x = regional_invaded_univar_bio2$data[[2]]$x, color = "Ri.NAmerica"), sides = "t", alpha = 0.8) +
# Ri.Asia
geom_rug(aes(x = regional_invaded_asian_univar_bio2$data[[2]]$x, color = "Ri.Asia"), sides = "t", alpha = 0.6) +
# default style
univar_plots_style +
# labels
labs(
subtitle = "Bio 2 (Mean Diurnal Range)",
x = "Bio 2: mean diurnal range (C)"
) +
# aesthetics
xlim(0, 15)
bio2_univar_combined  <- bio2_univar_combined +
theme(
plot.title = element_blank(),
plot.subtitle = element_blank(),
plot.caption = element_blank(),
plot.tag.location = "panel",
plot.tag.position = c(0.05, 0.9),
plot.tag = element_text(face = "bold", size = 25)
) +
labs(tag = "A")
bio11_univar_combined <- bio11_univar_combined +
theme(
plot.title = element_blank(),
plot.subtitle = element_blank(),
plot.caption = element_blank(),
plot.tag.location = "panel",
plot.tag.position = c(0.05, 0.9),
plot.tag = element_text(face = "bold", size = 25)
) +
labs(tag = "B")
bio12_univar_combined <- bio12_univar_combined +
theme(
plot.title = element_blank(),
plot.subtitle = element_blank(),
plot.caption = element_blank(),
plot.tag.location = "panel",
plot.tag.position = c(0.05, 0.9),
plot.tag = element_text(face = "bold", size = 25)
) +
labs(tag = "C")
bio15_univar_combined <- bio15_univar_combined +
theme(
plot.title = element_blank(),
plot.subtitle = element_blank(),
plot.caption = element_blank(),
plot.tag.location = "panel",
plot.tag.position = c(0.05, 0.9),
plot.tag = element_text(face = "bold", size = 25)
) +
labs(tag = "D")
univar_combined_patchwork <- (bio2_univar_combined + bio11_univar_combined + bio12_univar_combined + bio15_univar_combined) +
plot_annotation(title = "Univariate response of 'regional_ensemble' and 'global' models") +
plot_layout(axes = "collect_y", axis_titles = "collect_y", guides = "collect") & # collect y axis and legends
theme(legend.position = "bottom")
univar_combined_patchwork
ggsave(
univar_combined_patchwork,
filename = file.path(here::here(), "vignette-outputs", "figures", "regional_ensemble_global_combined_univar_resp_curve_cloglog_RAW.jpg"),
height = 8,
width = 10,
device = jpeg,
dpi = "retina"
)
univar_combined_patchwork_pt1 <- (bio2_univar_combined + bio11_univar_combined) +
plot_annotation(title = "Univariate response of 'regional_ensemble' and 'global' models") +
plot_layout(axes = "collect_y", axis_titles = "collect_y", guides = "collect", nrow = 2) & # collect y axis and legends
theme(legend.position = "bottom")
# save
ggsave(
univar_combined_patchwork_pt1,
filename = file.path(here::here(), "vignette-outputs", "figures", "regional_ensemble_global_combined_univar_resp_curve_cloglog_half1_RAW.jpg"),
height = 8,
width = 10,
device = jpeg,
dpi = "retina"
)
univar_combined_patchwork_pt2 <- (bio12_univar_combined + bio15_univar_combined) +
plot_annotation(title = "Univariate response of 'regional_ensemble' and 'global' models") +
plot_layout(axes = "collect_y", axis_titles = "collect_y", guides = "collect", nrow = 2) & # collect y axis and legends
theme(legend.position = "bottom")
# save
ggsave(
univar_combined_patchwork_pt2,
filename = file.path(here::here(), "vignette-outputs", "figures", "regional_ensemble_global_combined_univar_resp_curve_cloglog_half2_RAW.jpg"),
height = 8,
width = 10,
device = jpeg,
dpi = "retina"
)
mypath <- file.path(here::here() %>%
dirname(),
"maxent/models")
# global
global_conf_matr <- read_csv(file = file.path(mypath, "slf_global_v3", "global_thresh_confusion_matrix_all_iterations.csv")) %>%
# only MTSS threshold
slice(7)
# regional models
# native
regional_native_conf_matr <- read_csv(file = file.path(mypath, "slf_regional_native_v3", "regional_native_thresh_confusion_matrix.csv")) %>%
slice(7)
# invaded_asia
regional_invaded_asian_conf_matr <- read_csv(file = file.path(mypath, "slf_regional_invaded_asian_v2", "regional_invaded_asian_thresh_confusion_matrix.csv")) %>%
slice(7)
# invaded_NAmerica
regional_invaded_conf_matr <- read_csv(file = file.path(mypath, "slf_regional_invaded_v7", "regional_invaded_thresh_confusion_matrix.csv")) %>%
slice(7)
model_sens_spec <- tibble(
metric = rep(c("sensitivity", "specificity", "commission error", "omission error"), 4),
description = rep(c("true_positive rate", "true_negative rate", "1 - true_negative rate", "false_negative rate"), 4),
model = c(
rep("global", 4),
rep("regional\nnative", 4),
rep("regional\ninvaded NAmerica", 4),
rep("regional\ninvaded Asia", 4)
),
thresh = "MTSS.cloglog",
thresh_value = c(
rep(global_conf_matr$threshold_value, 4),
rep(regional_native_conf_matr$threshold_value, 4),
rep(regional_invaded_conf_matr$threshold_value, 4),
rep(regional_invaded_asian_conf_matr$threshold_value, 4)
),
test_pos = c(
rep(155, 4), # global
rep(54, 4),  # native
rep(68, 4), # invaded_NAmerica
rep(40, 4) # invaded_Asia
),
bg_neg = c(
rep(20000, 4), # global
rep(10000, 12) # regional
),
value = c(
# global
round(global_conf_matr$tp_mean / 155, 4), round(global_conf_matr$tn_mean / 20000, 4), round(1 - (global_conf_matr$tn_mean / 20000), 4), round((global_conf_matr$fn_mean / 20000), 4),
# native
round(regional_native_conf_matr$tp / 328, 4), round(regional_native_conf_matr$tn / 10000, 4), round(1 - (regional_native_conf_matr$tn / 10000), 4), round((regional_native_conf_matr$fn / 10000), 4),
# invaded_NAmerica
round(regional_invaded_conf_matr$tp / 241, 4), round(regional_invaded_conf_matr$tn / 10000, 4), round(1 - (regional_invaded_conf_matr$tn / 10000), 4), round((regional_invaded_conf_matr$fn / 10000), 4),
# invaded_asia
round(regional_invaded_asian_conf_matr$tp / 328, 4), round(regional_invaded_asian_conf_matr$tn / 10000, 4), round(1 - (regional_invaded_asian_conf_matr$tn / 10000), 4), round((regional_invaded_asian_conf_matr$fn / 10000), 4)
)
)
model_sens_spec
View(model_sens_spec)
model_sens_spec <- tibble(
metric = rep(c("sensitivity", "specificity", "commission error", "omission error"), 4),
description = rep(c("true_positive rate", "true_negative rate", "1 - true_negative rate", "false_negative rate"), 4),
model = c(
rep("global", 4),
rep("regional\nnative", 4),
rep("regional\ninvaded NAmerica", 4),
rep("regional\ninvaded Asia", 4)
),
thresh = "MTSS.cloglog",
thresh_value = c(
rep(global_conf_matr$threshold_value, 4),
rep(regional_native_conf_matr$threshold_value, 4),
rep(regional_invaded_conf_matr$threshold_value, 4),
rep(regional_invaded_asian_conf_matr$threshold_value, 4)
),
test_pos = c(
rep(155, 4), # global
rep(54, 4),  # native
rep(68, 4), # invaded_NAmerica
rep(40, 4) # invaded_Asia
),
bg_neg = c(
rep(20000, 4), # global
rep(10000, 12) # regional
),
value = c(
# global
round(global_conf_matr$tp_mean / 155, 4), round(global_conf_matr$tn_mean / 20000, 4), round(1 - (global_conf_matr$tn_mean / 20000), 4), round((global_conf_matr$fn_mean / 20000), 4),
# native
round(regional_native_conf_matr$tp / 54, 4), round(regional_native_conf_matr$tn / 10000, 4), round(1 - (regional_native_conf_matr$tn / 10000), 4), round((regional_native_conf_matr$fn / 10000), 4),
# invaded_NAmerica
round(regional_invaded_conf_matr$tp / 68, 4), round(regional_invaded_conf_matr$tn / 10000, 4), round(1 - (regional_invaded_conf_matr$tn / 10000), 4), round((regional_invaded_conf_matr$fn / 10000), 4),
# invaded_asia
round(regional_invaded_asian_conf_matr$tp / 40, 4), round(regional_invaded_asian_conf_matr$tn / 10000, 4), round(1 - (regional_invaded_asian_conf_matr$tn / 10000), 4), round((regional_invaded_asian_conf_matr$fn / 10000), 4)
)
)
write_csv(model_sens_spec, file.path(here::here(), "vignette-outputs", "data-tables", "model_sensitivity_specificity.csv"))
# add column formatting
model_sens_spec <- mutate(model_sens_spec, bg_neg = scales::label_comma() (bg_neg))
# convert to kable
model_sens_spec_kable <- knitr::kable(x = model_sens_spec, format = "html", escape = FALSE) %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = TRUE)
# save as .html
kableExtra::save_kable(
model_sens_spec_kable,
file = file.path(here::here(), "vignette-outputs", "figures", "model_sensitivity_specificity.html"),
self_contained = TRUE,
bs_theme = "simplex"
)
# initialize webshot by
# webshot::install_phantomjs()
# convert to pdf
webshot::webshot(
url = file.path(here::here(), "vignette-outputs", "figures", "model_sensitivity_specificity.html"),
file = file.path(here::here(), "vignette-outputs", "figures", "model_sensitivity_specificity.jpg"),
zoom = 2
)
# model extents
model_sens_spec_kable
round(regional_invaded_conf_matr$tp / 68, 4)
View(regional_invaded_conf_matr)
regional_invaded_conf_matr <- read_csv(file = file.path(mypath, "slf_regional_invaded_v7", "regional_invaded_thresh_confusion_matrix.csv"))
# general tools
library(tidyverse)  #data manipulation
library(here) #making directory pathways easier on different instances
# here() starts at the root folder of this package.
library(devtools)
library(dismo) # generate random background points
# spatial data handling
library(raster)
library(terra)
library(sf)
# spatial data sources
library(rnaturalearth)
library(rnaturalearthhires)
library(kgc) # koppen climate rasters
# aesthetics
library(webshot)
library(webshot2)
library(kableExtra)
library(patchwork)
mypath <- file.path(here::here() %>%
dirname(),
"maxent")
# background raster for plotting will be same as in last section
# load in slf points to intersect
slf_points <- read_rds(file = file.path(here::here(), "data", "slf_all_coords_final_2024-08-05.rds")) %>%
dplyr::select(-species)
# load in raster
regional_invaded_df <- terra::rast(x = file.path(mypath, "historical_climate_rasters", "chelsa2.1_30arcsec", "v1_maxent_10km", "atc_2015_regional_invaded_KG.asc")) %>%
terra::as.data.frame(., xy = TRUE)
# re-import point data
slf_points_invaded <- read_csv(file = file.path(here::here(), "vignette-outputs", "data-tables", "regional_invaded_train_slf_presences_v7.csv"))
# plot
regional_invaded_slf_plot <- ggplot() +
map_style +
# empty world map to force same aspect ratio
geom_sf(data = countries_sf, aes(geometry = geometry), fill = NA, color = NA) +
geom_raster(data = global_bio11_df, aes(x = x, y = y), fill = "azure4") +
geom_raster(data = regional_invaded_df, aes(x = x, y = y), fill = "azure1") +
geom_point(data = slf_points_invaded, aes(x = x, y = y), color = "darkorange", size = 0.5) +
labs(title = "'Ri.NAmerica' model SLF presences") +
coord_sf(xlim = c(-138.66681, -52.58347), ylim = c(19.12534, 60.83319))
map_style <- list(
xlab("longitude"),
ylab("latitude"),
theme_classic(),
theme(panel.background = element_rect(fill = "lightblue2",
colour = "lightblue2")
),
scale_x_continuous(expand = c(0, 0)),
scale_y_continuous(expand = c(0, 0)),
coord_sf()
)
# load in raster
regional_invaded_df <- terra::rast(x = file.path(mypath, "historical_climate_rasters", "chelsa2.1_30arcsec", "v1_maxent_10km", "atc_2015_regional_invaded_KG.asc")) %>%
terra::as.data.frame(., xy = TRUE)
# re-import point data
slf_points_invaded <- read_csv(file = file.path(here::here(), "vignette-outputs", "data-tables", "regional_invaded_train_slf_presences_v7.csv"))
# plot
regional_invaded_slf_plot <- ggplot() +
map_style +
# empty world map to force same aspect ratio
geom_sf(data = countries_sf, aes(geometry = geometry), fill = NA, color = NA) +
geom_raster(data = global_bio11_df, aes(x = x, y = y), fill = "azure4") +
geom_raster(data = regional_invaded_df, aes(x = x, y = y), fill = "azure1") +
geom_point(data = slf_points_invaded, aes(x = x, y = y), color = "darkorange", size = 0.5) +
labs(title = "'Ri.NAmerica' model SLF presences") +
coord_sf(xlim = c(-138.66681, -52.58347), ylim = c(19.12534, 60.83319))
# check which types of data are available
# these are in the rnaturalearth package
data(df_layers_cultural)
# I will use states_provinces
# get metadata
ne_metadata <- ne_find_vector_data(
scale = 10,
category = "cultural",
getmeta = TRUE
) %>%
dplyr::filter(layer == "admin_0_countries")
# if the file isnt already downloaded, download it
if (!file.exists(file.path(here::here(), "data-raw", "ne_countries", "ne_10m_admin_0_countries.shp"))) {
countries_sf <- rnaturalearth::ne_download(
scale = 10, # highest resolution
type = "admin_0_countries", # states and provinces
category = "cultural",
destdir = file.path(here::here(), "data-raw", "ne_countries"),
load = TRUE, # load into environment
returnclass = "sf" # shapefile
)
# else, just import
} else {
countries_sf <- sf::read_sf(dsn = file.path(here::here(), "data-raw", "ne_countries", "ne_10m_admin_0_countries.shp"))
}
# load in raster
regional_invaded_df <- terra::rast(x = file.path(mypath, "historical_climate_rasters", "chelsa2.1_30arcsec", "v1_maxent_10km", "atc_2015_regional_invaded_KG.asc")) %>%
terra::as.data.frame(., xy = TRUE)
# re-import point data
slf_points_invaded <- read_csv(file = file.path(here::here(), "vignette-outputs", "data-tables", "regional_invaded_train_slf_presences_v7.csv"))
# plot
regional_invaded_slf_plot <- ggplot() +
map_style +
# empty world map to force same aspect ratio
geom_sf(data = countries_sf, aes(geometry = geometry), fill = NA, color = NA) +
geom_raster(data = global_bio11_df, aes(x = x, y = y), fill = "azure4") +
geom_raster(data = regional_invaded_df, aes(x = x, y = y), fill = "azure1") +
geom_point(data = slf_points_invaded, aes(x = x, y = y), color = "darkorange", size = 0.5) +
labs(title = "'Ri.NAmerica' model SLF presences") +
coord_sf(xlim = c(-138.66681, -52.58347), ylim = c(19.12534, 60.83319))
# plot
regional_invaded_slf_plot <- ggplot() +
map_style +
# empty world map to force same aspect ratio
geom_sf(data = countries_sf, aes(geometry = geometry), fill = NA, color = NA) +
#geom_raster(data = global_bio11_df, aes(x = x, y = y), fill = "azure4") +
geom_raster(data = regional_invaded_df, aes(x = x, y = y), fill = "azure1") +
geom_point(data = slf_points_invaded, aes(x = x, y = y), color = "darkorange", size = 0.5) +
labs(title = "'Ri.NAmerica' model SLF presences") +
coord_sf(xlim = c(-138.66681, -52.58347), ylim = c(19.12534, 60.83319))
regional_invaded_slf_plot
# load in raster to choose points from
regional_invaded_bio11 <- raster::raster(x = file.path(mypath, "bio11_1981-2010_regional_invaded_KG.asc"))
mypath <- file.path(here::here() %>%
dirname(),
"maxent/historical_climate_rasters/chelsa2.1_30arcsec/v1_maxent_10km")
global_bio11_df <- terra::rast(x = file.path(mypath, "bio11_1981-2010_global.asc")) %>%
terra::as.data.frame(., xy = TRUE)
# load in raster
regional_invaded_df <- terra::rast(x = file.path(mypath, "historical_climate_rasters", "chelsa2.1_30arcsec", "v1_maxent_10km", "atc_2015_regional_invaded_KG.asc")) %>%
terra::as.data.frame(., xy = TRUE)
mypath <- file.path(here::here() %>%
dirname(),
"maxent")
# load in raster
regional_invaded_df <- terra::rast(x = file.path(mypath, "historical_climate_rasters", "chelsa2.1_30arcsec", "v1_maxent_10km", "atc_2015_regional_invaded_KG.asc")) %>%
terra::as.data.frame(., xy = TRUE)
# re-import point data
slf_points_invaded <- read_csv(file = file.path(here::here(), "vignette-outputs", "data-tables", "regional_invaded_train_slf_presences_v7.csv"))
# plot
regional_invaded_slf_plot <- ggplot() +
map_style +
# empty world map to force same aspect ratio
geom_sf(data = countries_sf, aes(geometry = geometry), fill = NA, color = NA) +
geom_raster(data = global_bio11_df, aes(x = x, y = y), fill = "azure1") +
geom_raster(data = regional_invaded_df, aes(x = x, y = y), fill = "azure1") +
geom_point(data = slf_points_invaded, aes(x = x, y = y), color = "darkorange", size = 0.5) +
labs(title = "'Ri.NAmerica' model SLF presences") +
coord_sf(xlim = c(-138.66681, -52.58347), ylim = c(19.12534, 60.83319))
regional_invaded_slf_plot
ggsave(
regional_invaded_slf_plot,
filename = file.path(here::here(), "vignette-outputs", "figures", "regional_invaded_train_slf_presences_v7_NO_KG_ZONES.jpg"),
height = 8,
width = 10,
device = jpeg,
dpi = 500
)
invaded_asian_df <- terra::rast(
x = file.path(mypath, "historical_climate_rasters", "chelsa2.1_30arcsec", "v1_maxent_10km", "atc_2015_regional_invaded_asian_KG.asc")
) %>%
terra::as.data.frame(., xy = TRUE)
# re-import point data
slf_points_invaded_asian <- read_csv(file = file.path(here::here(), "vignette-outputs", "data-tables", "regional_invaded_asian_train_slf_presences_v2.csv"))
# plot
regional_invaded_asian_slf_plot <- ggplot() +
map_style +
# empty world map to force same aspect ratio
geom_sf(data = countries_sf, aes(geometry = geometry), fill = NA, color = NA) +
geom_raster(data = global_bio11_df, aes(x = x, y = y), fill = "azure1") +
geom_raster(data = invaded_asian_df, aes(x = x, y = y), fill = "azure1") +
geom_point(data = slf_points_invaded_asian, aes(x = x, y = y), color = "darkorange", size = 1) +
labs(title = "'Ri.Asia' model SLF presences") +
coord_sf() +
scale_x_continuous(limits = c(122.93816, 149.74986), expand = c(0, 0)) +
scale_y_continuous(limits = c(30.49986, 46.58424), expand = c(0, 0))
regional_invaded_asian_slf_plot
ggsave(
regional_invaded_asian_slf_plot,
filename = file.path(here::here(), "vignette-outputs", "figures", "regional_invaded_asian_train_slf_presences_v2_NO_KG_ZONES.jpg"),
height = 8,
width = 10,
device = jpeg,
dpi = 500
)
# raster
regional_native_df <- terra::rast(
x = file.path(mypath, "historical_climate_rasters", "chelsa2.1_30arcsec", "v1_maxent_10km", "atc_2015_regional_native_KG.asc")
) %>%
terra::as.data.frame(., xy = TRUE)
# re-import point data
slf_points_native <- read_csv(file = file.path(here::here(), "vignette-outputs", "data-tables", "regional_native_train_slf_presences_v3.csv"))
# plot
regional_native_slf_plot <- ggplot() +
map_style +
# empty world map to force same aspect ratio
geom_sf(data = countries_sf, aes(geometry = geometry), fill = NA, color = NA) +
geom_raster(data = global_bio11_df, aes(x = x, y = y), fill = "azure1") +
geom_raster(data = regional_native_df, aes(x = x, y = y), fill = "azure1") +
geom_point(data = slf_points_native, aes(x = x, y = y), color = "darkorange", size = 1) +
labs(title = "'Rn' model SLF presences") +
coord_sf(xlim = c(72.666527, 140.999860), ylim = c(-9.666806, 53.249861))
ggsave(
regional_native_slf_plot,
filename = file.path(here::here(), "vignette-outputs", "figures", "regional_native_train_slf_presences_v3_NO_KG_ZONES.jpg"),
height = 8,
width = 10,
device = jpeg,
dpi = 500
)
renv::hydrate()
renv::status()
renv::hyrdate()
renv::hydrate()
install.packages("hexSticker")
renv::deactivate()
renv::init()
renv::remove("boot")
renv::remove("boot)
renv::remove(boot)
renv::remove(boot)
renv::remove(boot)
renv::remove("boot")
renv::remove("MASS")
renv::remove("nlme")
renv::remove("survival")
renv::install("nlme")
renv::remove("survival")
renv::install("survival")
renv::install("MASS")
renv::install("boot")
renv::status()
remove.package("slfSpread")
renv::status()
renv::deactivate(clean = TRUE)
renv::init()
renv::remove("slfSpread")
remove.package("slfSpread")
remove.packages("slfSpread")
renv::hydrate()
renv::status()
renv::init()
renv::hydrate()
renv::status()
renv::hydrate()
renv::deactivate()
gitcreds::gitcreds_set()
